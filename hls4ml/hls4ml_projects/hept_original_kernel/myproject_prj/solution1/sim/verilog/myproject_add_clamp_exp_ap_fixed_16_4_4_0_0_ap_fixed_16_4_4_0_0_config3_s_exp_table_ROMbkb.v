// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb (
    address0, ce0, q0, 
    address1, ce1, q1, 
    address2, ce2, q2, 
    address3, ce3, q3, 
    address4, ce4, q4, 
    address5, ce5, q5, 
    address6, ce6, q6, 
    address7, ce7, q7, 
    address8, ce8, q8, 
    address9, ce9, q9, 
    address10, ce10, q10, 
    address11, ce11, q11, 
    address12, ce12, q12, 
    address13, ce13, q13, 
    address14, ce14, q14, 
    address15, ce15, q15, 
    address16, ce16, q16, 
    address17, ce17, q17, 
    address18, ce18, q18, 
    address19, ce19, q19, 
    address20, ce20, q20, 
    address21, ce21, q21, 
    address22, ce22, q22, 
    address23, ce23, q23, 
    address24, ce24, q24, 
    address25, ce25, q25, 
    address26, ce26, q26, 
    address27, ce27, q27, 
    address28, ce28, q28, 
    address29, ce29, q29, 
    address30, ce30, q30, 
    address31, ce31, q31, 
    address32, ce32, q32, 
    address33, ce33, q33, 
    address34, ce34, q34, 
    address35, ce35, q35, 
    address36, ce36, q36, 
    address37, ce37, q37, 
    address38, ce38, q38, 
    address39, ce39, q39, 
    address40, ce40, q40, 
    address41, ce41, q41, 
    address42, ce42, q42, 
    address43, ce43, q43, 
    address44, ce44, q44, 
    address45, ce45, q45, 
    address46, ce46, q46, 
    address47, ce47, q47, 
    address48, ce48, q48, 
    address49, ce49, q49, 
    address50, ce50, q50, 
    address51, ce51, q51, 
    address52, ce52, q52, 
    address53, ce53, q53, 
    address54, ce54, q54, 
    address55, ce55, q55, 
    address56, ce56, q56, 
    address57, ce57, q57, 
    address58, ce58, q58, 
    address59, ce59, q59, 
    reset, clk);

parameter DataWidth = 16;
parameter AddressWidth = 10;
parameter AddressRange = 1024;
 
input[AddressWidth-1:0] address0;
input ce0;
output reg[DataWidth-1:0] q0;
 
input[AddressWidth-1:0] address1;
input ce1;
output reg[DataWidth-1:0] q1;
 
input[AddressWidth-1:0] address2;
input ce2;
output reg[DataWidth-1:0] q2;
 
input[AddressWidth-1:0] address3;
input ce3;
output reg[DataWidth-1:0] q3;
 
input[AddressWidth-1:0] address4;
input ce4;
output reg[DataWidth-1:0] q4;
 
input[AddressWidth-1:0] address5;
input ce5;
output reg[DataWidth-1:0] q5;
 
input[AddressWidth-1:0] address6;
input ce6;
output reg[DataWidth-1:0] q6;
 
input[AddressWidth-1:0] address7;
input ce7;
output reg[DataWidth-1:0] q7;
 
input[AddressWidth-1:0] address8;
input ce8;
output reg[DataWidth-1:0] q8;
 
input[AddressWidth-1:0] address9;
input ce9;
output reg[DataWidth-1:0] q9;
 
input[AddressWidth-1:0] address10;
input ce10;
output reg[DataWidth-1:0] q10;
 
input[AddressWidth-1:0] address11;
input ce11;
output reg[DataWidth-1:0] q11;
 
input[AddressWidth-1:0] address12;
input ce12;
output reg[DataWidth-1:0] q12;
 
input[AddressWidth-1:0] address13;
input ce13;
output reg[DataWidth-1:0] q13;
 
input[AddressWidth-1:0] address14;
input ce14;
output reg[DataWidth-1:0] q14;
 
input[AddressWidth-1:0] address15;
input ce15;
output reg[DataWidth-1:0] q15;
 
input[AddressWidth-1:0] address16;
input ce16;
output reg[DataWidth-1:0] q16;
 
input[AddressWidth-1:0] address17;
input ce17;
output reg[DataWidth-1:0] q17;
 
input[AddressWidth-1:0] address18;
input ce18;
output reg[DataWidth-1:0] q18;
 
input[AddressWidth-1:0] address19;
input ce19;
output reg[DataWidth-1:0] q19;
 
input[AddressWidth-1:0] address20;
input ce20;
output reg[DataWidth-1:0] q20;
 
input[AddressWidth-1:0] address21;
input ce21;
output reg[DataWidth-1:0] q21;
 
input[AddressWidth-1:0] address22;
input ce22;
output reg[DataWidth-1:0] q22;
 
input[AddressWidth-1:0] address23;
input ce23;
output reg[DataWidth-1:0] q23;
 
input[AddressWidth-1:0] address24;
input ce24;
output reg[DataWidth-1:0] q24;
 
input[AddressWidth-1:0] address25;
input ce25;
output reg[DataWidth-1:0] q25;
 
input[AddressWidth-1:0] address26;
input ce26;
output reg[DataWidth-1:0] q26;
 
input[AddressWidth-1:0] address27;
input ce27;
output reg[DataWidth-1:0] q27;
 
input[AddressWidth-1:0] address28;
input ce28;
output reg[DataWidth-1:0] q28;
 
input[AddressWidth-1:0] address29;
input ce29;
output reg[DataWidth-1:0] q29;
 
input[AddressWidth-1:0] address30;
input ce30;
output reg[DataWidth-1:0] q30;
 
input[AddressWidth-1:0] address31;
input ce31;
output reg[DataWidth-1:0] q31;
 
input[AddressWidth-1:0] address32;
input ce32;
output reg[DataWidth-1:0] q32;
 
input[AddressWidth-1:0] address33;
input ce33;
output reg[DataWidth-1:0] q33;
 
input[AddressWidth-1:0] address34;
input ce34;
output reg[DataWidth-1:0] q34;
 
input[AddressWidth-1:0] address35;
input ce35;
output reg[DataWidth-1:0] q35;
 
input[AddressWidth-1:0] address36;
input ce36;
output reg[DataWidth-1:0] q36;
 
input[AddressWidth-1:0] address37;
input ce37;
output reg[DataWidth-1:0] q37;
 
input[AddressWidth-1:0] address38;
input ce38;
output reg[DataWidth-1:0] q38;
 
input[AddressWidth-1:0] address39;
input ce39;
output reg[DataWidth-1:0] q39;
 
input[AddressWidth-1:0] address40;
input ce40;
output reg[DataWidth-1:0] q40;
 
input[AddressWidth-1:0] address41;
input ce41;
output reg[DataWidth-1:0] q41;
 
input[AddressWidth-1:0] address42;
input ce42;
output reg[DataWidth-1:0] q42;
 
input[AddressWidth-1:0] address43;
input ce43;
output reg[DataWidth-1:0] q43;
 
input[AddressWidth-1:0] address44;
input ce44;
output reg[DataWidth-1:0] q44;
 
input[AddressWidth-1:0] address45;
input ce45;
output reg[DataWidth-1:0] q45;
 
input[AddressWidth-1:0] address46;
input ce46;
output reg[DataWidth-1:0] q46;
 
input[AddressWidth-1:0] address47;
input ce47;
output reg[DataWidth-1:0] q47;
 
input[AddressWidth-1:0] address48;
input ce48;
output reg[DataWidth-1:0] q48;
 
input[AddressWidth-1:0] address49;
input ce49;
output reg[DataWidth-1:0] q49;
 
input[AddressWidth-1:0] address50;
input ce50;
output reg[DataWidth-1:0] q50;
 
input[AddressWidth-1:0] address51;
input ce51;
output reg[DataWidth-1:0] q51;
 
input[AddressWidth-1:0] address52;
input ce52;
output reg[DataWidth-1:0] q52;
 
input[AddressWidth-1:0] address53;
input ce53;
output reg[DataWidth-1:0] q53;
 
input[AddressWidth-1:0] address54;
input ce54;
output reg[DataWidth-1:0] q54;
 
input[AddressWidth-1:0] address55;
input ce55;
output reg[DataWidth-1:0] q55;
 
input[AddressWidth-1:0] address56;
input ce56;
output reg[DataWidth-1:0] q56;
 
input[AddressWidth-1:0] address57;
input ce57;
output reg[DataWidth-1:0] q57;
 
input[AddressWidth-1:0] address58;
input ce58;
output reg[DataWidth-1:0] q58;
 
input[AddressWidth-1:0] address59;
input ce59;
output reg[DataWidth-1:0] q59;

input reset;
input clk;

 
reg [DataWidth-1:0] rom0[0:AddressRange-1];
 
reg [DataWidth-1:0] rom1[0:AddressRange-1];
 
reg [DataWidth-1:0] rom2[0:AddressRange-1];
 
reg [DataWidth-1:0] rom3[0:AddressRange-1];
 
reg [DataWidth-1:0] rom4[0:AddressRange-1];
 
reg [DataWidth-1:0] rom5[0:AddressRange-1];
 
reg [DataWidth-1:0] rom6[0:AddressRange-1];
 
reg [DataWidth-1:0] rom7[0:AddressRange-1];
 
reg [DataWidth-1:0] rom8[0:AddressRange-1];
 
reg [DataWidth-1:0] rom9[0:AddressRange-1];
 
reg [DataWidth-1:0] rom10[0:AddressRange-1];
 
reg [DataWidth-1:0] rom11[0:AddressRange-1];
 
reg [DataWidth-1:0] rom12[0:AddressRange-1];
 
reg [DataWidth-1:0] rom13[0:AddressRange-1];
 
reg [DataWidth-1:0] rom14[0:AddressRange-1];
 
reg [DataWidth-1:0] rom15[0:AddressRange-1];
 
reg [DataWidth-1:0] rom16[0:AddressRange-1];
 
reg [DataWidth-1:0] rom17[0:AddressRange-1];
 
reg [DataWidth-1:0] rom18[0:AddressRange-1];
 
reg [DataWidth-1:0] rom19[0:AddressRange-1];
 
reg [DataWidth-1:0] rom20[0:AddressRange-1];
 
reg [DataWidth-1:0] rom21[0:AddressRange-1];
 
reg [DataWidth-1:0] rom22[0:AddressRange-1];
 
reg [DataWidth-1:0] rom23[0:AddressRange-1];
 
reg [DataWidth-1:0] rom24[0:AddressRange-1];
 
reg [DataWidth-1:0] rom25[0:AddressRange-1];
 
reg [DataWidth-1:0] rom26[0:AddressRange-1];
 
reg [DataWidth-1:0] rom27[0:AddressRange-1];
 
reg [DataWidth-1:0] rom28[0:AddressRange-1];
 
reg [DataWidth-1:0] rom29[0:AddressRange-1];


initial begin
     
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom0); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom1); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom2); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom3); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom4); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom5); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom6); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom7); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom8); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom9); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom10); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom11); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom12); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom13); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom14); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom15); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom16); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom17); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom18); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom19); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom20); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom21); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom22); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom23); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom24); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom25); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom26); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom27); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom28); 
    $readmemh("./myproject_add_clamp_exp_ap_fixed_16_4_4_0_0_ap_fixed_16_4_4_0_0_config3_s_exp_table_ROMbkb.dat", rom29);
end

  
always @(posedge clk) 
begin 
    if (ce0) 
    begin
        q0 <= rom0[address0];
    end
end
  
always @(posedge clk) 
begin 
    if (ce1) 
    begin
        q1 <= rom0[address1];
    end
end
  
always @(posedge clk) 
begin 
    if (ce2) 
    begin
        q2 <= rom1[address2];
    end
end
  
always @(posedge clk) 
begin 
    if (ce3) 
    begin
        q3 <= rom1[address3];
    end
end
  
always @(posedge clk) 
begin 
    if (ce4) 
    begin
        q4 <= rom2[address4];
    end
end
  
always @(posedge clk) 
begin 
    if (ce5) 
    begin
        q5 <= rom2[address5];
    end
end
  
always @(posedge clk) 
begin 
    if (ce6) 
    begin
        q6 <= rom3[address6];
    end
end
  
always @(posedge clk) 
begin 
    if (ce7) 
    begin
        q7 <= rom3[address7];
    end
end
  
always @(posedge clk) 
begin 
    if (ce8) 
    begin
        q8 <= rom4[address8];
    end
end
  
always @(posedge clk) 
begin 
    if (ce9) 
    begin
        q9 <= rom4[address9];
    end
end
  
always @(posedge clk) 
begin 
    if (ce10) 
    begin
        q10 <= rom5[address10];
    end
end
  
always @(posedge clk) 
begin 
    if (ce11) 
    begin
        q11 <= rom5[address11];
    end
end
  
always @(posedge clk) 
begin 
    if (ce12) 
    begin
        q12 <= rom6[address12];
    end
end
  
always @(posedge clk) 
begin 
    if (ce13) 
    begin
        q13 <= rom6[address13];
    end
end
  
always @(posedge clk) 
begin 
    if (ce14) 
    begin
        q14 <= rom7[address14];
    end
end
  
always @(posedge clk) 
begin 
    if (ce15) 
    begin
        q15 <= rom7[address15];
    end
end
  
always @(posedge clk) 
begin 
    if (ce16) 
    begin
        q16 <= rom8[address16];
    end
end
  
always @(posedge clk) 
begin 
    if (ce17) 
    begin
        q17 <= rom8[address17];
    end
end
  
always @(posedge clk) 
begin 
    if (ce18) 
    begin
        q18 <= rom9[address18];
    end
end
  
always @(posedge clk) 
begin 
    if (ce19) 
    begin
        q19 <= rom9[address19];
    end
end
  
always @(posedge clk) 
begin 
    if (ce20) 
    begin
        q20 <= rom10[address20];
    end
end
  
always @(posedge clk) 
begin 
    if (ce21) 
    begin
        q21 <= rom10[address21];
    end
end
  
always @(posedge clk) 
begin 
    if (ce22) 
    begin
        q22 <= rom11[address22];
    end
end
  
always @(posedge clk) 
begin 
    if (ce23) 
    begin
        q23 <= rom11[address23];
    end
end
  
always @(posedge clk) 
begin 
    if (ce24) 
    begin
        q24 <= rom12[address24];
    end
end
  
always @(posedge clk) 
begin 
    if (ce25) 
    begin
        q25 <= rom12[address25];
    end
end
  
always @(posedge clk) 
begin 
    if (ce26) 
    begin
        q26 <= rom13[address26];
    end
end
  
always @(posedge clk) 
begin 
    if (ce27) 
    begin
        q27 <= rom13[address27];
    end
end
  
always @(posedge clk) 
begin 
    if (ce28) 
    begin
        q28 <= rom14[address28];
    end
end
  
always @(posedge clk) 
begin 
    if (ce29) 
    begin
        q29 <= rom14[address29];
    end
end
  
always @(posedge clk) 
begin 
    if (ce30) 
    begin
        q30 <= rom15[address30];
    end
end
  
always @(posedge clk) 
begin 
    if (ce31) 
    begin
        q31 <= rom15[address31];
    end
end
  
always @(posedge clk) 
begin 
    if (ce32) 
    begin
        q32 <= rom16[address32];
    end
end
  
always @(posedge clk) 
begin 
    if (ce33) 
    begin
        q33 <= rom16[address33];
    end
end
  
always @(posedge clk) 
begin 
    if (ce34) 
    begin
        q34 <= rom17[address34];
    end
end
  
always @(posedge clk) 
begin 
    if (ce35) 
    begin
        q35 <= rom17[address35];
    end
end
  
always @(posedge clk) 
begin 
    if (ce36) 
    begin
        q36 <= rom18[address36];
    end
end
  
always @(posedge clk) 
begin 
    if (ce37) 
    begin
        q37 <= rom18[address37];
    end
end
  
always @(posedge clk) 
begin 
    if (ce38) 
    begin
        q38 <= rom19[address38];
    end
end
  
always @(posedge clk) 
begin 
    if (ce39) 
    begin
        q39 <= rom19[address39];
    end
end
  
always @(posedge clk) 
begin 
    if (ce40) 
    begin
        q40 <= rom20[address40];
    end
end
  
always @(posedge clk) 
begin 
    if (ce41) 
    begin
        q41 <= rom20[address41];
    end
end
  
always @(posedge clk) 
begin 
    if (ce42) 
    begin
        q42 <= rom21[address42];
    end
end
  
always @(posedge clk) 
begin 
    if (ce43) 
    begin
        q43 <= rom21[address43];
    end
end
  
always @(posedge clk) 
begin 
    if (ce44) 
    begin
        q44 <= rom22[address44];
    end
end
  
always @(posedge clk) 
begin 
    if (ce45) 
    begin
        q45 <= rom22[address45];
    end
end
  
always @(posedge clk) 
begin 
    if (ce46) 
    begin
        q46 <= rom23[address46];
    end
end
  
always @(posedge clk) 
begin 
    if (ce47) 
    begin
        q47 <= rom23[address47];
    end
end
  
always @(posedge clk) 
begin 
    if (ce48) 
    begin
        q48 <= rom24[address48];
    end
end
  
always @(posedge clk) 
begin 
    if (ce49) 
    begin
        q49 <= rom24[address49];
    end
end
  
always @(posedge clk) 
begin 
    if (ce50) 
    begin
        q50 <= rom25[address50];
    end
end
  
always @(posedge clk) 
begin 
    if (ce51) 
    begin
        q51 <= rom25[address51];
    end
end
  
always @(posedge clk) 
begin 
    if (ce52) 
    begin
        q52 <= rom26[address52];
    end
end
  
always @(posedge clk) 
begin 
    if (ce53) 
    begin
        q53 <= rom26[address53];
    end
end
  
always @(posedge clk) 
begin 
    if (ce54) 
    begin
        q54 <= rom27[address54];
    end
end
  
always @(posedge clk) 
begin 
    if (ce55) 
    begin
        q55 <= rom27[address55];
    end
end
  
always @(posedge clk) 
begin 
    if (ce56) 
    begin
        q56 <= rom28[address56];
    end
end
  
always @(posedge clk) 
begin 
    if (ce57) 
    begin
        q57 <= rom28[address57];
    end
end
  
always @(posedge clk) 
begin 
    if (ce58) 
    begin
        q58 <= rom29[address58];
    end
end
  
always @(posedge clk) 
begin 
    if (ce59) 
    begin
        q59 <= rom29[address59];
    end
end


endmodule

