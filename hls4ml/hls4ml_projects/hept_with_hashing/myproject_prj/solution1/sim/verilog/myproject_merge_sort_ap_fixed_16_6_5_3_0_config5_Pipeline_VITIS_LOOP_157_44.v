// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_merge_sort_ap_fixed_16_6_5_3_0_config5_Pipeline_VITIS_LOOP_157_44 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        temp_137_reload,
        temp_136_reload,
        temp_135_reload,
        temp_134_reload,
        temp_133_reload,
        temp_132_reload,
        temp_131_reload,
        temp_130_reload,
        empty,
        k_15_reload,
        mux_case_0189107,
        mux_case_1190111,
        mux_case_2191115,
        mux_case_3192119,
        mux_case_4193123,
        temp_145_out,
        temp_145_out_ap_vld,
        temp_144_out,
        temp_144_out_ap_vld,
        temp_143_out,
        temp_143_out_ap_vld,
        temp_142_out,
        temp_142_out_ap_vld,
        temp_141_out,
        temp_141_out_ap_vld,
        temp_140_out,
        temp_140_out_ap_vld,
        temp_139_out,
        temp_139_out_ap_vld,
        temp_138_out,
        temp_138_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] temp_137_reload;
input  [31:0] temp_136_reload;
input  [31:0] temp_135_reload;
input  [31:0] temp_134_reload;
input  [31:0] temp_133_reload;
input  [31:0] temp_132_reload;
input  [31:0] temp_131_reload;
input  [31:0] temp_130_reload;
input  [2:0] empty;
input  [31:0] k_15_reload;
input  [31:0] mux_case_0189107;
input  [31:0] mux_case_1190111;
input  [31:0] mux_case_2191115;
input  [31:0] mux_case_3192119;
input  [31:0] mux_case_4193123;
output  [31:0] temp_145_out;
output   temp_145_out_ap_vld;
output  [31:0] temp_144_out;
output   temp_144_out_ap_vld;
output  [31:0] temp_143_out;
output   temp_143_out_ap_vld;
output  [31:0] temp_142_out;
output   temp_142_out_ap_vld;
output  [31:0] temp_141_out;
output   temp_141_out_ap_vld;
output  [31:0] temp_140_out;
output   temp_140_out_ap_vld;
output  [31:0] temp_139_out;
output   temp_139_out_ap_vld;
output  [31:0] temp_138_out;
output   temp_138_out_ap_vld;

reg ap_idle;
reg temp_145_out_ap_vld;
reg temp_144_out_ap_vld;
reg temp_143_out_ap_vld;
reg temp_142_out_ap_vld;
reg temp_141_out_ap_vld;
reg temp_140_out_ap_vld;
reg temp_139_out_ap_vld;
reg temp_138_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln157_fu_323_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] k_fu_84;
wire   [31:0] k_9_fu_365_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [2:0] i_fu_88;
wire   [2:0] add_ln159_fu_336_p2;
reg   [31:0] temp_fu_92;
wire   [31:0] temp_80_fu_342_p13;
wire   [2:0] trunc_ln147_fu_332_p1;
reg   [31:0] temp_73_fu_96;
reg   [31:0] temp_74_fu_100;
reg   [31:0] temp_75_fu_104;
reg   [31:0] temp_76_fu_108;
reg   [31:0] temp_77_fu_112;
reg   [31:0] temp_78_fu_116;
reg   [31:0] temp_79_fu_120;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] temp_80_fu_342_p11;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_258;
reg    ap_condition_261;
reg    ap_condition_264;
reg    ap_condition_267;
reg    ap_condition_270;
reg    ap_condition_273;
reg    ap_condition_276;
reg    ap_condition_279;
wire   [2:0] temp_80_fu_342_p1;
wire   [2:0] temp_80_fu_342_p3;
wire   [2:0] temp_80_fu_342_p5;
wire   [2:0] temp_80_fu_342_p7;
wire  signed [2:0] temp_80_fu_342_p9;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 k_fu_84 = 32'd0;
#0 i_fu_88 = 3'd0;
#0 temp_fu_92 = 32'd0;
#0 temp_73_fu_96 = 32'd0;
#0 temp_74_fu_100 = 32'd0;
#0 temp_75_fu_104 = 32'd0;
#0 temp_76_fu_108 = 32'd0;
#0 temp_77_fu_112 = 32'd0;
#0 temp_78_fu_116 = 32'd0;
#0 temp_79_fu_120 = 32'd0;
#0 ap_done_reg = 1'b0;
end

myproject_sparsemux_11_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
sparsemux_11_3_32_1_1_U980(
    .din0(mux_case_0189107),
    .din1(mux_case_1190111),
    .din2(mux_case_2191115),
    .din3(mux_case_3192119),
    .din4(mux_case_4193123),
    .def(temp_80_fu_342_p11),
    .sel(i_fu_88),
    .dout(temp_80_fu_342_p13)
);

myproject_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_88 <= empty;
        end else if (((icmp_ln157_fu_323_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_88 <= add_ln159_fu_336_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_84 <= k_15_reload;
        end else if (((icmp_ln157_fu_323_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_fu_84 <= k_9_fu_365_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_73_fu_96 <= temp_131_reload;
        end else if ((1'b1 == ap_condition_258)) begin
            temp_73_fu_96 <= temp_80_fu_342_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_74_fu_100 <= temp_132_reload;
        end else if ((1'b1 == ap_condition_261)) begin
            temp_74_fu_100 <= temp_80_fu_342_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_75_fu_104 <= temp_133_reload;
        end else if ((1'b1 == ap_condition_264)) begin
            temp_75_fu_104 <= temp_80_fu_342_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_76_fu_108 <= temp_134_reload;
        end else if ((1'b1 == ap_condition_267)) begin
            temp_76_fu_108 <= temp_80_fu_342_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_77_fu_112 <= temp_135_reload;
        end else if ((1'b1 == ap_condition_270)) begin
            temp_77_fu_112 <= temp_80_fu_342_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_78_fu_116 <= temp_136_reload;
        end else if ((1'b1 == ap_condition_273)) begin
            temp_78_fu_116 <= temp_80_fu_342_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_79_fu_120 <= temp_137_reload;
        end else if ((1'b1 == ap_condition_276)) begin
            temp_79_fu_120 <= temp_80_fu_342_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_fu_92 <= temp_130_reload;
        end else if ((1'b1 == ap_condition_279)) begin
            temp_fu_92 <= temp_80_fu_342_p13;
        end
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_323_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_323_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_138_out_ap_vld = 1'b1;
    end else begin
        temp_138_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_323_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_139_out_ap_vld = 1'b1;
    end else begin
        temp_139_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_323_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_140_out_ap_vld = 1'b1;
    end else begin
        temp_140_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_323_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_141_out_ap_vld = 1'b1;
    end else begin
        temp_141_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_323_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_142_out_ap_vld = 1'b1;
    end else begin
        temp_142_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_323_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_143_out_ap_vld = 1'b1;
    end else begin
        temp_143_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_323_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_144_out_ap_vld = 1'b1;
    end else begin
        temp_144_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_323_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_145_out_ap_vld = 1'b1;
    end else begin
        temp_145_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln159_fu_336_p2 = (i_fu_88 + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_258 = ((icmp_ln157_fu_323_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_332_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_261 = ((icmp_ln157_fu_323_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_332_p1 == 3'd2));
end

always @ (*) begin
    ap_condition_264 = ((icmp_ln157_fu_323_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_332_p1 == 3'd3));
end

always @ (*) begin
    ap_condition_267 = ((icmp_ln157_fu_323_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_332_p1 == 3'd4));
end

always @ (*) begin
    ap_condition_270 = ((icmp_ln157_fu_323_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_332_p1 == 3'd5));
end

always @ (*) begin
    ap_condition_273 = ((icmp_ln157_fu_323_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_332_p1 == 3'd6));
end

always @ (*) begin
    ap_condition_276 = ((icmp_ln157_fu_323_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_332_p1 == 3'd7));
end

always @ (*) begin
    ap_condition_279 = ((icmp_ln157_fu_323_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_332_p1 == 3'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign icmp_ln157_fu_323_p2 = ((i_fu_88 > 3'd4) ? 1'b1 : 1'b0);

assign k_9_fu_365_p2 = (k_fu_84 + 32'd1);

assign temp_138_out = temp_fu_92;

assign temp_139_out = temp_73_fu_96;

assign temp_140_out = temp_74_fu_100;

assign temp_141_out = temp_75_fu_104;

assign temp_142_out = temp_76_fu_108;

assign temp_143_out = temp_77_fu_112;

assign temp_144_out = temp_78_fu_116;

assign temp_145_out = temp_79_fu_120;

assign temp_80_fu_342_p11 = 'bx;

assign trunc_ln147_fu_332_p1 = k_fu_84[2:0];

endmodule //myproject_merge_sort_ap_fixed_16_6_5_3_0_config5_Pipeline_VITIS_LOOP_157_44
