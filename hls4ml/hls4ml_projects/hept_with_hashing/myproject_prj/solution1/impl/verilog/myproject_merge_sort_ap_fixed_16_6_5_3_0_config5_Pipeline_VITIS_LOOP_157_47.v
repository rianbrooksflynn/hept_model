// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_merge_sort_ap_fixed_16_6_5_3_0_config5_Pipeline_VITIS_LOOP_157_47 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        temp_205_reload,
        temp_204_reload,
        temp_203_reload,
        temp_202_reload,
        temp_201_reload,
        temp_200_reload,
        temp_199_reload,
        temp_198_reload,
        empty,
        k_24_reload,
        mux_case_0301203,
        mux_case_1302207,
        mux_case_2303211,
        mux_case_3304215,
        mux_case_4305219,
        mux_case_5306223,
        mux_case_6307227,
        temp_213_out,
        temp_213_out_ap_vld,
        temp_212_out,
        temp_212_out_ap_vld,
        temp_211_out,
        temp_211_out_ap_vld,
        temp_210_out,
        temp_210_out_ap_vld,
        temp_209_out,
        temp_209_out_ap_vld,
        temp_208_out,
        temp_208_out_ap_vld,
        temp_207_out,
        temp_207_out_ap_vld,
        temp_206_out,
        temp_206_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] temp_205_reload;
input  [31:0] temp_204_reload;
input  [31:0] temp_203_reload;
input  [31:0] temp_202_reload;
input  [31:0] temp_201_reload;
input  [31:0] temp_200_reload;
input  [31:0] temp_199_reload;
input  [31:0] temp_198_reload;
input  [2:0] empty;
input  [31:0] k_24_reload;
input  [31:0] mux_case_0301203;
input  [31:0] mux_case_1302207;
input  [31:0] mux_case_2303211;
input  [31:0] mux_case_3304215;
input  [31:0] mux_case_4305219;
input  [31:0] mux_case_5306223;
input  [31:0] mux_case_6307227;
output  [31:0] temp_213_out;
output   temp_213_out_ap_vld;
output  [31:0] temp_212_out;
output   temp_212_out_ap_vld;
output  [31:0] temp_211_out;
output   temp_211_out_ap_vld;
output  [31:0] temp_210_out;
output   temp_210_out_ap_vld;
output  [31:0] temp_209_out;
output   temp_209_out_ap_vld;
output  [31:0] temp_208_out;
output   temp_208_out_ap_vld;
output  [31:0] temp_207_out;
output   temp_207_out_ap_vld;
output  [31:0] temp_206_out;
output   temp_206_out_ap_vld;

reg ap_idle;
reg temp_213_out_ap_vld;
reg temp_212_out_ap_vld;
reg temp_211_out_ap_vld;
reg temp_210_out_ap_vld;
reg temp_209_out_ap_vld;
reg temp_208_out_ap_vld;
reg temp_207_out_ap_vld;
reg temp_206_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln157_fu_341_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] k_fu_90;
wire   [31:0] k_8_fu_389_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [2:0] i_fu_94;
wire   [2:0] add_ln159_fu_354_p2;
reg   [31:0] temp_fu_98;
wire   [31:0] temp_72_fu_360_p17;
wire   [2:0] trunc_ln147_fu_350_p1;
reg   [31:0] temp_65_fu_102;
reg   [31:0] temp_66_fu_106;
reg   [31:0] temp_67_fu_110;
reg   [31:0] temp_68_fu_114;
reg   [31:0] temp_69_fu_118;
reg   [31:0] temp_70_fu_122;
reg   [31:0] temp_71_fu_126;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] temp_72_fu_360_p15;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_268;
reg    ap_condition_271;
reg    ap_condition_274;
reg    ap_condition_277;
reg    ap_condition_280;
reg    ap_condition_283;
reg    ap_condition_286;
reg    ap_condition_289;
wire   [2:0] temp_72_fu_360_p1;
wire   [2:0] temp_72_fu_360_p3;
wire   [2:0] temp_72_fu_360_p5;
wire   [2:0] temp_72_fu_360_p7;
wire  signed [2:0] temp_72_fu_360_p9;
wire  signed [2:0] temp_72_fu_360_p11;
wire  signed [2:0] temp_72_fu_360_p13;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 k_fu_90 = 32'd0;
#0 i_fu_94 = 3'd0;
#0 temp_fu_98 = 32'd0;
#0 temp_65_fu_102 = 32'd0;
#0 temp_66_fu_106 = 32'd0;
#0 temp_67_fu_110 = 32'd0;
#0 temp_68_fu_114 = 32'd0;
#0 temp_69_fu_118 = 32'd0;
#0 temp_70_fu_122 = 32'd0;
#0 temp_71_fu_126 = 32'd0;
#0 ap_done_reg = 1'b0;
end

myproject_sparsemux_15_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 3'h6 ),
    .din6_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
sparsemux_15_3_32_1_1_U1114(
    .din0(mux_case_0301203),
    .din1(mux_case_1302207),
    .din2(mux_case_2303211),
    .din3(mux_case_3304215),
    .din4(mux_case_4305219),
    .din5(mux_case_5306223),
    .din6(mux_case_6307227),
    .def(temp_72_fu_360_p15),
    .sel(i_fu_94),
    .dout(temp_72_fu_360_p17)
);

myproject_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_94 <= empty;
        end else if (((icmp_ln157_fu_341_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_94 <= add_ln159_fu_354_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_90 <= k_24_reload;
        end else if (((icmp_ln157_fu_341_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_fu_90 <= k_8_fu_389_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_65_fu_102 <= temp_199_reload;
        end else if ((1'b1 == ap_condition_268)) begin
            temp_65_fu_102 <= temp_72_fu_360_p17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_66_fu_106 <= temp_200_reload;
        end else if ((1'b1 == ap_condition_271)) begin
            temp_66_fu_106 <= temp_72_fu_360_p17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_67_fu_110 <= temp_201_reload;
        end else if ((1'b1 == ap_condition_274)) begin
            temp_67_fu_110 <= temp_72_fu_360_p17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_68_fu_114 <= temp_202_reload;
        end else if ((1'b1 == ap_condition_277)) begin
            temp_68_fu_114 <= temp_72_fu_360_p17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_69_fu_118 <= temp_203_reload;
        end else if ((1'b1 == ap_condition_280)) begin
            temp_69_fu_118 <= temp_72_fu_360_p17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_70_fu_122 <= temp_204_reload;
        end else if ((1'b1 == ap_condition_283)) begin
            temp_70_fu_122 <= temp_72_fu_360_p17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_71_fu_126 <= temp_205_reload;
        end else if ((1'b1 == ap_condition_286)) begin
            temp_71_fu_126 <= temp_72_fu_360_p17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_fu_98 <= temp_198_reload;
        end else if ((1'b1 == ap_condition_289)) begin
            temp_fu_98 <= temp_72_fu_360_p17;
        end
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_341_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_341_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_206_out_ap_vld = 1'b1;
    end else begin
        temp_206_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_341_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_207_out_ap_vld = 1'b1;
    end else begin
        temp_207_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_341_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_208_out_ap_vld = 1'b1;
    end else begin
        temp_208_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_341_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_209_out_ap_vld = 1'b1;
    end else begin
        temp_209_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_341_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_210_out_ap_vld = 1'b1;
    end else begin
        temp_210_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_341_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_211_out_ap_vld = 1'b1;
    end else begin
        temp_211_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_341_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_212_out_ap_vld = 1'b1;
    end else begin
        temp_212_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_341_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_213_out_ap_vld = 1'b1;
    end else begin
        temp_213_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln159_fu_354_p2 = (i_fu_94 + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_268 = ((icmp_ln157_fu_341_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_350_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_271 = ((icmp_ln157_fu_341_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_350_p1 == 3'd2));
end

always @ (*) begin
    ap_condition_274 = ((icmp_ln157_fu_341_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_350_p1 == 3'd3));
end

always @ (*) begin
    ap_condition_277 = ((icmp_ln157_fu_341_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_350_p1 == 3'd4));
end

always @ (*) begin
    ap_condition_280 = ((icmp_ln157_fu_341_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_350_p1 == 3'd5));
end

always @ (*) begin
    ap_condition_283 = ((icmp_ln157_fu_341_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_350_p1 == 3'd6));
end

always @ (*) begin
    ap_condition_286 = ((icmp_ln157_fu_341_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_350_p1 == 3'd7));
end

always @ (*) begin
    ap_condition_289 = ((icmp_ln157_fu_341_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_fu_350_p1 == 3'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign icmp_ln157_fu_341_p2 = ((i_fu_94 == 3'd7) ? 1'b1 : 1'b0);

assign k_8_fu_389_p2 = (k_fu_90 + 32'd1);

assign temp_206_out = temp_fu_98;

assign temp_207_out = temp_65_fu_102;

assign temp_208_out = temp_66_fu_106;

assign temp_209_out = temp_67_fu_110;

assign temp_210_out = temp_68_fu_114;

assign temp_211_out = temp_69_fu_118;

assign temp_212_out = temp_70_fu_122;

assign temp_213_out = temp_71_fu_126;

assign temp_72_fu_360_p15 = 'bx;

assign trunc_ln147_fu_350_p1 = k_fu_90[2:0];

endmodule //myproject_merge_sort_ap_fixed_16_6_5_3_0_config5_Pipeline_VITIS_LOOP_157_47
