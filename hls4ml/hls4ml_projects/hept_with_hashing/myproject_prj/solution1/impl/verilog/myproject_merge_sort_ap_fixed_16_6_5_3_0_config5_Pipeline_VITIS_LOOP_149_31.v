// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_merge_sort_ap_fixed_16_6_5_3_0_config5_Pipeline_VITIS_LOOP_149_31 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        temp_51,
        temp_50,
        temp_49,
        temp_48,
        temp_47,
        temp_46,
        temp_45,
        temp_44,
        mux_case_07711,
        mux_case_17815,
        mux_case_27919,
        mux_case_38023,
        mux_case_48127,
        mux_case_58231,
        mux_case_68335,
        mux_case_78439,
        idx1,
        arr_0_val,
        arr_1_val,
        arr_2_val,
        arr_3_val,
        arr_4_val,
        arr_5_val,
        arr_6_val,
        arr_7_val,
        arr_8_val,
        arr_9_val,
        arr_10_val,
        arr_11_val,
        arr_12_val,
        arr_13_val,
        arr_14_val,
        arr_15_val,
        arr_16_val,
        arr_17_val,
        arr_18_val,
        arr_19_val,
        arr_20_val,
        arr_21_val,
        arr_22_val,
        arr_23_val,
        arr_24_val,
        arr_25_val,
        arr_26_val,
        arr_27_val,
        arr_28_val,
        arr_29_val,
        arr_30_val,
        arr_31_val,
        arr_32_val,
        arr_33_val,
        arr_34_val,
        arr_35_val,
        arr_36_val,
        arr_37_val,
        arr_38_val,
        arr_39_val,
        arr_40_val,
        arr_41_val,
        arr_42_val,
        arr_43_val,
        arr_44_val,
        arr_45_val,
        arr_46_val,
        arr_47_val,
        indvars_iv52_out,
        indvars_iv52_out_ap_vld,
        k_6_out,
        k_6_out_ap_vld,
        temp_69_out,
        temp_69_out_ap_vld,
        temp_68_out,
        temp_68_out_ap_vld,
        temp_67_out,
        temp_67_out_ap_vld,
        temp_66_out,
        temp_66_out_ap_vld,
        temp_65_out,
        temp_65_out_ap_vld,
        temp_64_out,
        temp_64_out_ap_vld,
        temp_63_out,
        temp_63_out_ap_vld,
        temp_62_out,
        temp_62_out_ap_vld,
        i_6_out,
        i_6_out_ap_vld,
        j_7_out,
        j_7_out_ap_vld,
        icmp_ln149_2_out,
        icmp_ln149_2_out_ap_vld,
        icmp33_out,
        icmp33_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] temp_51;
input  [31:0] temp_50;
input  [31:0] temp_49;
input  [31:0] temp_48;
input  [31:0] temp_47;
input  [31:0] temp_46;
input  [31:0] temp_45;
input  [31:0] temp_44;
input  [31:0] mux_case_07711;
input  [31:0] mux_case_17815;
input  [31:0] mux_case_27919;
input  [31:0] mux_case_38023;
input  [31:0] mux_case_48127;
input  [31:0] mux_case_58231;
input  [31:0] mux_case_68335;
input  [31:0] mux_case_78439;
input  [5:0] idx1;
input  [15:0] arr_0_val;
input  [15:0] arr_1_val;
input  [15:0] arr_2_val;
input  [15:0] arr_3_val;
input  [15:0] arr_4_val;
input  [15:0] arr_5_val;
input  [15:0] arr_6_val;
input  [15:0] arr_7_val;
input  [15:0] arr_8_val;
input  [15:0] arr_9_val;
input  [15:0] arr_10_val;
input  [15:0] arr_11_val;
input  [15:0] arr_12_val;
input  [15:0] arr_13_val;
input  [15:0] arr_14_val;
input  [15:0] arr_15_val;
input  [15:0] arr_16_val;
input  [15:0] arr_17_val;
input  [15:0] arr_18_val;
input  [15:0] arr_19_val;
input  [15:0] arr_20_val;
input  [15:0] arr_21_val;
input  [15:0] arr_22_val;
input  [15:0] arr_23_val;
input  [15:0] arr_24_val;
input  [15:0] arr_25_val;
input  [15:0] arr_26_val;
input  [15:0] arr_27_val;
input  [15:0] arr_28_val;
input  [15:0] arr_29_val;
input  [15:0] arr_30_val;
input  [15:0] arr_31_val;
input  [15:0] arr_32_val;
input  [15:0] arr_33_val;
input  [15:0] arr_34_val;
input  [15:0] arr_35_val;
input  [15:0] arr_36_val;
input  [15:0] arr_37_val;
input  [15:0] arr_38_val;
input  [15:0] arr_39_val;
input  [15:0] arr_40_val;
input  [15:0] arr_41_val;
input  [15:0] arr_42_val;
input  [15:0] arr_43_val;
input  [15:0] arr_44_val;
input  [15:0] arr_45_val;
input  [15:0] arr_46_val;
input  [15:0] arr_47_val;
output  [31:0] indvars_iv52_out;
output   indvars_iv52_out_ap_vld;
output  [31:0] k_6_out;
output   k_6_out_ap_vld;
output  [31:0] temp_69_out;
output   temp_69_out_ap_vld;
output  [31:0] temp_68_out;
output   temp_68_out_ap_vld;
output  [31:0] temp_67_out;
output   temp_67_out_ap_vld;
output  [31:0] temp_66_out;
output   temp_66_out_ap_vld;
output  [31:0] temp_65_out;
output   temp_65_out_ap_vld;
output  [31:0] temp_64_out;
output   temp_64_out_ap_vld;
output  [31:0] temp_63_out;
output   temp_63_out_ap_vld;
output  [31:0] temp_62_out;
output   temp_62_out_ap_vld;
output  [31:0] i_6_out;
output   i_6_out_ap_vld;
output  [31:0] j_7_out;
output   j_7_out_ap_vld;
output  [0:0] icmp_ln149_2_out;
output   icmp_ln149_2_out_ap_vld;
output  [0:0] icmp33_out;
output   icmp33_out_ap_vld;

reg ap_idle;
reg indvars_iv52_out_ap_vld;
reg k_6_out_ap_vld;
reg temp_69_out_ap_vld;
reg temp_68_out_ap_vld;
reg temp_67_out_ap_vld;
reg temp_66_out_ap_vld;
reg temp_65_out_ap_vld;
reg temp_64_out_ap_vld;
reg temp_63_out_ap_vld;
reg temp_62_out_ap_vld;
reg i_6_out_ap_vld;
reg j_7_out_ap_vld;
reg icmp_ln149_2_out_ap_vld;
reg icmp33_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] and_ln149_fu_1535_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] indvars_iv52_reg_844;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] add_ln149_fu_1541_p2;
wire    ap_loop_init;
reg   [31:0] k_5_fu_312;
wire   [31:0] k_23_fu_1324_p2;
wire    ap_block_pp0_stage0;
reg   [31:0] temp_52_fu_316;
wire   [31:0] temp_fu_932_p19;
wire   [31:0] temp_158_fu_964_p19;
wire   [0:0] icmp_ln151_fu_1318_p2;
wire   [2:0] trunc_ln147_20_fu_928_p1;
reg   [31:0] temp_53_fu_320;
reg   [31:0] temp_54_fu_324;
reg   [31:0] temp_55_fu_328;
reg   [31:0] temp_56_fu_332;
reg   [31:0] temp_57_fu_336;
reg   [31:0] temp_58_fu_340;
reg   [31:0] temp_59_fu_344;
reg   [31:0] i_4_fu_348;
wire   [31:0] i_22_fu_1331_p2;
reg   [31:0] ap_sig_allocacmp_i_23;
reg   [31:0] j_5_fu_352;
wire   [31:0] j_22_fu_1417_p2;
reg   [31:0] ap_sig_allocacmp_j_23;
wire    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln149_2_fu_1511_p2;
wire   [0:0] icmp_ln149_fu_1528_p2;
wire   [31:0] temp_fu_932_p17;
wire   [2:0] temp_fu_932_p18;
wire   [31:0] temp_158_fu_964_p17;
wire   [2:0] temp_158_fu_964_p18;
wire   [5:0] trunc_ln151_fu_996_p1;
wire   [15:0] tmp_576_fu_1005_p97;
wire   [5:0] tmp_576_fu_1005_p98;
wire   [5:0] trunc_ln151_6_fu_1157_p1;
wire   [15:0] tmp_577_fu_1166_p97;
wire   [5:0] tmp_577_fu_1166_p98;
wire   [15:0] tmp_576_fu_1005_p99;
wire   [15:0] tmp_577_fu_1166_p99;
wire   [29:0] tmp_fu_1518_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_820;
reg    ap_condition_824;
reg    ap_condition_827;
reg    ap_condition_830;
reg    ap_condition_833;
reg    ap_condition_836;
reg    ap_condition_839;
reg    ap_condition_842;
reg    ap_condition_845;
reg    ap_condition_848;
reg    ap_condition_851;
reg    ap_condition_854;
reg    ap_condition_857;
reg    ap_condition_860;
reg    ap_condition_863;
reg    ap_condition_866;
reg    ap_condition_869;
wire   [2:0] temp_fu_932_p1;
wire   [2:0] temp_fu_932_p3;
wire   [2:0] temp_fu_932_p5;
wire   [2:0] temp_fu_932_p7;
wire  signed [2:0] temp_fu_932_p9;
wire  signed [2:0] temp_fu_932_p11;
wire  signed [2:0] temp_fu_932_p13;
wire  signed [2:0] temp_fu_932_p15;
wire   [2:0] temp_158_fu_964_p1;
wire   [2:0] temp_158_fu_964_p3;
wire   [2:0] temp_158_fu_964_p5;
wire   [2:0] temp_158_fu_964_p7;
wire  signed [2:0] temp_158_fu_964_p9;
wire  signed [2:0] temp_158_fu_964_p11;
wire  signed [2:0] temp_158_fu_964_p13;
wire  signed [2:0] temp_158_fu_964_p15;
wire   [5:0] tmp_576_fu_1005_p1;
wire   [5:0] tmp_576_fu_1005_p3;
wire   [5:0] tmp_576_fu_1005_p5;
wire   [5:0] tmp_576_fu_1005_p7;
wire   [5:0] tmp_576_fu_1005_p9;
wire   [5:0] tmp_576_fu_1005_p11;
wire   [5:0] tmp_576_fu_1005_p13;
wire   [5:0] tmp_576_fu_1005_p15;
wire   [5:0] tmp_576_fu_1005_p17;
wire   [5:0] tmp_576_fu_1005_p19;
wire   [5:0] tmp_576_fu_1005_p21;
wire   [5:0] tmp_576_fu_1005_p23;
wire   [5:0] tmp_576_fu_1005_p25;
wire   [5:0] tmp_576_fu_1005_p27;
wire   [5:0] tmp_576_fu_1005_p29;
wire   [5:0] tmp_576_fu_1005_p31;
wire   [5:0] tmp_576_fu_1005_p33;
wire   [5:0] tmp_576_fu_1005_p35;
wire   [5:0] tmp_576_fu_1005_p37;
wire   [5:0] tmp_576_fu_1005_p39;
wire   [5:0] tmp_576_fu_1005_p41;
wire   [5:0] tmp_576_fu_1005_p43;
wire   [5:0] tmp_576_fu_1005_p45;
wire   [5:0] tmp_576_fu_1005_p47;
wire   [5:0] tmp_576_fu_1005_p49;
wire   [5:0] tmp_576_fu_1005_p51;
wire   [5:0] tmp_576_fu_1005_p53;
wire   [5:0] tmp_576_fu_1005_p55;
wire   [5:0] tmp_576_fu_1005_p57;
wire   [5:0] tmp_576_fu_1005_p59;
wire   [5:0] tmp_576_fu_1005_p61;
wire   [5:0] tmp_576_fu_1005_p63;
wire  signed [5:0] tmp_576_fu_1005_p65;
wire  signed [5:0] tmp_576_fu_1005_p67;
wire  signed [5:0] tmp_576_fu_1005_p69;
wire  signed [5:0] tmp_576_fu_1005_p71;
wire  signed [5:0] tmp_576_fu_1005_p73;
wire  signed [5:0] tmp_576_fu_1005_p75;
wire  signed [5:0] tmp_576_fu_1005_p77;
wire  signed [5:0] tmp_576_fu_1005_p79;
wire  signed [5:0] tmp_576_fu_1005_p81;
wire  signed [5:0] tmp_576_fu_1005_p83;
wire  signed [5:0] tmp_576_fu_1005_p85;
wire  signed [5:0] tmp_576_fu_1005_p87;
wire  signed [5:0] tmp_576_fu_1005_p89;
wire  signed [5:0] tmp_576_fu_1005_p91;
wire  signed [5:0] tmp_576_fu_1005_p93;
wire  signed [5:0] tmp_576_fu_1005_p95;
wire   [5:0] tmp_577_fu_1166_p1;
wire   [5:0] tmp_577_fu_1166_p3;
wire   [5:0] tmp_577_fu_1166_p5;
wire   [5:0] tmp_577_fu_1166_p7;
wire   [5:0] tmp_577_fu_1166_p9;
wire   [5:0] tmp_577_fu_1166_p11;
wire   [5:0] tmp_577_fu_1166_p13;
wire   [5:0] tmp_577_fu_1166_p15;
wire   [5:0] tmp_577_fu_1166_p17;
wire   [5:0] tmp_577_fu_1166_p19;
wire   [5:0] tmp_577_fu_1166_p21;
wire   [5:0] tmp_577_fu_1166_p23;
wire   [5:0] tmp_577_fu_1166_p25;
wire   [5:0] tmp_577_fu_1166_p27;
wire   [5:0] tmp_577_fu_1166_p29;
wire   [5:0] tmp_577_fu_1166_p31;
wire   [5:0] tmp_577_fu_1166_p33;
wire   [5:0] tmp_577_fu_1166_p35;
wire   [5:0] tmp_577_fu_1166_p37;
wire   [5:0] tmp_577_fu_1166_p39;
wire   [5:0] tmp_577_fu_1166_p41;
wire   [5:0] tmp_577_fu_1166_p43;
wire   [5:0] tmp_577_fu_1166_p45;
wire   [5:0] tmp_577_fu_1166_p47;
wire   [5:0] tmp_577_fu_1166_p49;
wire   [5:0] tmp_577_fu_1166_p51;
wire   [5:0] tmp_577_fu_1166_p53;
wire   [5:0] tmp_577_fu_1166_p55;
wire   [5:0] tmp_577_fu_1166_p57;
wire   [5:0] tmp_577_fu_1166_p59;
wire   [5:0] tmp_577_fu_1166_p61;
wire   [5:0] tmp_577_fu_1166_p63;
wire  signed [5:0] tmp_577_fu_1166_p65;
wire  signed [5:0] tmp_577_fu_1166_p67;
wire  signed [5:0] tmp_577_fu_1166_p69;
wire  signed [5:0] tmp_577_fu_1166_p71;
wire  signed [5:0] tmp_577_fu_1166_p73;
wire  signed [5:0] tmp_577_fu_1166_p75;
wire  signed [5:0] tmp_577_fu_1166_p77;
wire  signed [5:0] tmp_577_fu_1166_p79;
wire  signed [5:0] tmp_577_fu_1166_p81;
wire  signed [5:0] tmp_577_fu_1166_p83;
wire  signed [5:0] tmp_577_fu_1166_p85;
wire  signed [5:0] tmp_577_fu_1166_p87;
wire  signed [5:0] tmp_577_fu_1166_p89;
wire  signed [5:0] tmp_577_fu_1166_p91;
wire  signed [5:0] tmp_577_fu_1166_p93;
wire  signed [5:0] tmp_577_fu_1166_p95;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 k_5_fu_312 = 32'd0;
#0 temp_52_fu_316 = 32'd0;
#0 temp_53_fu_320 = 32'd0;
#0 temp_54_fu_324 = 32'd0;
#0 temp_55_fu_328 = 32'd0;
#0 temp_56_fu_332 = 32'd0;
#0 temp_57_fu_336 = 32'd0;
#0 temp_58_fu_340 = 32'd0;
#0 temp_59_fu_344 = 32'd0;
#0 i_4_fu_348 = 32'd0;
#0 j_5_fu_352 = 32'd0;
#0 ap_done_reg = 1'b0;
end

myproject_sparsemux_17_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 3'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 3'h7 ),
    .din7_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
sparsemux_17_3_32_1_1_U767(
    .din0(mux_case_07711),
    .din1(mux_case_17815),
    .din2(mux_case_27919),
    .din3(mux_case_38023),
    .din4(mux_case_48127),
    .din5(mux_case_58231),
    .din6(mux_case_68335),
    .din7(mux_case_78439),
    .def(temp_fu_932_p17),
    .sel(temp_fu_932_p18),
    .dout(temp_fu_932_p19)
);

myproject_sparsemux_17_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 3'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 3'h7 ),
    .din7_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
sparsemux_17_3_32_1_1_U768(
    .din0(mux_case_07711),
    .din1(mux_case_17815),
    .din2(mux_case_27919),
    .din3(mux_case_38023),
    .din4(mux_case_48127),
    .din5(mux_case_58231),
    .din6(mux_case_68335),
    .din7(mux_case_78439),
    .def(temp_158_fu_964_p17),
    .sel(temp_158_fu_964_p18),
    .dout(temp_158_fu_964_p19)
);

myproject_sparsemux_97_6_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 6'h0 ),
    .din0_WIDTH( 16 ),
    .CASE1( 6'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 6'h2 ),
    .din2_WIDTH( 16 ),
    .CASE3( 6'h3 ),
    .din3_WIDTH( 16 ),
    .CASE4( 6'h4 ),
    .din4_WIDTH( 16 ),
    .CASE5( 6'h5 ),
    .din5_WIDTH( 16 ),
    .CASE6( 6'h6 ),
    .din6_WIDTH( 16 ),
    .CASE7( 6'h7 ),
    .din7_WIDTH( 16 ),
    .CASE8( 6'h8 ),
    .din8_WIDTH( 16 ),
    .CASE9( 6'h9 ),
    .din9_WIDTH( 16 ),
    .CASE10( 6'hA ),
    .din10_WIDTH( 16 ),
    .CASE11( 6'hB ),
    .din11_WIDTH( 16 ),
    .CASE12( 6'hC ),
    .din12_WIDTH( 16 ),
    .CASE13( 6'hD ),
    .din13_WIDTH( 16 ),
    .CASE14( 6'hE ),
    .din14_WIDTH( 16 ),
    .CASE15( 6'hF ),
    .din15_WIDTH( 16 ),
    .CASE16( 6'h10 ),
    .din16_WIDTH( 16 ),
    .CASE17( 6'h11 ),
    .din17_WIDTH( 16 ),
    .CASE18( 6'h12 ),
    .din18_WIDTH( 16 ),
    .CASE19( 6'h13 ),
    .din19_WIDTH( 16 ),
    .CASE20( 6'h14 ),
    .din20_WIDTH( 16 ),
    .CASE21( 6'h15 ),
    .din21_WIDTH( 16 ),
    .CASE22( 6'h16 ),
    .din22_WIDTH( 16 ),
    .CASE23( 6'h17 ),
    .din23_WIDTH( 16 ),
    .CASE24( 6'h18 ),
    .din24_WIDTH( 16 ),
    .CASE25( 6'h19 ),
    .din25_WIDTH( 16 ),
    .CASE26( 6'h1A ),
    .din26_WIDTH( 16 ),
    .CASE27( 6'h1B ),
    .din27_WIDTH( 16 ),
    .CASE28( 6'h1C ),
    .din28_WIDTH( 16 ),
    .CASE29( 6'h1D ),
    .din29_WIDTH( 16 ),
    .CASE30( 6'h1E ),
    .din30_WIDTH( 16 ),
    .CASE31( 6'h1F ),
    .din31_WIDTH( 16 ),
    .CASE32( 6'h20 ),
    .din32_WIDTH( 16 ),
    .CASE33( 6'h21 ),
    .din33_WIDTH( 16 ),
    .CASE34( 6'h22 ),
    .din34_WIDTH( 16 ),
    .CASE35( 6'h23 ),
    .din35_WIDTH( 16 ),
    .CASE36( 6'h24 ),
    .din36_WIDTH( 16 ),
    .CASE37( 6'h25 ),
    .din37_WIDTH( 16 ),
    .CASE38( 6'h26 ),
    .din38_WIDTH( 16 ),
    .CASE39( 6'h27 ),
    .din39_WIDTH( 16 ),
    .CASE40( 6'h28 ),
    .din40_WIDTH( 16 ),
    .CASE41( 6'h29 ),
    .din41_WIDTH( 16 ),
    .CASE42( 6'h2A ),
    .din42_WIDTH( 16 ),
    .CASE43( 6'h2B ),
    .din43_WIDTH( 16 ),
    .CASE44( 6'h2C ),
    .din44_WIDTH( 16 ),
    .CASE45( 6'h2D ),
    .din45_WIDTH( 16 ),
    .CASE46( 6'h2E ),
    .din46_WIDTH( 16 ),
    .CASE47( 6'h2F ),
    .din47_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
sparsemux_97_6_16_1_1_U769(
    .din0(arr_0_val),
    .din1(arr_1_val),
    .din2(arr_2_val),
    .din3(arr_3_val),
    .din4(arr_4_val),
    .din5(arr_5_val),
    .din6(arr_6_val),
    .din7(arr_7_val),
    .din8(arr_8_val),
    .din9(arr_9_val),
    .din10(arr_10_val),
    .din11(arr_11_val),
    .din12(arr_12_val),
    .din13(arr_13_val),
    .din14(arr_14_val),
    .din15(arr_15_val),
    .din16(arr_16_val),
    .din17(arr_17_val),
    .din18(arr_18_val),
    .din19(arr_19_val),
    .din20(arr_20_val),
    .din21(arr_21_val),
    .din22(arr_22_val),
    .din23(arr_23_val),
    .din24(arr_24_val),
    .din25(arr_25_val),
    .din26(arr_26_val),
    .din27(arr_27_val),
    .din28(arr_28_val),
    .din29(arr_29_val),
    .din30(arr_30_val),
    .din31(arr_31_val),
    .din32(arr_32_val),
    .din33(arr_33_val),
    .din34(arr_34_val),
    .din35(arr_35_val),
    .din36(arr_36_val),
    .din37(arr_37_val),
    .din38(arr_38_val),
    .din39(arr_39_val),
    .din40(arr_40_val),
    .din41(arr_41_val),
    .din42(arr_42_val),
    .din43(arr_43_val),
    .din44(arr_44_val),
    .din45(arr_45_val),
    .din46(arr_46_val),
    .din47(arr_47_val),
    .def(tmp_576_fu_1005_p97),
    .sel(tmp_576_fu_1005_p98),
    .dout(tmp_576_fu_1005_p99)
);

myproject_sparsemux_97_6_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 6'h0 ),
    .din0_WIDTH( 16 ),
    .CASE1( 6'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 6'h2 ),
    .din2_WIDTH( 16 ),
    .CASE3( 6'h3 ),
    .din3_WIDTH( 16 ),
    .CASE4( 6'h4 ),
    .din4_WIDTH( 16 ),
    .CASE5( 6'h5 ),
    .din5_WIDTH( 16 ),
    .CASE6( 6'h6 ),
    .din6_WIDTH( 16 ),
    .CASE7( 6'h7 ),
    .din7_WIDTH( 16 ),
    .CASE8( 6'h8 ),
    .din8_WIDTH( 16 ),
    .CASE9( 6'h9 ),
    .din9_WIDTH( 16 ),
    .CASE10( 6'hA ),
    .din10_WIDTH( 16 ),
    .CASE11( 6'hB ),
    .din11_WIDTH( 16 ),
    .CASE12( 6'hC ),
    .din12_WIDTH( 16 ),
    .CASE13( 6'hD ),
    .din13_WIDTH( 16 ),
    .CASE14( 6'hE ),
    .din14_WIDTH( 16 ),
    .CASE15( 6'hF ),
    .din15_WIDTH( 16 ),
    .CASE16( 6'h10 ),
    .din16_WIDTH( 16 ),
    .CASE17( 6'h11 ),
    .din17_WIDTH( 16 ),
    .CASE18( 6'h12 ),
    .din18_WIDTH( 16 ),
    .CASE19( 6'h13 ),
    .din19_WIDTH( 16 ),
    .CASE20( 6'h14 ),
    .din20_WIDTH( 16 ),
    .CASE21( 6'h15 ),
    .din21_WIDTH( 16 ),
    .CASE22( 6'h16 ),
    .din22_WIDTH( 16 ),
    .CASE23( 6'h17 ),
    .din23_WIDTH( 16 ),
    .CASE24( 6'h18 ),
    .din24_WIDTH( 16 ),
    .CASE25( 6'h19 ),
    .din25_WIDTH( 16 ),
    .CASE26( 6'h1A ),
    .din26_WIDTH( 16 ),
    .CASE27( 6'h1B ),
    .din27_WIDTH( 16 ),
    .CASE28( 6'h1C ),
    .din28_WIDTH( 16 ),
    .CASE29( 6'h1D ),
    .din29_WIDTH( 16 ),
    .CASE30( 6'h1E ),
    .din30_WIDTH( 16 ),
    .CASE31( 6'h1F ),
    .din31_WIDTH( 16 ),
    .CASE32( 6'h20 ),
    .din32_WIDTH( 16 ),
    .CASE33( 6'h21 ),
    .din33_WIDTH( 16 ),
    .CASE34( 6'h22 ),
    .din34_WIDTH( 16 ),
    .CASE35( 6'h23 ),
    .din35_WIDTH( 16 ),
    .CASE36( 6'h24 ),
    .din36_WIDTH( 16 ),
    .CASE37( 6'h25 ),
    .din37_WIDTH( 16 ),
    .CASE38( 6'h26 ),
    .din38_WIDTH( 16 ),
    .CASE39( 6'h27 ),
    .din39_WIDTH( 16 ),
    .CASE40( 6'h28 ),
    .din40_WIDTH( 16 ),
    .CASE41( 6'h29 ),
    .din41_WIDTH( 16 ),
    .CASE42( 6'h2A ),
    .din42_WIDTH( 16 ),
    .CASE43( 6'h2B ),
    .din43_WIDTH( 16 ),
    .CASE44( 6'h2C ),
    .din44_WIDTH( 16 ),
    .CASE45( 6'h2D ),
    .din45_WIDTH( 16 ),
    .CASE46( 6'h2E ),
    .din46_WIDTH( 16 ),
    .CASE47( 6'h2F ),
    .din47_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
sparsemux_97_6_16_1_1_U770(
    .din0(arr_0_val),
    .din1(arr_1_val),
    .din2(arr_2_val),
    .din3(arr_3_val),
    .din4(arr_4_val),
    .din5(arr_5_val),
    .din6(arr_6_val),
    .din7(arr_7_val),
    .din8(arr_8_val),
    .din9(arr_9_val),
    .din10(arr_10_val),
    .din11(arr_11_val),
    .din12(arr_12_val),
    .din13(arr_13_val),
    .din14(arr_14_val),
    .din15(arr_15_val),
    .din16(arr_16_val),
    .din17(arr_17_val),
    .din18(arr_18_val),
    .din19(arr_19_val),
    .din20(arr_20_val),
    .din21(arr_21_val),
    .din22(arr_22_val),
    .din23(arr_23_val),
    .din24(arr_24_val),
    .din25(arr_25_val),
    .din26(arr_26_val),
    .din27(arr_27_val),
    .din28(arr_28_val),
    .din29(arr_29_val),
    .din30(arr_30_val),
    .din31(arr_31_val),
    .din32(arr_32_val),
    .din33(arr_33_val),
    .din34(arr_34_val),
    .din35(arr_35_val),
    .din36(arr_36_val),
    .din37(arr_37_val),
    .din38(arr_38_val),
    .din39(arr_39_val),
    .din40(arr_40_val),
    .din41(arr_41_val),
    .din42(arr_42_val),
    .din43(arr_43_val),
    .din44(arr_44_val),
    .din45(arr_45_val),
    .din46(arr_46_val),
    .din47(arr_47_val),
    .def(tmp_577_fu_1166_p97),
    .sel(tmp_577_fu_1166_p98),
    .dout(tmp_577_fu_1166_p99)
);

myproject_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_4_fu_348 <= 32'd2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd7) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd6) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd5) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd4) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd3) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd2) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd1) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd0) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        i_4_fu_348 <= i_22_fu_1331_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
            indvars_iv52_reg_844 <= 32'd1;
        end else if ((1'b1 == ap_condition_820)) begin
            indvars_iv52_reg_844 <= add_ln149_fu_1541_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_5_fu_352 <= 32'd3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd7) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd6) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd5) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd4) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd3) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd2) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd1) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln147_20_fu_928_p1 == 3'd0) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        j_5_fu_352 <= j_22_fu_1417_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_5_fu_312 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            k_5_fu_312 <= k_23_fu_1324_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_52_fu_316 <= temp_44;
        end else if ((1'b1 == ap_condition_827)) begin
            temp_52_fu_316 <= temp_158_fu_964_p19;
        end else if ((1'b1 == ap_condition_824)) begin
            temp_52_fu_316 <= temp_fu_932_p19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_53_fu_320 <= temp_45;
        end else if ((1'b1 == ap_condition_833)) begin
            temp_53_fu_320 <= temp_158_fu_964_p19;
        end else if ((1'b1 == ap_condition_830)) begin
            temp_53_fu_320 <= temp_fu_932_p19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_54_fu_324 <= temp_46;
        end else if ((1'b1 == ap_condition_839)) begin
            temp_54_fu_324 <= temp_158_fu_964_p19;
        end else if ((1'b1 == ap_condition_836)) begin
            temp_54_fu_324 <= temp_fu_932_p19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_55_fu_328 <= temp_47;
        end else if ((1'b1 == ap_condition_845)) begin
            temp_55_fu_328 <= temp_158_fu_964_p19;
        end else if ((1'b1 == ap_condition_842)) begin
            temp_55_fu_328 <= temp_fu_932_p19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_56_fu_332 <= temp_48;
        end else if ((1'b1 == ap_condition_851)) begin
            temp_56_fu_332 <= temp_158_fu_964_p19;
        end else if ((1'b1 == ap_condition_848)) begin
            temp_56_fu_332 <= temp_fu_932_p19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_57_fu_336 <= temp_49;
        end else if ((1'b1 == ap_condition_857)) begin
            temp_57_fu_336 <= temp_158_fu_964_p19;
        end else if ((1'b1 == ap_condition_854)) begin
            temp_57_fu_336 <= temp_fu_932_p19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_58_fu_340 <= temp_50;
        end else if ((1'b1 == ap_condition_863)) begin
            temp_58_fu_340 <= temp_158_fu_964_p19;
        end else if ((1'b1 == ap_condition_860)) begin
            temp_58_fu_340 <= temp_fu_932_p19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_59_fu_344 <= temp_51;
        end else if ((1'b1 == ap_condition_869)) begin
            temp_59_fu_344 <= temp_158_fu_964_p19;
        end else if ((1'b1 == ap_condition_866)) begin
            temp_59_fu_344 <= temp_fu_932_p19;
        end
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd7) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd6) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd5) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd4) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd3) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd2) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) 
    | ((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd1) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd0) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_sig_allocacmp_i_23 = i_22_fu_1331_p2;
    end else begin
        ap_sig_allocacmp_i_23 = i_4_fu_348;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd7) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd6) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd5) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd4) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd3) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd2) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) 
    | ((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd1) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (trunc_ln147_20_fu_928_p1 == 3'd0) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_sig_allocacmp_j_23 = j_22_fu_1417_p2;
    end else begin
        ap_sig_allocacmp_j_23 = j_5_fu_352;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_6_out_ap_vld = 1'b1;
    end else begin
        i_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp33_out_ap_vld = 1'b1;
    end else begin
        icmp33_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln149_2_out_ap_vld = 1'b1;
    end else begin
        icmp_ln149_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvars_iv52_out_ap_vld = 1'b1;
    end else begin
        indvars_iv52_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_7_out_ap_vld = 1'b1;
    end else begin
        j_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_6_out_ap_vld = 1'b1;
    end else begin
        k_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_62_out_ap_vld = 1'b1;
    end else begin
        temp_62_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_63_out_ap_vld = 1'b1;
    end else begin
        temp_63_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_64_out_ap_vld = 1'b1;
    end else begin
        temp_64_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_65_out_ap_vld = 1'b1;
    end else begin
        temp_65_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_66_out_ap_vld = 1'b1;
    end else begin
        temp_66_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_67_out_ap_vld = 1'b1;
    end else begin
        temp_67_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_68_out_ap_vld = 1'b1;
    end else begin
        temp_68_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln149_fu_1535_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_69_out_ap_vld = 1'b1;
    end else begin
        temp_69_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln149_fu_1541_p2 = (indvars_iv52_reg_844 + 32'd1);

assign and_ln149_fu_1535_p2 = (icmp_ln149_fu_1528_p2 & icmp_ln149_2_fu_1511_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_820 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln149_fu_1535_p2) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_824 = ((trunc_ln147_20_fu_928_p1 == 3'd0) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_827 = ((trunc_ln147_20_fu_928_p1 == 3'd0) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_830 = ((trunc_ln147_20_fu_928_p1 == 3'd1) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_833 = ((trunc_ln147_20_fu_928_p1 == 3'd1) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_836 = ((trunc_ln147_20_fu_928_p1 == 3'd2) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_839 = ((trunc_ln147_20_fu_928_p1 == 3'd2) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_842 = ((trunc_ln147_20_fu_928_p1 == 3'd3) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_845 = ((trunc_ln147_20_fu_928_p1 == 3'd3) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_848 = ((trunc_ln147_20_fu_928_p1 == 3'd4) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_851 = ((trunc_ln147_20_fu_928_p1 == 3'd4) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_854 = ((trunc_ln147_20_fu_928_p1 == 3'd5) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_857 = ((trunc_ln147_20_fu_928_p1 == 3'd5) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_860 = ((trunc_ln147_20_fu_928_p1 == 3'd6) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_863 = ((trunc_ln147_20_fu_928_p1 == 3'd6) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_866 = ((trunc_ln147_20_fu_928_p1 == 3'd7) & (icmp_ln151_fu_1318_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_869 = ((trunc_ln147_20_fu_928_p1 == 3'd7) & (icmp_ln151_fu_1318_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign i_22_fu_1331_p2 = (i_4_fu_348 + 32'd1);

assign i_6_out = i_4_fu_348;

assign icmp33_out = icmp_ln149_fu_1528_p2;

assign icmp_ln149_2_fu_1511_p2 = ((ap_sig_allocacmp_i_23 < 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln149_2_out = icmp_ln149_2_fu_1511_p2;

assign icmp_ln149_fu_1528_p2 = ((tmp_fu_1518_p4 == 30'd0) ? 1'b1 : 1'b0);

assign icmp_ln151_fu_1318_p2 = (($signed(tmp_576_fu_1005_p99) > $signed(tmp_577_fu_1166_p99)) ? 1'b1 : 1'b0);

assign indvars_iv52_out = indvars_iv52_reg_844;

assign j_22_fu_1417_p2 = (j_5_fu_352 + 32'd1);

assign j_7_out = j_5_fu_352;

assign k_23_fu_1324_p2 = (k_5_fu_312 + 32'd1);

assign k_6_out = (k_5_fu_312 + 32'd1);

assign temp_158_fu_964_p17 = 'bx;

assign temp_158_fu_964_p18 = j_5_fu_352[2:0];

assign temp_62_out = temp_52_fu_316;

assign temp_63_out = temp_53_fu_320;

assign temp_64_out = temp_54_fu_324;

assign temp_65_out = temp_55_fu_328;

assign temp_66_out = temp_56_fu_332;

assign temp_67_out = temp_57_fu_336;

assign temp_68_out = temp_58_fu_340;

assign temp_69_out = temp_59_fu_344;

assign temp_fu_932_p17 = 'bx;

assign temp_fu_932_p18 = i_4_fu_348[2:0];

assign tmp_576_fu_1005_p97 = 'bx;

assign tmp_576_fu_1005_p98 = (trunc_ln151_fu_996_p1 + idx1);

assign tmp_577_fu_1166_p97 = 'bx;

assign tmp_577_fu_1166_p98 = (trunc_ln151_6_fu_1157_p1 + idx1);

assign tmp_fu_1518_p4 = {{ap_sig_allocacmp_j_23[31:2]}};

assign trunc_ln147_20_fu_928_p1 = k_5_fu_312[2:0];

assign trunc_ln151_6_fu_1157_p1 = temp_158_fu_964_p19[5:0];

assign trunc_ln151_fu_996_p1 = temp_fu_932_p19[5:0];

endmodule //myproject_merge_sort_ap_fixed_16_6_5_3_0_config5_Pipeline_VITIS_LOOP_149_31
