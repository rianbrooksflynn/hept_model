// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_merge_sort_ap_fixed_16_6_5_3_0_config5_Pipeline_VITIS_LOOP_161_517 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        temp_425,
        temp_424,
        temp_423,
        temp_422,
        temp_421,
        temp_420,
        temp_419,
        temp_418,
        zext_ln161_4,
        k_53,
        mux_case_0637491,
        mux_case_1638495,
        mux_case_2639499,
        mux_case_3640503,
        mux_case_4641507,
        mux_case_5642511,
        mux_case_6643515,
        mux_case_7644519,
        temp_442_out,
        temp_442_out_ap_vld,
        temp_441_out,
        temp_441_out_ap_vld,
        temp_440_out,
        temp_440_out_ap_vld,
        temp_439_out,
        temp_439_out_ap_vld,
        temp_438_out,
        temp_438_out_ap_vld,
        temp_437_out,
        temp_437_out_ap_vld,
        temp_436_out,
        temp_436_out_ap_vld,
        temp_435_out,
        temp_435_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] temp_425;
input  [31:0] temp_424;
input  [31:0] temp_423;
input  [31:0] temp_422;
input  [31:0] temp_421;
input  [31:0] temp_420;
input  [31:0] temp_419;
input  [31:0] temp_418;
input  [2:0] zext_ln161_4;
input  [31:0] k_53;
input  [31:0] mux_case_0637491;
input  [31:0] mux_case_1638495;
input  [31:0] mux_case_2639499;
input  [31:0] mux_case_3640503;
input  [31:0] mux_case_4641507;
input  [31:0] mux_case_5642511;
input  [31:0] mux_case_6643515;
input  [31:0] mux_case_7644519;
output  [31:0] temp_442_out;
output   temp_442_out_ap_vld;
output  [31:0] temp_441_out;
output   temp_441_out_ap_vld;
output  [31:0] temp_440_out;
output   temp_440_out_ap_vld;
output  [31:0] temp_439_out;
output   temp_439_out_ap_vld;
output  [31:0] temp_438_out;
output   temp_438_out_ap_vld;
output  [31:0] temp_437_out;
output   temp_437_out_ap_vld;
output  [31:0] temp_436_out;
output   temp_436_out_ap_vld;
output  [31:0] temp_435_out;
output   temp_435_out_ap_vld;

reg ap_idle;
reg temp_442_out_ap_vld;
reg temp_441_out_ap_vld;
reg temp_440_out_ap_vld;
reg temp_439_out_ap_vld;
reg temp_438_out_ap_vld;
reg temp_437_out_ap_vld;
reg temp_436_out_ap_vld;
reg temp_435_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_fu_359_p3;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] k_fu_98;
wire   [31:0] k_4_fu_416_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [3:0] j_fu_102;
wire   [3:0] add_ln163_fu_378_p2;
wire   [3:0] zext_ln161_4_cast_fu_302_p1;
reg   [31:0] temp_fu_106;
wire   [31:0] temp_32_fu_384_p19;
wire   [2:0] trunc_ln147_3_fu_374_p1;
reg   [31:0] temp_25_fu_110;
reg   [31:0] temp_26_fu_114;
reg   [31:0] temp_27_fu_118;
reg   [31:0] temp_28_fu_122;
reg   [31:0] temp_29_fu_126;
reg   [31:0] temp_30_fu_130;
reg   [31:0] temp_31_fu_134;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] temp_32_fu_384_p17;
wire   [2:0] temp_32_fu_384_p18;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_282;
reg    ap_condition_285;
reg    ap_condition_288;
reg    ap_condition_291;
reg    ap_condition_294;
reg    ap_condition_297;
reg    ap_condition_300;
reg    ap_condition_303;
wire   [2:0] temp_32_fu_384_p1;
wire   [2:0] temp_32_fu_384_p3;
wire   [2:0] temp_32_fu_384_p5;
wire   [2:0] temp_32_fu_384_p7;
wire  signed [2:0] temp_32_fu_384_p9;
wire  signed [2:0] temp_32_fu_384_p11;
wire  signed [2:0] temp_32_fu_384_p13;
wire  signed [2:0] temp_32_fu_384_p15;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 k_fu_98 = 32'd0;
#0 j_fu_102 = 4'd0;
#0 temp_fu_106 = 32'd0;
#0 temp_25_fu_110 = 32'd0;
#0 temp_26_fu_114 = 32'd0;
#0 temp_27_fu_118 = 32'd0;
#0 temp_28_fu_122 = 32'd0;
#0 temp_29_fu_126 = 32'd0;
#0 temp_30_fu_130 = 32'd0;
#0 temp_31_fu_134 = 32'd0;
#0 ap_done_reg = 1'b0;
end

myproject_sparsemux_17_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 3'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 3'h7 ),
    .din7_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
sparsemux_17_3_32_1_1_U1542(
    .din0(mux_case_0637491),
    .din1(mux_case_1638495),
    .din2(mux_case_2639499),
    .din3(mux_case_3640503),
    .din4(mux_case_4641507),
    .din5(mux_case_5642511),
    .din6(mux_case_6643515),
    .din7(mux_case_7644519),
    .def(temp_32_fu_384_p17),
    .sel(temp_32_fu_384_p18),
    .dout(temp_32_fu_384_p19)
);

myproject_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_102 <= zext_ln161_4_cast_fu_302_p1;
        end else if (((tmp_fu_359_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_102 <= add_ln163_fu_378_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_98 <= k_53;
        end else if (((tmp_fu_359_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_fu_98 <= k_4_fu_416_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_25_fu_110 <= temp_419;
        end else if ((1'b1 == ap_condition_282)) begin
            temp_25_fu_110 <= temp_32_fu_384_p19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_26_fu_114 <= temp_420;
        end else if ((1'b1 == ap_condition_285)) begin
            temp_26_fu_114 <= temp_32_fu_384_p19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_27_fu_118 <= temp_421;
        end else if ((1'b1 == ap_condition_288)) begin
            temp_27_fu_118 <= temp_32_fu_384_p19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_28_fu_122 <= temp_422;
        end else if ((1'b1 == ap_condition_291)) begin
            temp_28_fu_122 <= temp_32_fu_384_p19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_29_fu_126 <= temp_423;
        end else if ((1'b1 == ap_condition_294)) begin
            temp_29_fu_126 <= temp_32_fu_384_p19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_30_fu_130 <= temp_424;
        end else if ((1'b1 == ap_condition_297)) begin
            temp_30_fu_130 <= temp_32_fu_384_p19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_31_fu_134 <= temp_425;
        end else if ((1'b1 == ap_condition_300)) begin
            temp_31_fu_134 <= temp_32_fu_384_p19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            temp_fu_106 <= temp_418;
        end else if ((1'b1 == ap_condition_303)) begin
            temp_fu_106 <= temp_32_fu_384_p19;
        end
    end
end

always @ (*) begin
    if (((tmp_fu_359_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_359_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_435_out_ap_vld = 1'b1;
    end else begin
        temp_435_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_359_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_436_out_ap_vld = 1'b1;
    end else begin
        temp_436_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_359_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_437_out_ap_vld = 1'b1;
    end else begin
        temp_437_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_359_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_438_out_ap_vld = 1'b1;
    end else begin
        temp_438_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_359_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_439_out_ap_vld = 1'b1;
    end else begin
        temp_439_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_359_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_440_out_ap_vld = 1'b1;
    end else begin
        temp_440_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_359_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_441_out_ap_vld = 1'b1;
    end else begin
        temp_441_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_359_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_442_out_ap_vld = 1'b1;
    end else begin
        temp_442_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln163_fu_378_p2 = (j_fu_102 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_282 = ((tmp_fu_359_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_3_fu_374_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_285 = ((tmp_fu_359_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_3_fu_374_p1 == 3'd2));
end

always @ (*) begin
    ap_condition_288 = ((tmp_fu_359_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_3_fu_374_p1 == 3'd3));
end

always @ (*) begin
    ap_condition_291 = ((tmp_fu_359_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_3_fu_374_p1 == 3'd4));
end

always @ (*) begin
    ap_condition_294 = ((tmp_fu_359_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_3_fu_374_p1 == 3'd5));
end

always @ (*) begin
    ap_condition_297 = ((tmp_fu_359_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_3_fu_374_p1 == 3'd6));
end

always @ (*) begin
    ap_condition_300 = ((tmp_fu_359_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_3_fu_374_p1 == 3'd7));
end

always @ (*) begin
    ap_condition_303 = ((tmp_fu_359_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln147_3_fu_374_p1 == 3'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign k_4_fu_416_p2 = (k_fu_98 + 32'd1);

assign temp_32_fu_384_p17 = 'bx;

assign temp_32_fu_384_p18 = j_fu_102[2:0];

assign temp_435_out = temp_fu_106;

assign temp_436_out = temp_25_fu_110;

assign temp_437_out = temp_26_fu_114;

assign temp_438_out = temp_27_fu_118;

assign temp_439_out = temp_28_fu_122;

assign temp_440_out = temp_29_fu_126;

assign temp_441_out = temp_30_fu_130;

assign temp_442_out = temp_31_fu_134;

assign tmp_fu_359_p3 = j_fu_102[32'd3];

assign trunc_ln147_3_fu_374_p1 = k_fu_98[2:0];

assign zext_ln161_4_cast_fu_302_p1 = zext_ln161_4;

endmodule //myproject_merge_sort_ap_fixed_16_6_5_3_0_config5_Pipeline_VITIS_LOOP_161_517
