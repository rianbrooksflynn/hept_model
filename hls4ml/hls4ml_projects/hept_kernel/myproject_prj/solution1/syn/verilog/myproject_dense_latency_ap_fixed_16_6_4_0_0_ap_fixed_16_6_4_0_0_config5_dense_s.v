// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_dense_latency_ap_fixed_16_6_4_0_0_ap_fixed_16_6_4_0_0_config5_dense_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        data_address0,
        data_ce0,
        data_q0,
        data_address1,
        data_ce1,
        data_q1,
        data_offset,
        weights_address0,
        weights_ce0,
        weights_q0,
        weights_address1,
        weights_ce1,
        weights_q1,
        weights_offset,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5
);

parameter    ap_ST_fsm_pp0_stage0 = 9'd1;
parameter    ap_ST_fsm_pp0_stage1 = 9'd2;
parameter    ap_ST_fsm_pp0_stage2 = 9'd4;
parameter    ap_ST_fsm_pp0_stage3 = 9'd8;
parameter    ap_ST_fsm_pp0_stage4 = 9'd16;
parameter    ap_ST_fsm_pp0_stage5 = 9'd32;
parameter    ap_ST_fsm_pp0_stage6 = 9'd64;
parameter    ap_ST_fsm_pp0_stage7 = 9'd128;
parameter    ap_ST_fsm_pp0_stage8 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
output  [6:0] data_address0;
output   data_ce0;
input  [15:0] data_q0;
output  [6:0] data_address1;
output   data_ce1;
input  [15:0] data_q1;
input  [6:0] data_offset;
output  [7:0] weights_address0;
output   weights_ce0;
input  [15:0] weights_q0;
output  [7:0] weights_address1;
output   weights_ce1;
input  [15:0] weights_q1;
input  [6:0] weights_offset;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] data_address0;
reg data_ce0;
reg data_ce1;
reg[7:0] weights_address0;
reg weights_ce0;
reg[7:0] weights_address1;
reg weights_ce1;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire   [31:0] mul_ln1118_fu_308_p2;
reg   [31:0] reg_436;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] mul_ln1118_1080_fu_306_p2;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] mul_ln1118_1082_fu_312_p2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] mul_ln1118_1084_fu_311_p2;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire   [31:0] mul_ln1118_1086_fu_307_p2;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [31:0] mul_ln1118_1088_fu_314_p2;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [31:0] mul_ln1118_1090_fu_321_p2;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire   [31:0] mul_ln1118_1092_fu_313_p2;
wire   [31:0] mul_ln1118_1094_fu_319_p2;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] mul_ln1118_1079_fu_316_p2;
reg   [31:0] reg_440;
wire   [31:0] mul_ln1118_1081_fu_320_p2;
wire   [31:0] mul_ln1118_1083_fu_305_p2;
wire   [31:0] mul_ln1118_1085_fu_310_p2;
wire   [31:0] mul_ln1118_1087_fu_318_p2;
wire   [31:0] mul_ln1118_1089_fu_304_p2;
wire   [31:0] mul_ln1118_1091_fu_317_p2;
wire   [31:0] mul_ln1118_1093_fu_315_p2;
wire   [31:0] mul_ln1118_1095_fu_309_p2;
reg   [6:0] weights_offset_read_reg_6766;
reg   [6:0] data_offset_read_reg_6771;
wire   [7:0] weights_offset_cast_fu_1005_p1;
reg   [7:0] weights_offset_cast_reg_6796;
wire  signed [31:0] sext_ln1116_fu_1008_p1;
reg  signed [31:0] sext_ln1116_reg_6814;
reg   [0:0] tmp_reg_6822;
wire   [0:0] icmp_ln718_fu_1031_p2;
reg   [0:0] icmp_ln718_reg_6828;
wire   [0:0] icmp_ln874_fu_1047_p2;
reg   [0:0] icmp_ln874_reg_6833;
wire   [0:0] icmp_ln874_1_fu_1063_p2;
reg   [0:0] icmp_ln874_1_reg_6838;
wire   [0:0] icmp_ln768_fu_1069_p2;
reg   [0:0] icmp_ln768_reg_6845;
reg   [0:0] tmp_8740_reg_6850;
wire   [0:0] icmp_ln718_1_fu_1092_p2;
reg   [0:0] icmp_ln718_1_reg_6856;
wire   [0:0] icmp_ln874_2_fu_1108_p2;
reg   [0:0] icmp_ln874_2_reg_6861;
wire   [0:0] icmp_ln874_3_fu_1124_p2;
reg   [0:0] icmp_ln874_3_reg_6866;
wire   [0:0] icmp_ln768_1_fu_1130_p2;
reg   [0:0] icmp_ln768_1_reg_6873;
reg   [15:0] data_load_144_reg_6888;
wire  signed [15:0] select_ln384_1919_fu_1340_p3;
reg  signed [15:0] select_ln384_1919_reg_6898;
wire  signed [15:0] select_ln384_1921_fu_1520_p3;
reg  signed [15:0] select_ln384_1921_reg_6904;
reg   [0:0] tmp_8746_reg_6910;
wire   [0:0] icmp_ln718_2_fu_1545_p2;
reg   [0:0] icmp_ln718_2_reg_6916;
wire   [0:0] icmp_ln874_4_fu_1561_p2;
reg   [0:0] icmp_ln874_4_reg_6921;
wire   [0:0] icmp_ln874_5_fu_1577_p2;
reg   [0:0] icmp_ln874_5_reg_6926;
wire   [0:0] icmp_ln768_2_fu_1583_p2;
reg   [0:0] icmp_ln768_2_reg_6933;
reg   [0:0] tmp_8752_reg_6938;
wire   [0:0] icmp_ln718_3_fu_1606_p2;
reg   [0:0] icmp_ln718_3_reg_6944;
wire   [0:0] icmp_ln874_6_fu_1622_p2;
reg   [0:0] icmp_ln874_6_reg_6949;
wire   [0:0] icmp_ln874_7_fu_1638_p2;
reg   [0:0] icmp_ln874_7_reg_6954;
wire   [0:0] icmp_ln768_3_fu_1644_p2;
reg   [0:0] icmp_ln768_3_reg_6961;
reg   [15:0] data_load_145_reg_6976;
wire  signed [15:0] select_ln384_1923_fu_1842_p3;
reg  signed [15:0] select_ln384_1923_reg_6981;
wire  signed [15:0] select_ln384_1925_fu_2022_p3;
reg  signed [15:0] select_ln384_1925_reg_6987;
reg   [0:0] tmp_8758_reg_6993;
wire   [0:0] icmp_ln718_4_fu_2047_p2;
reg   [0:0] icmp_ln718_4_reg_6999;
wire   [0:0] icmp_ln874_8_fu_2063_p2;
reg   [0:0] icmp_ln874_8_reg_7004;
wire   [0:0] icmp_ln874_9_fu_2079_p2;
reg   [0:0] icmp_ln874_9_reg_7009;
wire   [0:0] icmp_ln768_4_fu_2085_p2;
reg   [0:0] icmp_ln768_4_reg_7016;
reg   [0:0] tmp_8764_reg_7021;
wire   [0:0] icmp_ln718_5_fu_2108_p2;
reg   [0:0] icmp_ln718_5_reg_7027;
wire   [0:0] icmp_ln874_10_fu_2124_p2;
reg   [0:0] icmp_ln874_10_reg_7032;
wire   [0:0] icmp_ln874_11_fu_2140_p2;
reg   [0:0] icmp_ln874_11_reg_7037;
wire   [0:0] icmp_ln768_5_fu_2146_p2;
reg   [0:0] icmp_ln768_5_reg_7044;
wire  signed [15:0] select_ln384_1927_fu_2344_p3;
reg  signed [15:0] select_ln384_1927_reg_7059;
wire  signed [15:0] select_ln384_1929_fu_2524_p3;
reg  signed [15:0] select_ln384_1929_reg_7065;
wire  signed [31:0] sext_ln1116_1_fu_2532_p1;
reg  signed [31:0] sext_ln1116_1_reg_7071;
reg   [0:0] tmp_8770_reg_7079;
wire   [0:0] icmp_ln718_6_fu_2554_p2;
reg   [0:0] icmp_ln718_6_reg_7085;
wire   [0:0] icmp_ln874_12_fu_2570_p2;
reg   [0:0] icmp_ln874_12_reg_7090;
wire   [0:0] icmp_ln874_13_fu_2586_p2;
reg   [0:0] icmp_ln874_13_reg_7095;
wire   [0:0] icmp_ln768_6_fu_2592_p2;
reg   [0:0] icmp_ln768_6_reg_7102;
reg   [0:0] tmp_8776_reg_7107;
wire   [0:0] icmp_ln718_7_fu_2615_p2;
reg   [0:0] icmp_ln718_7_reg_7113;
wire   [0:0] icmp_ln874_14_fu_2631_p2;
reg   [0:0] icmp_ln874_14_reg_7118;
wire   [0:0] icmp_ln874_15_fu_2647_p2;
reg   [0:0] icmp_ln874_15_reg_7123;
wire   [0:0] icmp_ln768_7_fu_2653_p2;
reg   [0:0] icmp_ln768_7_reg_7130;
reg   [0:0] tmp_8782_reg_7145;
wire   [0:0] icmp_ln718_8_fu_3056_p2;
reg   [0:0] icmp_ln718_8_reg_7151;
wire   [0:0] icmp_ln874_16_fu_3072_p2;
reg   [0:0] icmp_ln874_16_reg_7156;
wire   [0:0] icmp_ln874_17_fu_3088_p2;
reg   [0:0] icmp_ln874_17_reg_7161;
wire   [0:0] icmp_ln768_8_fu_3094_p2;
reg   [0:0] icmp_ln768_8_reg_7168;
reg   [0:0] tmp_8788_reg_7173;
wire   [0:0] icmp_ln718_9_fu_3117_p2;
reg   [0:0] icmp_ln718_9_reg_7179;
wire   [0:0] icmp_ln874_18_fu_3133_p2;
reg   [0:0] icmp_ln874_18_reg_7184;
wire   [0:0] icmp_ln874_19_fu_3149_p2;
reg   [0:0] icmp_ln874_19_reg_7189;
wire   [0:0] icmp_ln768_9_fu_3155_p2;
reg   [0:0] icmp_ln768_9_reg_7196;
wire  signed [15:0] select_ln340_130_fu_3273_p3;
reg  signed [15:0] select_ln340_130_reg_7211;
wire  signed [15:0] select_ln340_131_fu_3373_p3;
reg  signed [15:0] select_ln340_131_reg_7217;
reg   [0:0] tmp_8794_reg_7223;
wire   [0:0] icmp_ln718_10_fu_3758_p2;
reg   [0:0] icmp_ln718_10_reg_7229;
wire   [0:0] icmp_ln874_20_fu_3774_p2;
reg   [0:0] icmp_ln874_20_reg_7234;
wire   [0:0] icmp_ln874_21_fu_3790_p2;
reg   [0:0] icmp_ln874_21_reg_7239;
wire   [0:0] icmp_ln768_10_fu_3796_p2;
reg   [0:0] icmp_ln768_10_reg_7246;
reg   [0:0] tmp_8800_reg_7251;
wire   [0:0] icmp_ln718_11_fu_3819_p2;
reg   [0:0] icmp_ln718_11_reg_7257;
wire   [0:0] icmp_ln874_22_fu_3835_p2;
reg   [0:0] icmp_ln874_22_reg_7262;
wire   [0:0] icmp_ln874_23_fu_3851_p2;
reg   [0:0] icmp_ln874_23_reg_7267;
wire   [0:0] icmp_ln768_11_fu_3857_p2;
reg   [0:0] icmp_ln768_11_reg_7274;
wire  signed [15:0] select_ln340_132_fu_3975_p3;
reg  signed [15:0] select_ln340_132_reg_7289;
wire  signed [15:0] select_ln340_133_fu_4075_p3;
reg  signed [15:0] select_ln340_133_reg_7295;
wire  signed [31:0] sext_ln1116_2_fu_4443_p1;
reg  signed [31:0] sext_ln1116_2_reg_7301;
reg   [0:0] tmp_8806_reg_7309;
wire   [0:0] icmp_ln718_12_fu_4465_p2;
reg   [0:0] icmp_ln718_12_reg_7315;
wire   [0:0] icmp_ln874_24_fu_4481_p2;
reg   [0:0] icmp_ln874_24_reg_7320;
wire   [0:0] icmp_ln874_25_fu_4497_p2;
reg   [0:0] icmp_ln874_25_reg_7325;
wire   [0:0] icmp_ln768_12_fu_4503_p2;
reg   [0:0] icmp_ln768_12_reg_7332;
reg   [0:0] tmp_8812_reg_7337;
wire   [0:0] icmp_ln718_13_fu_4526_p2;
reg   [0:0] icmp_ln718_13_reg_7343;
wire   [0:0] icmp_ln874_26_fu_4542_p2;
reg   [0:0] icmp_ln874_26_reg_7348;
wire   [0:0] icmp_ln874_27_fu_4558_p2;
reg   [0:0] icmp_ln874_27_reg_7353;
wire   [0:0] icmp_ln768_13_fu_4564_p2;
reg   [0:0] icmp_ln768_13_reg_7360;
wire  signed [15:0] select_ln340_134_fu_4682_p3;
reg  signed [15:0] select_ln340_134_reg_7375;
wire  signed [15:0] select_ln340_135_fu_4782_p3;
reg  signed [15:0] select_ln340_135_reg_7381;
reg   [0:0] tmp_8818_reg_7387;
wire   [0:0] icmp_ln718_14_fu_5167_p2;
reg   [0:0] icmp_ln718_14_reg_7393;
wire   [0:0] icmp_ln874_28_fu_5183_p2;
reg   [0:0] icmp_ln874_28_reg_7398;
wire   [0:0] icmp_ln874_29_fu_5199_p2;
reg   [0:0] icmp_ln874_29_reg_7403;
wire   [0:0] icmp_ln768_14_fu_5205_p2;
reg   [0:0] icmp_ln768_14_reg_7410;
reg   [0:0] tmp_8824_reg_7415;
wire   [0:0] icmp_ln718_15_fu_5228_p2;
reg   [0:0] icmp_ln718_15_reg_7421;
wire   [0:0] icmp_ln874_30_fu_5244_p2;
reg   [0:0] icmp_ln874_30_reg_7426;
wire   [0:0] icmp_ln874_31_fu_5260_p2;
reg   [0:0] icmp_ln874_31_reg_7431;
wire   [0:0] icmp_ln768_15_fu_5266_p2;
reg   [0:0] icmp_ln768_15_reg_7438;
wire   [15:0] select_ln340_136_fu_5384_p3;
reg   [15:0] select_ln340_136_reg_7453;
wire   [15:0] select_ln340_137_fu_5484_p3;
reg   [15:0] select_ln340_137_reg_7458;
reg   [0:0] tmp_8830_reg_7463;
wire   [0:0] icmp_ln718_16_fu_5869_p2;
reg   [0:0] icmp_ln718_16_reg_7469;
wire   [0:0] icmp_ln874_32_fu_5885_p2;
reg   [0:0] icmp_ln874_32_reg_7474;
wire   [0:0] icmp_ln874_33_fu_5901_p2;
reg   [0:0] icmp_ln874_33_reg_7479;
wire   [0:0] icmp_ln768_16_fu_5907_p2;
reg   [0:0] icmp_ln768_16_reg_7486;
reg   [0:0] tmp_8836_reg_7491;
wire   [0:0] icmp_ln718_17_fu_5930_p2;
reg   [0:0] icmp_ln718_17_reg_7497;
wire   [0:0] icmp_ln874_34_fu_5946_p2;
reg   [0:0] icmp_ln874_34_reg_7502;
wire   [0:0] icmp_ln874_35_fu_5962_p2;
reg   [0:0] icmp_ln874_35_reg_7507;
wire   [0:0] icmp_ln768_17_fu_5968_p2;
reg   [0:0] icmp_ln768_17_reg_7514;
wire   [15:0] select_ln340_138_fu_6066_p3;
reg   [15:0] select_ln340_138_reg_7519;
wire   [15:0] select_ln340_139_fu_6166_p3;
reg   [15:0] select_ln340_139_reg_7524;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage8_subdone;
wire   [63:0] weights_offset_cast37_fu_973_p1;
wire   [63:0] data_offset_cast_fu_978_p1;
wire   [63:0] zext_ln42_fu_989_p1;
wire   [63:0] zext_ln38_fu_1000_p1;
wire   [63:0] zext_ln42_1_fu_1142_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln42_2_fu_1153_p1;
wire   [63:0] zext_ln38_1_fu_1163_p1;
wire   [63:0] zext_ln42_3_fu_1655_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln42_4_fu_1665_p1;
wire   [63:0] zext_ln42_5_fu_2157_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln42_6_fu_2167_p1;
wire   [63:0] zext_ln42_7_fu_2664_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln42_8_fu_2674_p1;
wire   [63:0] zext_ln42_9_fu_3166_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln42_10_fu_3176_p1;
wire   [63:0] zext_ln42_11_fu_3868_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln42_12_fu_3878_p1;
wire   [63:0] zext_ln42_13_fu_4575_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln42_14_fu_4585_p1;
wire   [63:0] zext_ln42_15_fu_5277_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln42_16_fu_5287_p1;
wire  signed [15:0] mul_ln1118_1089_fu_304_p0;
wire  signed [15:0] mul_ln1118_1083_fu_305_p0;
wire  signed [15:0] mul_ln1118_1080_fu_306_p0;
wire  signed [15:0] mul_ln1118_1086_fu_307_p0;
wire  signed [15:0] mul_ln1118_fu_308_p0;
wire  signed [15:0] mul_ln1118_1095_fu_309_p0;
wire  signed [15:0] mul_ln1118_1085_fu_310_p0;
wire  signed [15:0] mul_ln1118_1084_fu_311_p0;
wire  signed [15:0] mul_ln1118_1082_fu_312_p0;
wire  signed [15:0] mul_ln1118_1092_fu_313_p0;
wire  signed [15:0] mul_ln1118_1088_fu_314_p0;
wire  signed [15:0] mul_ln1118_1093_fu_315_p0;
wire  signed [15:0] mul_ln1118_1079_fu_316_p0;
wire  signed [15:0] mul_ln1118_1091_fu_317_p0;
wire  signed [15:0] mul_ln1118_1087_fu_318_p0;
wire  signed [15:0] mul_ln1118_1094_fu_319_p0;
wire  signed [15:0] mul_ln1118_1081_fu_320_p0;
wire  signed [15:0] mul_ln1118_1090_fu_321_p0;
wire   [6:0] add_ln42_fu_983_p2;
wire   [6:0] add_ln38_fu_994_p2;
wire   [8:0] trunc_ln718_fu_1027_p1;
wire   [4:0] Range2_V_fu_1037_p4;
wire   [5:0] Range1_V_fu_1053_p4;
wire   [8:0] trunc_ln718_1079_fu_1088_p1;
wire   [4:0] Range2_V_0_1_fu_1098_p4;
wire   [5:0] Range1_V_0_1_fu_1114_p4;
wire   [7:0] add_ln42_1_fu_1136_p2;
wire   [7:0] add_ln42_2_fu_1147_p2;
wire   [6:0] add_ln38_1_fu_1158_p2;
wire   [0:0] tmp_8735_fu_1178_p3;
wire   [0:0] or_ln412_fu_1202_p2;
wire   [0:0] tmp_8736_fu_1186_p3;
wire   [0:0] and_ln412_fu_1207_p2;
wire   [15:0] trunc_ln7_fu_1168_p4;
wire   [15:0] zext_ln415_fu_1213_p1;
wire   [15:0] add_ln415_fu_1217_p2;
wire   [0:0] tmp_8738_fu_1223_p3;
wire   [0:0] tmp_8737_fu_1194_p3;
wire   [0:0] xor_ln416_fu_1231_p2;
wire   [0:0] and_ln416_fu_1237_p2;
wire   [0:0] tmp_8739_fu_1249_p3;
wire   [0:0] xor_ln780_fu_1257_p2;
wire   [0:0] and_ln780_fu_1263_p2;
wire   [0:0] select_ln778_fu_1243_p3;
wire   [0:0] xor_ln785_fu_1280_p2;
wire   [0:0] or_ln785_fu_1286_p2;
wire   [0:0] xor_ln785_2135_fu_1292_p2;
wire   [0:0] select_ln780_fu_1268_p3;
wire   [0:0] and_ln781_fu_1275_p2;
wire   [0:0] and_ln786_fu_1303_p2;
wire   [0:0] or_ln786_fu_1309_p2;
wire   [0:0] xor_ln786_fu_1315_p2;
wire   [0:0] and_ln785_fu_1297_p2;
wire   [0:0] and_ln786_2015_fu_1321_p2;
wire   [0:0] or_ln384_fu_1334_p2;
wire   [15:0] select_ln384_fu_1326_p3;
wire   [0:0] tmp_8741_fu_1358_p3;
wire   [0:0] or_ln412_1151_fu_1382_p2;
wire   [0:0] tmp_8742_fu_1366_p3;
wire   [0:0] and_ln412_1_fu_1387_p2;
wire   [15:0] trunc_ln708_1_fu_1348_p4;
wire   [15:0] zext_ln415_1151_fu_1393_p1;
wire   [15:0] add_ln415_1008_fu_1397_p2;
wire   [0:0] tmp_8744_fu_1403_p3;
wire   [0:0] tmp_8743_fu_1374_p3;
wire   [0:0] xor_ln416_1079_fu_1411_p2;
wire   [0:0] and_ln416_1_fu_1417_p2;
wire   [0:0] tmp_8745_fu_1429_p3;
wire   [0:0] xor_ln780_1007_fu_1437_p2;
wire   [0:0] and_ln780_1007_fu_1443_p2;
wire   [0:0] select_ln778_1_fu_1423_p3;
wire   [0:0] xor_ln785_2136_fu_1460_p2;
wire   [0:0] or_ln785_1078_fu_1466_p2;
wire   [0:0] xor_ln785_2137_fu_1472_p2;
wire   [0:0] select_ln780_1_fu_1448_p3;
wire   [0:0] and_ln781_1007_fu_1455_p2;
wire   [0:0] and_ln786_2016_fu_1483_p2;
wire   [0:0] or_ln786_1007_fu_1489_p2;
wire   [0:0] xor_ln786_1007_fu_1495_p2;
wire   [0:0] and_ln785_1_fu_1477_p2;
wire   [0:0] and_ln786_2017_fu_1501_p2;
wire   [0:0] or_ln384_1007_fu_1514_p2;
wire   [15:0] select_ln384_1920_fu_1506_p3;
wire   [8:0] trunc_ln718_1080_fu_1541_p1;
wire   [4:0] Range2_V_0_2_fu_1551_p4;
wire   [5:0] Range1_V_0_2_fu_1567_p4;
wire   [8:0] trunc_ln718_1081_fu_1602_p1;
wire   [4:0] Range2_V_0_3_fu_1612_p4;
wire   [5:0] Range1_V_0_3_fu_1628_p4;
wire   [7:0] add_ln42_3_fu_1650_p2;
wire   [7:0] add_ln42_4_fu_1660_p2;
wire   [0:0] tmp_8747_fu_1680_p3;
wire   [0:0] or_ln412_1152_fu_1704_p2;
wire   [0:0] tmp_8748_fu_1688_p3;
wire   [0:0] and_ln412_2_fu_1709_p2;
wire   [15:0] trunc_ln708_2_fu_1670_p4;
wire   [15:0] zext_ln415_1152_fu_1715_p1;
wire   [15:0] add_ln415_1009_fu_1719_p2;
wire   [0:0] tmp_8750_fu_1725_p3;
wire   [0:0] tmp_8749_fu_1696_p3;
wire   [0:0] xor_ln416_1080_fu_1733_p2;
wire   [0:0] and_ln416_2_fu_1739_p2;
wire   [0:0] tmp_8751_fu_1751_p3;
wire   [0:0] xor_ln780_1008_fu_1759_p2;
wire   [0:0] and_ln780_1008_fu_1765_p2;
wire   [0:0] select_ln778_2_fu_1745_p3;
wire   [0:0] xor_ln785_2138_fu_1782_p2;
wire   [0:0] or_ln785_1079_fu_1788_p2;
wire   [0:0] xor_ln785_2139_fu_1794_p2;
wire   [0:0] select_ln780_2_fu_1770_p3;
wire   [0:0] and_ln781_1008_fu_1777_p2;
wire   [0:0] and_ln786_2018_fu_1805_p2;
wire   [0:0] or_ln786_1008_fu_1811_p2;
wire   [0:0] xor_ln786_1008_fu_1817_p2;
wire   [0:0] and_ln785_2_fu_1799_p2;
wire   [0:0] and_ln786_2019_fu_1823_p2;
wire   [0:0] or_ln384_1008_fu_1836_p2;
wire   [15:0] select_ln384_1922_fu_1828_p3;
wire   [0:0] tmp_8753_fu_1860_p3;
wire   [0:0] or_ln412_1153_fu_1884_p2;
wire   [0:0] tmp_8754_fu_1868_p3;
wire   [0:0] and_ln412_3_fu_1889_p2;
wire   [15:0] trunc_ln708_3_fu_1850_p4;
wire   [15:0] zext_ln415_1153_fu_1895_p1;
wire   [15:0] add_ln415_1010_fu_1899_p2;
wire   [0:0] tmp_8756_fu_1905_p3;
wire   [0:0] tmp_8755_fu_1876_p3;
wire   [0:0] xor_ln416_1081_fu_1913_p2;
wire   [0:0] and_ln416_3_fu_1919_p2;
wire   [0:0] tmp_8757_fu_1931_p3;
wire   [0:0] xor_ln780_1009_fu_1939_p2;
wire   [0:0] and_ln780_1009_fu_1945_p2;
wire   [0:0] select_ln778_3_fu_1925_p3;
wire   [0:0] xor_ln785_2140_fu_1962_p2;
wire   [0:0] or_ln785_1080_fu_1968_p2;
wire   [0:0] xor_ln785_2141_fu_1974_p2;
wire   [0:0] select_ln780_3_fu_1950_p3;
wire   [0:0] and_ln781_1009_fu_1957_p2;
wire   [0:0] and_ln786_2020_fu_1985_p2;
wire   [0:0] or_ln786_1009_fu_1991_p2;
wire   [0:0] xor_ln786_1009_fu_1997_p2;
wire   [0:0] and_ln785_3_fu_1979_p2;
wire   [0:0] and_ln786_2021_fu_2003_p2;
wire   [0:0] or_ln384_1009_fu_2016_p2;
wire   [15:0] select_ln384_1924_fu_2008_p3;
wire   [8:0] trunc_ln718_1082_fu_2043_p1;
wire   [4:0] Range2_V_0_4_fu_2053_p4;
wire   [5:0] Range1_V_0_4_fu_2069_p4;
wire   [8:0] trunc_ln718_1083_fu_2104_p1;
wire   [4:0] Range2_V_0_5_fu_2114_p4;
wire   [5:0] Range1_V_0_5_fu_2130_p4;
wire   [7:0] add_ln42_5_fu_2152_p2;
wire   [7:0] add_ln42_6_fu_2162_p2;
wire   [0:0] tmp_8759_fu_2182_p3;
wire   [0:0] or_ln412_1154_fu_2206_p2;
wire   [0:0] tmp_8760_fu_2190_p3;
wire   [0:0] and_ln412_4_fu_2211_p2;
wire   [15:0] trunc_ln708_4_fu_2172_p4;
wire   [15:0] zext_ln415_1154_fu_2217_p1;
wire   [15:0] add_ln415_1011_fu_2221_p2;
wire   [0:0] tmp_8762_fu_2227_p3;
wire   [0:0] tmp_8761_fu_2198_p3;
wire   [0:0] xor_ln416_1082_fu_2235_p2;
wire   [0:0] and_ln416_4_fu_2241_p2;
wire   [0:0] tmp_8763_fu_2253_p3;
wire   [0:0] xor_ln780_1010_fu_2261_p2;
wire   [0:0] and_ln780_1010_fu_2267_p2;
wire   [0:0] select_ln778_4_fu_2247_p3;
wire   [0:0] xor_ln785_2142_fu_2284_p2;
wire   [0:0] or_ln785_1081_fu_2290_p2;
wire   [0:0] xor_ln785_2143_fu_2296_p2;
wire   [0:0] select_ln780_4_fu_2272_p3;
wire   [0:0] and_ln781_1010_fu_2279_p2;
wire   [0:0] and_ln786_2022_fu_2307_p2;
wire   [0:0] or_ln786_1010_fu_2313_p2;
wire   [0:0] xor_ln786_1010_fu_2319_p2;
wire   [0:0] and_ln785_4_fu_2301_p2;
wire   [0:0] and_ln786_2023_fu_2325_p2;
wire   [0:0] or_ln384_1010_fu_2338_p2;
wire   [15:0] select_ln384_1926_fu_2330_p3;
wire   [0:0] tmp_8765_fu_2362_p3;
wire   [0:0] or_ln412_1155_fu_2386_p2;
wire   [0:0] tmp_8766_fu_2370_p3;
wire   [0:0] and_ln412_5_fu_2391_p2;
wire   [15:0] trunc_ln708_5_fu_2352_p4;
wire   [15:0] zext_ln415_1155_fu_2397_p1;
wire   [15:0] add_ln415_1012_fu_2401_p2;
wire   [0:0] tmp_8768_fu_2407_p3;
wire   [0:0] tmp_8767_fu_2378_p3;
wire   [0:0] xor_ln416_1083_fu_2415_p2;
wire   [0:0] and_ln416_5_fu_2421_p2;
wire   [0:0] tmp_8769_fu_2433_p3;
wire   [0:0] xor_ln780_1011_fu_2441_p2;
wire   [0:0] and_ln780_1011_fu_2447_p2;
wire   [0:0] select_ln778_5_fu_2427_p3;
wire   [0:0] xor_ln785_2144_fu_2464_p2;
wire   [0:0] or_ln785_1082_fu_2470_p2;
wire   [0:0] xor_ln785_2145_fu_2476_p2;
wire   [0:0] select_ln780_5_fu_2452_p3;
wire   [0:0] and_ln781_1011_fu_2459_p2;
wire   [0:0] and_ln786_2024_fu_2487_p2;
wire   [0:0] or_ln786_1011_fu_2493_p2;
wire   [0:0] xor_ln786_1011_fu_2499_p2;
wire   [0:0] and_ln785_5_fu_2481_p2;
wire   [0:0] and_ln786_2025_fu_2505_p2;
wire   [0:0] or_ln384_1011_fu_2518_p2;
wire   [15:0] select_ln384_1928_fu_2510_p3;
wire   [8:0] trunc_ln718_1084_fu_2550_p1;
wire   [4:0] Range2_V_1_fu_2560_p4;
wire   [5:0] Range1_V_1_fu_2576_p4;
wire   [8:0] trunc_ln718_1085_fu_2611_p1;
wire   [4:0] Range2_V_1_1_fu_2621_p4;
wire   [5:0] Range1_V_1_1_fu_2637_p4;
wire   [7:0] add_ln42_7_fu_2659_p2;
wire   [7:0] add_ln42_8_fu_2669_p2;
wire   [0:0] tmp_8771_fu_2689_p3;
wire   [0:0] or_ln412_1156_fu_2713_p2;
wire   [0:0] tmp_8772_fu_2697_p3;
wire   [0:0] and_ln412_6_fu_2718_p2;
wire   [15:0] trunc_ln708_6_fu_2679_p4;
wire   [15:0] zext_ln415_1156_fu_2724_p1;
wire   [15:0] add_ln415_1013_fu_2728_p2;
wire   [0:0] tmp_8774_fu_2734_p3;
wire   [0:0] tmp_8773_fu_2705_p3;
wire   [0:0] xor_ln416_1084_fu_2742_p2;
wire   [0:0] and_ln416_6_fu_2748_p2;
wire   [0:0] tmp_8775_fu_2760_p3;
wire   [0:0] xor_ln780_1012_fu_2768_p2;
wire   [0:0] and_ln780_1012_fu_2774_p2;
wire   [0:0] select_ln778_6_fu_2754_p3;
wire   [0:0] xor_ln785_2146_fu_2791_p2;
wire   [0:0] or_ln785_1083_fu_2797_p2;
wire   [0:0] xor_ln785_2147_fu_2803_p2;
wire   [0:0] select_ln780_6_fu_2779_p3;
wire   [0:0] and_ln781_1012_fu_2786_p2;
wire   [0:0] and_ln786_2026_fu_2814_p2;
wire   [0:0] or_ln786_1012_fu_2820_p2;
wire   [0:0] xor_ln786_1012_fu_2826_p2;
wire   [0:0] and_ln785_6_fu_2808_p2;
wire   [0:0] and_ln786_2027_fu_2832_p2;
wire   [0:0] or_ln384_1012_fu_2845_p2;
wire   [15:0] select_ln384_1930_fu_2837_p3;
wire   [0:0] tmp_8777_fu_2869_p3;
wire   [0:0] or_ln412_1157_fu_2893_p2;
wire   [0:0] tmp_8778_fu_2877_p3;
wire   [0:0] and_ln412_7_fu_2898_p2;
wire   [15:0] trunc_ln708_7_fu_2859_p4;
wire   [15:0] zext_ln415_1157_fu_2904_p1;
wire   [15:0] add_ln415_1014_fu_2908_p2;
wire   [0:0] tmp_8780_fu_2914_p3;
wire   [0:0] tmp_8779_fu_2885_p3;
wire   [0:0] xor_ln416_1085_fu_2922_p2;
wire   [0:0] and_ln416_7_fu_2928_p2;
wire   [0:0] tmp_8781_fu_2940_p3;
wire   [0:0] xor_ln780_1013_fu_2948_p2;
wire   [0:0] and_ln780_1013_fu_2954_p2;
wire   [0:0] select_ln778_7_fu_2934_p3;
wire   [0:0] xor_ln785_2148_fu_2971_p2;
wire   [0:0] or_ln785_1084_fu_2977_p2;
wire   [0:0] xor_ln785_2149_fu_2983_p2;
wire   [0:0] select_ln780_7_fu_2959_p3;
wire   [0:0] and_ln781_1013_fu_2966_p2;
wire   [0:0] and_ln786_2028_fu_2994_p2;
wire   [0:0] or_ln786_1013_fu_3000_p2;
wire   [0:0] xor_ln786_1013_fu_3006_p2;
wire   [0:0] and_ln785_7_fu_2988_p2;
wire   [0:0] and_ln786_2029_fu_3012_p2;
wire   [0:0] or_ln384_1013_fu_3025_p2;
wire   [15:0] select_ln384_1932_fu_3017_p3;
wire   [8:0] trunc_ln718_1086_fu_3052_p1;
wire   [4:0] Range2_V_1_2_fu_3062_p4;
wire   [5:0] Range1_V_1_2_fu_3078_p4;
wire   [8:0] trunc_ln718_1087_fu_3113_p1;
wire   [4:0] Range2_V_1_3_fu_3123_p4;
wire   [5:0] Range1_V_1_3_fu_3139_p4;
wire   [7:0] add_ln42_9_fu_3161_p2;
wire   [7:0] add_ln42_10_fu_3171_p2;
wire  signed [15:0] select_ln384_1931_fu_2851_p3;
wire  signed [16:0] sext_ln703_815_fu_3184_p1;
wire  signed [16:0] sext_ln703_fu_3181_p1;
wire   [16:0] add_ln1192_fu_3188_p2;
wire   [15:0] add_ln703_fu_3202_p2;
wire   [0:0] tmp_8842_fu_3194_p3;
wire   [0:0] tmp_8843_fu_3207_p3;
wire   [0:0] xor_ln785_2170_fu_3215_p2;
wire   [0:0] xor_ln786_1024_fu_3227_p2;
wire   [0:0] xor_ln340_fu_3239_p2;
wire   [0:0] and_ln785_18_fu_3221_p2;
wire   [0:0] xor_ln340_48_fu_3245_p2;
wire   [0:0] and_ln786_2050_fu_3233_p2;
wire   [0:0] or_ln340_fu_3251_p2;
wire   [15:0] select_ln340_fu_3257_p3;
wire   [15:0] select_ln388_fu_3265_p3;
wire  signed [15:0] select_ln384_1933_fu_3031_p3;
wire  signed [16:0] sext_ln703_817_fu_3284_p1;
wire  signed [16:0] sext_ln703_816_fu_3281_p1;
wire   [16:0] add_ln1192_1_fu_3288_p2;
wire   [15:0] add_ln703_1_fu_3302_p2;
wire   [0:0] tmp_8844_fu_3294_p3;
wire   [0:0] tmp_8845_fu_3307_p3;
wire   [0:0] xor_ln785_2171_fu_3315_p2;
wire   [0:0] xor_ln786_1025_fu_3327_p2;
wire   [0:0] xor_ln340_49_fu_3339_p2;
wire   [0:0] and_ln785_19_fu_3321_p2;
wire   [0:0] xor_ln340_50_fu_3345_p2;
wire   [0:0] and_ln786_2051_fu_3333_p2;
wire   [0:0] or_ln340_1_fu_3351_p2;
wire   [15:0] select_ln340_119_fu_3357_p3;
wire   [15:0] select_ln388_1_fu_3365_p3;
wire   [0:0] tmp_8783_fu_3391_p3;
wire   [0:0] or_ln412_1158_fu_3415_p2;
wire   [0:0] tmp_8784_fu_3399_p3;
wire   [0:0] and_ln412_8_fu_3420_p2;
wire   [15:0] trunc_ln708_8_fu_3381_p4;
wire   [15:0] zext_ln415_1158_fu_3426_p1;
wire   [15:0] add_ln415_1015_fu_3430_p2;
wire   [0:0] tmp_8786_fu_3436_p3;
wire   [0:0] tmp_8785_fu_3407_p3;
wire   [0:0] xor_ln416_1086_fu_3444_p2;
wire   [0:0] and_ln416_8_fu_3450_p2;
wire   [0:0] tmp_8787_fu_3462_p3;
wire   [0:0] xor_ln780_1014_fu_3470_p2;
wire   [0:0] and_ln780_1014_fu_3476_p2;
wire   [0:0] select_ln778_8_fu_3456_p3;
wire   [0:0] xor_ln785_2150_fu_3493_p2;
wire   [0:0] or_ln785_1085_fu_3499_p2;
wire   [0:0] xor_ln785_2151_fu_3505_p2;
wire   [0:0] select_ln780_8_fu_3481_p3;
wire   [0:0] and_ln781_1014_fu_3488_p2;
wire   [0:0] and_ln786_2030_fu_3516_p2;
wire   [0:0] or_ln786_1014_fu_3522_p2;
wire   [0:0] xor_ln786_1014_fu_3528_p2;
wire   [0:0] and_ln785_8_fu_3510_p2;
wire   [0:0] and_ln786_2031_fu_3534_p2;
wire   [0:0] or_ln384_1014_fu_3547_p2;
wire   [15:0] select_ln384_1934_fu_3539_p3;
wire   [0:0] tmp_8789_fu_3571_p3;
wire   [0:0] or_ln412_1159_fu_3595_p2;
wire   [0:0] tmp_8790_fu_3579_p3;
wire   [0:0] and_ln412_9_fu_3600_p2;
wire   [15:0] trunc_ln708_9_fu_3561_p4;
wire   [15:0] zext_ln415_1159_fu_3606_p1;
wire   [15:0] add_ln415_1016_fu_3610_p2;
wire   [0:0] tmp_8792_fu_3616_p3;
wire   [0:0] tmp_8791_fu_3587_p3;
wire   [0:0] xor_ln416_1087_fu_3624_p2;
wire   [0:0] and_ln416_9_fu_3630_p2;
wire   [0:0] tmp_8793_fu_3642_p3;
wire   [0:0] xor_ln780_1015_fu_3650_p2;
wire   [0:0] and_ln780_1015_fu_3656_p2;
wire   [0:0] select_ln778_9_fu_3636_p3;
wire   [0:0] xor_ln785_2152_fu_3673_p2;
wire   [0:0] or_ln785_1086_fu_3679_p2;
wire   [0:0] xor_ln785_2153_fu_3685_p2;
wire   [0:0] select_ln780_9_fu_3661_p3;
wire   [0:0] and_ln781_1015_fu_3668_p2;
wire   [0:0] and_ln786_2032_fu_3696_p2;
wire   [0:0] or_ln786_1015_fu_3702_p2;
wire   [0:0] xor_ln786_1015_fu_3708_p2;
wire   [0:0] and_ln785_9_fu_3690_p2;
wire   [0:0] and_ln786_2033_fu_3714_p2;
wire   [0:0] or_ln384_1015_fu_3727_p2;
wire   [15:0] select_ln384_1936_fu_3719_p3;
wire   [8:0] trunc_ln718_1088_fu_3754_p1;
wire   [4:0] Range2_V_1_4_fu_3764_p4;
wire   [5:0] Range1_V_1_4_fu_3780_p4;
wire   [8:0] trunc_ln718_1089_fu_3815_p1;
wire   [4:0] Range2_V_1_5_fu_3825_p4;
wire   [5:0] Range1_V_1_5_fu_3841_p4;
wire   [7:0] add_ln42_11_fu_3863_p2;
wire   [7:0] add_ln42_12_fu_3873_p2;
wire  signed [15:0] select_ln384_1935_fu_3553_p3;
wire  signed [16:0] sext_ln703_819_fu_3886_p1;
wire  signed [16:0] sext_ln703_818_fu_3883_p1;
wire   [16:0] add_ln1192_2_fu_3890_p2;
wire   [15:0] add_ln703_2_fu_3904_p2;
wire   [0:0] tmp_8846_fu_3896_p3;
wire   [0:0] tmp_8847_fu_3909_p3;
wire   [0:0] xor_ln785_2172_fu_3917_p2;
wire   [0:0] xor_ln786_1026_fu_3929_p2;
wire   [0:0] xor_ln340_51_fu_3941_p2;
wire   [0:0] and_ln785_20_fu_3923_p2;
wire   [0:0] xor_ln340_52_fu_3947_p2;
wire   [0:0] and_ln786_2052_fu_3935_p2;
wire   [0:0] or_ln340_2_fu_3953_p2;
wire   [15:0] select_ln340_120_fu_3959_p3;
wire   [15:0] select_ln388_2_fu_3967_p3;
wire  signed [15:0] select_ln384_1937_fu_3733_p3;
wire  signed [16:0] sext_ln703_821_fu_3986_p1;
wire  signed [16:0] sext_ln703_820_fu_3983_p1;
wire   [16:0] add_ln1192_3_fu_3990_p2;
wire   [15:0] add_ln703_3_fu_4004_p2;
wire   [0:0] tmp_8848_fu_3996_p3;
wire   [0:0] tmp_8849_fu_4009_p3;
wire   [0:0] xor_ln785_2173_fu_4017_p2;
wire   [0:0] xor_ln786_1027_fu_4029_p2;
wire   [0:0] xor_ln340_53_fu_4041_p2;
wire   [0:0] and_ln785_21_fu_4023_p2;
wire   [0:0] xor_ln340_54_fu_4047_p2;
wire   [0:0] and_ln786_2053_fu_4035_p2;
wire   [0:0] or_ln340_3_fu_4053_p2;
wire   [15:0] select_ln340_121_fu_4059_p3;
wire   [15:0] select_ln388_3_fu_4067_p3;
wire   [0:0] tmp_8795_fu_4093_p3;
wire   [0:0] or_ln412_1160_fu_4117_p2;
wire   [0:0] tmp_8796_fu_4101_p3;
wire   [0:0] and_ln412_10_fu_4122_p2;
wire   [15:0] trunc_ln708_s_fu_4083_p4;
wire   [15:0] zext_ln415_1160_fu_4128_p1;
wire   [15:0] add_ln415_1017_fu_4132_p2;
wire   [0:0] tmp_8798_fu_4138_p3;
wire   [0:0] tmp_8797_fu_4109_p3;
wire   [0:0] xor_ln416_1088_fu_4146_p2;
wire   [0:0] and_ln416_10_fu_4152_p2;
wire   [0:0] tmp_8799_fu_4164_p3;
wire   [0:0] xor_ln780_1016_fu_4172_p2;
wire   [0:0] and_ln780_1016_fu_4178_p2;
wire   [0:0] select_ln778_10_fu_4158_p3;
wire   [0:0] xor_ln785_2154_fu_4195_p2;
wire   [0:0] or_ln785_1087_fu_4201_p2;
wire   [0:0] xor_ln785_2155_fu_4207_p2;
wire   [0:0] select_ln780_10_fu_4183_p3;
wire   [0:0] and_ln781_1016_fu_4190_p2;
wire   [0:0] and_ln786_2034_fu_4218_p2;
wire   [0:0] or_ln786_1016_fu_4224_p2;
wire   [0:0] xor_ln786_1016_fu_4230_p2;
wire   [0:0] and_ln785_10_fu_4212_p2;
wire   [0:0] and_ln786_2035_fu_4236_p2;
wire   [0:0] or_ln384_1016_fu_4249_p2;
wire   [15:0] select_ln384_1938_fu_4241_p3;
wire   [0:0] tmp_8801_fu_4273_p3;
wire   [0:0] or_ln412_1161_fu_4297_p2;
wire   [0:0] tmp_8802_fu_4281_p3;
wire   [0:0] and_ln412_11_fu_4302_p2;
wire   [15:0] trunc_ln708_10_fu_4263_p4;
wire   [15:0] zext_ln415_1161_fu_4308_p1;
wire   [15:0] add_ln415_1018_fu_4312_p2;
wire   [0:0] tmp_8804_fu_4318_p3;
wire   [0:0] tmp_8803_fu_4289_p3;
wire   [0:0] xor_ln416_1089_fu_4326_p2;
wire   [0:0] and_ln416_11_fu_4332_p2;
wire   [0:0] tmp_8805_fu_4344_p3;
wire   [0:0] xor_ln780_1017_fu_4352_p2;
wire   [0:0] and_ln780_1017_fu_4358_p2;
wire   [0:0] select_ln778_11_fu_4338_p3;
wire   [0:0] xor_ln785_2156_fu_4375_p2;
wire   [0:0] or_ln785_1088_fu_4381_p2;
wire   [0:0] xor_ln785_2157_fu_4387_p2;
wire   [0:0] select_ln780_11_fu_4363_p3;
wire   [0:0] and_ln781_1017_fu_4370_p2;
wire   [0:0] and_ln786_2036_fu_4398_p2;
wire   [0:0] or_ln786_1017_fu_4404_p2;
wire   [0:0] xor_ln786_1017_fu_4410_p2;
wire   [0:0] and_ln785_11_fu_4392_p2;
wire   [0:0] and_ln786_2037_fu_4416_p2;
wire   [0:0] or_ln384_1017_fu_4429_p2;
wire   [15:0] select_ln384_1940_fu_4421_p3;
wire   [8:0] trunc_ln718_1090_fu_4461_p1;
wire   [4:0] Range2_V_2_fu_4471_p4;
wire   [5:0] Range1_V_2_fu_4487_p4;
wire   [8:0] trunc_ln718_1091_fu_4522_p1;
wire   [4:0] Range2_V_2_1_fu_4532_p4;
wire   [5:0] Range1_V_2_1_fu_4548_p4;
wire   [7:0] add_ln42_13_fu_4570_p2;
wire   [7:0] add_ln42_14_fu_4580_p2;
wire  signed [15:0] select_ln384_1939_fu_4255_p3;
wire  signed [16:0] sext_ln703_823_fu_4593_p1;
wire  signed [16:0] sext_ln703_822_fu_4590_p1;
wire   [16:0] add_ln1192_4_fu_4597_p2;
wire   [15:0] add_ln703_4_fu_4611_p2;
wire   [0:0] tmp_8850_fu_4603_p3;
wire   [0:0] tmp_8851_fu_4616_p3;
wire   [0:0] xor_ln785_2174_fu_4624_p2;
wire   [0:0] xor_ln786_1028_fu_4636_p2;
wire   [0:0] xor_ln340_55_fu_4648_p2;
wire   [0:0] and_ln785_22_fu_4630_p2;
wire   [0:0] xor_ln340_56_fu_4654_p2;
wire   [0:0] and_ln786_2054_fu_4642_p2;
wire   [0:0] or_ln340_4_fu_4660_p2;
wire   [15:0] select_ln340_122_fu_4666_p3;
wire   [15:0] select_ln388_4_fu_4674_p3;
wire  signed [15:0] select_ln384_1941_fu_4435_p3;
wire  signed [16:0] sext_ln703_825_fu_4693_p1;
wire  signed [16:0] sext_ln703_824_fu_4690_p1;
wire   [16:0] add_ln1192_5_fu_4697_p2;
wire   [15:0] add_ln703_5_fu_4711_p2;
wire   [0:0] tmp_8852_fu_4703_p3;
wire   [0:0] tmp_8853_fu_4716_p3;
wire   [0:0] xor_ln785_2175_fu_4724_p2;
wire   [0:0] xor_ln786_1029_fu_4736_p2;
wire   [0:0] xor_ln340_57_fu_4748_p2;
wire   [0:0] and_ln785_23_fu_4730_p2;
wire   [0:0] xor_ln340_58_fu_4754_p2;
wire   [0:0] and_ln786_2055_fu_4742_p2;
wire   [0:0] or_ln340_5_fu_4760_p2;
wire   [15:0] select_ln340_123_fu_4766_p3;
wire   [15:0] select_ln388_5_fu_4774_p3;
wire   [0:0] tmp_8807_fu_4800_p3;
wire   [0:0] or_ln412_1162_fu_4824_p2;
wire   [0:0] tmp_8808_fu_4808_p3;
wire   [0:0] and_ln412_12_fu_4829_p2;
wire   [15:0] trunc_ln708_11_fu_4790_p4;
wire   [15:0] zext_ln415_1162_fu_4835_p1;
wire   [15:0] add_ln415_1019_fu_4839_p2;
wire   [0:0] tmp_8810_fu_4845_p3;
wire   [0:0] tmp_8809_fu_4816_p3;
wire   [0:0] xor_ln416_1090_fu_4853_p2;
wire   [0:0] and_ln416_12_fu_4859_p2;
wire   [0:0] tmp_8811_fu_4871_p3;
wire   [0:0] xor_ln780_1018_fu_4879_p2;
wire   [0:0] and_ln780_1018_fu_4885_p2;
wire   [0:0] select_ln778_12_fu_4865_p3;
wire   [0:0] xor_ln785_2158_fu_4902_p2;
wire   [0:0] or_ln785_1089_fu_4908_p2;
wire   [0:0] xor_ln785_2159_fu_4914_p2;
wire   [0:0] select_ln780_12_fu_4890_p3;
wire   [0:0] and_ln781_1018_fu_4897_p2;
wire   [0:0] and_ln786_2038_fu_4925_p2;
wire   [0:0] or_ln786_1018_fu_4931_p2;
wire   [0:0] xor_ln786_1018_fu_4937_p2;
wire   [0:0] and_ln785_12_fu_4919_p2;
wire   [0:0] and_ln786_2039_fu_4943_p2;
wire   [0:0] or_ln384_1018_fu_4956_p2;
wire   [15:0] select_ln384_1942_fu_4948_p3;
wire   [0:0] tmp_8813_fu_4980_p3;
wire   [0:0] or_ln412_1163_fu_5004_p2;
wire   [0:0] tmp_8814_fu_4988_p3;
wire   [0:0] and_ln412_13_fu_5009_p2;
wire   [15:0] trunc_ln708_12_fu_4970_p4;
wire   [15:0] zext_ln415_1163_fu_5015_p1;
wire   [15:0] add_ln415_1020_fu_5019_p2;
wire   [0:0] tmp_8816_fu_5025_p3;
wire   [0:0] tmp_8815_fu_4996_p3;
wire   [0:0] xor_ln416_1091_fu_5033_p2;
wire   [0:0] and_ln416_13_fu_5039_p2;
wire   [0:0] tmp_8817_fu_5051_p3;
wire   [0:0] xor_ln780_1019_fu_5059_p2;
wire   [0:0] and_ln780_1019_fu_5065_p2;
wire   [0:0] select_ln778_13_fu_5045_p3;
wire   [0:0] xor_ln785_2160_fu_5082_p2;
wire   [0:0] or_ln785_1090_fu_5088_p2;
wire   [0:0] xor_ln785_2161_fu_5094_p2;
wire   [0:0] select_ln780_13_fu_5070_p3;
wire   [0:0] and_ln781_1019_fu_5077_p2;
wire   [0:0] and_ln786_2040_fu_5105_p2;
wire   [0:0] or_ln786_1019_fu_5111_p2;
wire   [0:0] xor_ln786_1019_fu_5117_p2;
wire   [0:0] and_ln785_13_fu_5099_p2;
wire   [0:0] and_ln786_2041_fu_5123_p2;
wire   [0:0] or_ln384_1019_fu_5136_p2;
wire   [15:0] select_ln384_1944_fu_5128_p3;
wire   [8:0] trunc_ln718_1092_fu_5163_p1;
wire   [4:0] Range2_V_2_2_fu_5173_p4;
wire   [5:0] Range1_V_2_2_fu_5189_p4;
wire   [8:0] trunc_ln718_1093_fu_5224_p1;
wire   [4:0] Range2_V_2_3_fu_5234_p4;
wire   [5:0] Range1_V_2_3_fu_5250_p4;
wire   [7:0] add_ln42_15_fu_5272_p2;
wire   [7:0] add_ln42_16_fu_5282_p2;
wire  signed [15:0] select_ln384_1943_fu_4962_p3;
wire  signed [16:0] sext_ln703_827_fu_5295_p1;
wire  signed [16:0] sext_ln703_826_fu_5292_p1;
wire   [16:0] add_ln1192_6_fu_5299_p2;
wire   [15:0] add_ln703_6_fu_5313_p2;
wire   [0:0] tmp_8854_fu_5305_p3;
wire   [0:0] tmp_8855_fu_5318_p3;
wire   [0:0] xor_ln785_2176_fu_5326_p2;
wire   [0:0] xor_ln786_1030_fu_5338_p2;
wire   [0:0] xor_ln340_59_fu_5350_p2;
wire   [0:0] and_ln785_24_fu_5332_p2;
wire   [0:0] xor_ln340_60_fu_5356_p2;
wire   [0:0] and_ln786_2056_fu_5344_p2;
wire   [0:0] or_ln340_6_fu_5362_p2;
wire   [15:0] select_ln340_124_fu_5368_p3;
wire   [15:0] select_ln388_6_fu_5376_p3;
wire  signed [15:0] select_ln384_1945_fu_5142_p3;
wire  signed [16:0] sext_ln703_829_fu_5395_p1;
wire  signed [16:0] sext_ln703_828_fu_5392_p1;
wire   [16:0] add_ln1192_7_fu_5399_p2;
wire   [15:0] add_ln703_7_fu_5413_p2;
wire   [0:0] tmp_8856_fu_5405_p3;
wire   [0:0] tmp_8857_fu_5418_p3;
wire   [0:0] xor_ln785_2177_fu_5426_p2;
wire   [0:0] xor_ln786_1031_fu_5438_p2;
wire   [0:0] xor_ln340_61_fu_5450_p2;
wire   [0:0] and_ln785_25_fu_5432_p2;
wire   [0:0] xor_ln340_62_fu_5456_p2;
wire   [0:0] and_ln786_2057_fu_5444_p2;
wire   [0:0] or_ln340_7_fu_5462_p2;
wire   [15:0] select_ln340_125_fu_5468_p3;
wire   [15:0] select_ln388_7_fu_5476_p3;
wire   [0:0] tmp_8819_fu_5502_p3;
wire   [0:0] or_ln412_1164_fu_5526_p2;
wire   [0:0] tmp_8820_fu_5510_p3;
wire   [0:0] and_ln412_14_fu_5531_p2;
wire   [15:0] trunc_ln708_13_fu_5492_p4;
wire   [15:0] zext_ln415_1164_fu_5537_p1;
wire   [15:0] add_ln415_1021_fu_5541_p2;
wire   [0:0] tmp_8822_fu_5547_p3;
wire   [0:0] tmp_8821_fu_5518_p3;
wire   [0:0] xor_ln416_1092_fu_5555_p2;
wire   [0:0] and_ln416_14_fu_5561_p2;
wire   [0:0] tmp_8823_fu_5573_p3;
wire   [0:0] xor_ln780_1020_fu_5581_p2;
wire   [0:0] and_ln780_1020_fu_5587_p2;
wire   [0:0] select_ln778_14_fu_5567_p3;
wire   [0:0] xor_ln785_2162_fu_5604_p2;
wire   [0:0] or_ln785_1091_fu_5610_p2;
wire   [0:0] xor_ln785_2163_fu_5616_p2;
wire   [0:0] select_ln780_14_fu_5592_p3;
wire   [0:0] and_ln781_1020_fu_5599_p2;
wire   [0:0] and_ln786_2042_fu_5627_p2;
wire   [0:0] or_ln786_1020_fu_5633_p2;
wire   [0:0] xor_ln786_1020_fu_5639_p2;
wire   [0:0] and_ln785_14_fu_5621_p2;
wire   [0:0] and_ln786_2043_fu_5645_p2;
wire   [0:0] or_ln384_1020_fu_5658_p2;
wire   [15:0] select_ln384_1946_fu_5650_p3;
wire   [0:0] tmp_8825_fu_5682_p3;
wire   [0:0] or_ln412_1165_fu_5706_p2;
wire   [0:0] tmp_8826_fu_5690_p3;
wire   [0:0] and_ln412_15_fu_5711_p2;
wire   [15:0] trunc_ln708_14_fu_5672_p4;
wire   [15:0] zext_ln415_1165_fu_5717_p1;
wire   [15:0] add_ln415_1022_fu_5721_p2;
wire   [0:0] tmp_8828_fu_5727_p3;
wire   [0:0] tmp_8827_fu_5698_p3;
wire   [0:0] xor_ln416_1093_fu_5735_p2;
wire   [0:0] and_ln416_15_fu_5741_p2;
wire   [0:0] tmp_8829_fu_5753_p3;
wire   [0:0] xor_ln780_1021_fu_5761_p2;
wire   [0:0] and_ln780_1021_fu_5767_p2;
wire   [0:0] select_ln778_15_fu_5747_p3;
wire   [0:0] xor_ln785_2164_fu_5784_p2;
wire   [0:0] or_ln785_1092_fu_5790_p2;
wire   [0:0] xor_ln785_2165_fu_5796_p2;
wire   [0:0] select_ln780_15_fu_5772_p3;
wire   [0:0] and_ln781_1021_fu_5779_p2;
wire   [0:0] and_ln786_2044_fu_5807_p2;
wire   [0:0] or_ln786_1021_fu_5813_p2;
wire   [0:0] xor_ln786_1021_fu_5819_p2;
wire   [0:0] and_ln785_15_fu_5801_p2;
wire   [0:0] and_ln786_2045_fu_5825_p2;
wire   [0:0] or_ln384_1021_fu_5838_p2;
wire   [15:0] select_ln384_1948_fu_5830_p3;
wire   [8:0] trunc_ln718_1094_fu_5865_p1;
wire   [4:0] Range2_V_2_4_fu_5875_p4;
wire   [5:0] Range1_V_2_4_fu_5891_p4;
wire   [8:0] trunc_ln718_1095_fu_5926_p1;
wire   [4:0] Range2_V_2_5_fu_5936_p4;
wire   [5:0] Range1_V_2_5_fu_5952_p4;
wire  signed [15:0] select_ln384_1947_fu_5664_p3;
wire  signed [16:0] sext_ln703_831_fu_5977_p1;
wire  signed [16:0] sext_ln703_830_fu_5974_p1;
wire   [16:0] add_ln1192_8_fu_5981_p2;
wire   [15:0] add_ln703_8_fu_5995_p2;
wire   [0:0] tmp_8858_fu_5987_p3;
wire   [0:0] tmp_8859_fu_6000_p3;
wire   [0:0] xor_ln785_2178_fu_6008_p2;
wire   [0:0] xor_ln786_1032_fu_6020_p2;
wire   [0:0] xor_ln340_63_fu_6032_p2;
wire   [0:0] and_ln785_26_fu_6014_p2;
wire   [0:0] xor_ln340_64_fu_6038_p2;
wire   [0:0] and_ln786_2058_fu_6026_p2;
wire   [0:0] or_ln340_8_fu_6044_p2;
wire   [15:0] select_ln340_126_fu_6050_p3;
wire   [15:0] select_ln388_8_fu_6058_p3;
wire  signed [15:0] select_ln384_1949_fu_5844_p3;
wire  signed [16:0] sext_ln703_833_fu_6077_p1;
wire  signed [16:0] sext_ln703_832_fu_6074_p1;
wire   [16:0] add_ln1192_9_fu_6081_p2;
wire   [15:0] add_ln703_9_fu_6095_p2;
wire   [0:0] tmp_8860_fu_6087_p3;
wire   [0:0] tmp_8861_fu_6100_p3;
wire   [0:0] xor_ln785_2179_fu_6108_p2;
wire   [0:0] xor_ln786_1033_fu_6120_p2;
wire   [0:0] xor_ln340_65_fu_6132_p2;
wire   [0:0] and_ln785_27_fu_6114_p2;
wire   [0:0] xor_ln340_66_fu_6138_p2;
wire   [0:0] and_ln786_2059_fu_6126_p2;
wire   [0:0] or_ln340_9_fu_6144_p2;
wire   [15:0] select_ln340_127_fu_6150_p3;
wire   [15:0] select_ln388_9_fu_6158_p3;
wire   [0:0] tmp_8831_fu_6184_p3;
wire   [0:0] or_ln412_1166_fu_6208_p2;
wire   [0:0] tmp_8832_fu_6192_p3;
wire   [0:0] and_ln412_16_fu_6213_p2;
wire   [15:0] trunc_ln708_15_fu_6174_p4;
wire   [15:0] zext_ln415_1166_fu_6219_p1;
wire   [15:0] add_ln415_1023_fu_6223_p2;
wire   [0:0] tmp_8834_fu_6229_p3;
wire   [0:0] tmp_8833_fu_6200_p3;
wire   [0:0] xor_ln416_1094_fu_6237_p2;
wire   [0:0] and_ln416_16_fu_6243_p2;
wire   [0:0] tmp_8835_fu_6255_p3;
wire   [0:0] xor_ln780_1022_fu_6263_p2;
wire   [0:0] and_ln780_1022_fu_6269_p2;
wire   [0:0] select_ln778_16_fu_6249_p3;
wire   [0:0] xor_ln785_2166_fu_6286_p2;
wire   [0:0] or_ln785_1093_fu_6292_p2;
wire   [0:0] xor_ln785_2167_fu_6298_p2;
wire   [0:0] select_ln780_16_fu_6274_p3;
wire   [0:0] and_ln781_1022_fu_6281_p2;
wire   [0:0] and_ln786_2046_fu_6309_p2;
wire   [0:0] or_ln786_1022_fu_6315_p2;
wire   [0:0] xor_ln786_1022_fu_6321_p2;
wire   [0:0] and_ln785_16_fu_6303_p2;
wire   [0:0] and_ln786_2047_fu_6327_p2;
wire   [0:0] or_ln384_1022_fu_6340_p2;
wire   [15:0] select_ln384_1950_fu_6332_p3;
wire   [0:0] tmp_8837_fu_6364_p3;
wire   [0:0] or_ln412_1167_fu_6388_p2;
wire   [0:0] tmp_8838_fu_6372_p3;
wire   [0:0] and_ln412_17_fu_6393_p2;
wire   [15:0] trunc_ln708_16_fu_6354_p4;
wire   [15:0] zext_ln415_1167_fu_6399_p1;
wire   [15:0] add_ln415_1024_fu_6403_p2;
wire   [0:0] tmp_8840_fu_6409_p3;
wire   [0:0] tmp_8839_fu_6380_p3;
wire   [0:0] xor_ln416_1095_fu_6417_p2;
wire   [0:0] and_ln416_17_fu_6423_p2;
wire   [0:0] tmp_8841_fu_6435_p3;
wire   [0:0] xor_ln780_1023_fu_6443_p2;
wire   [0:0] and_ln780_1023_fu_6449_p2;
wire   [0:0] select_ln778_17_fu_6429_p3;
wire   [0:0] xor_ln785_2168_fu_6466_p2;
wire   [0:0] or_ln785_1094_fu_6472_p2;
wire   [0:0] xor_ln785_2169_fu_6478_p2;
wire   [0:0] select_ln780_17_fu_6454_p3;
wire   [0:0] and_ln781_1023_fu_6461_p2;
wire   [0:0] and_ln786_2048_fu_6489_p2;
wire   [0:0] or_ln786_1023_fu_6495_p2;
wire   [0:0] xor_ln786_1023_fu_6501_p2;
wire   [0:0] and_ln785_17_fu_6483_p2;
wire   [0:0] and_ln786_2049_fu_6507_p2;
wire   [0:0] or_ln384_1023_fu_6520_p2;
wire   [15:0] select_ln384_1952_fu_6512_p3;
wire  signed [15:0] select_ln384_1951_fu_6346_p3;
wire  signed [16:0] sext_ln703_835_fu_6537_p1;
wire  signed [16:0] sext_ln703_834_fu_6534_p1;
wire   [16:0] add_ln1192_10_fu_6541_p2;
wire   [15:0] add_ln703_10_fu_6555_p2;
wire   [0:0] tmp_8862_fu_6547_p3;
wire   [0:0] tmp_8863_fu_6560_p3;
wire   [0:0] xor_ln785_2180_fu_6568_p2;
wire   [0:0] xor_ln786_1034_fu_6580_p2;
wire   [0:0] xor_ln340_67_fu_6592_p2;
wire   [0:0] and_ln785_28_fu_6574_p2;
wire   [0:0] xor_ln340_68_fu_6598_p2;
wire   [0:0] and_ln786_2060_fu_6586_p2;
wire   [0:0] or_ln340_10_fu_6604_p2;
wire   [15:0] select_ln340_128_fu_6610_p3;
wire   [15:0] select_ln388_10_fu_6618_p3;
wire  signed [15:0] select_ln384_1953_fu_6526_p3;
wire  signed [16:0] sext_ln703_837_fu_6637_p1;
wire  signed [16:0] sext_ln703_836_fu_6634_p1;
wire   [16:0] add_ln1192_11_fu_6641_p2;
wire   [15:0] add_ln703_11_fu_6655_p2;
wire   [0:0] tmp_8864_fu_6647_p3;
wire   [0:0] tmp_8865_fu_6660_p3;
wire   [0:0] xor_ln785_2181_fu_6668_p2;
wire   [0:0] xor_ln786_1035_fu_6680_p2;
wire   [0:0] xor_ln340_69_fu_6692_p2;
wire   [0:0] and_ln785_29_fu_6674_p2;
wire   [0:0] xor_ln340_70_fu_6698_p2;
wire   [0:0] and_ln786_2061_fu_6686_p2;
wire   [0:0] or_ln340_11_fu_6704_p2;
wire   [15:0] select_ln340_129_fu_6710_p3;
wire   [15:0] select_ln388_11_fu_6718_p3;
wire   [15:0] select_ln340_140_fu_6626_p3;
wire   [15:0] select_ln340_141_fu_6726_p3;
reg   [8:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1097(
    .din0(mul_ln1118_1089_fu_304_p0),
    .din1(weights_q0),
    .dout(mul_ln1118_1089_fu_304_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1098(
    .din0(mul_ln1118_1083_fu_305_p0),
    .din1(weights_q0),
    .dout(mul_ln1118_1083_fu_305_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1099(
    .din0(mul_ln1118_1080_fu_306_p0),
    .din1(weights_q1),
    .dout(mul_ln1118_1080_fu_306_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1100(
    .din0(mul_ln1118_1086_fu_307_p0),
    .din1(weights_q1),
    .dout(mul_ln1118_1086_fu_307_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1101(
    .din0(mul_ln1118_fu_308_p0),
    .din1(weights_q1),
    .dout(mul_ln1118_fu_308_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1102(
    .din0(mul_ln1118_1095_fu_309_p0),
    .din1(weights_q0),
    .dout(mul_ln1118_1095_fu_309_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1103(
    .din0(mul_ln1118_1085_fu_310_p0),
    .din1(weights_q0),
    .dout(mul_ln1118_1085_fu_310_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1104(
    .din0(mul_ln1118_1084_fu_311_p0),
    .din1(weights_q1),
    .dout(mul_ln1118_1084_fu_311_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1105(
    .din0(mul_ln1118_1082_fu_312_p0),
    .din1(weights_q1),
    .dout(mul_ln1118_1082_fu_312_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1106(
    .din0(mul_ln1118_1092_fu_313_p0),
    .din1(weights_q1),
    .dout(mul_ln1118_1092_fu_313_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1107(
    .din0(mul_ln1118_1088_fu_314_p0),
    .din1(weights_q1),
    .dout(mul_ln1118_1088_fu_314_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1108(
    .din0(mul_ln1118_1093_fu_315_p0),
    .din1(weights_q0),
    .dout(mul_ln1118_1093_fu_315_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1109(
    .din0(mul_ln1118_1079_fu_316_p0),
    .din1(weights_q0),
    .dout(mul_ln1118_1079_fu_316_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1110(
    .din0(mul_ln1118_1091_fu_317_p0),
    .din1(weights_q0),
    .dout(mul_ln1118_1091_fu_317_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1111(
    .din0(mul_ln1118_1087_fu_318_p0),
    .din1(weights_q0),
    .dout(mul_ln1118_1087_fu_318_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1112(
    .din0(mul_ln1118_1094_fu_319_p0),
    .din1(weights_q1),
    .dout(mul_ln1118_1094_fu_319_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1113(
    .din0(mul_ln1118_1081_fu_320_p0),
    .din1(weights_q0),
    .dout(mul_ln1118_1081_fu_320_p2)
);

myproject_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U1114(
    .din0(mul_ln1118_1090_fu_321_p0),
    .din1(weights_q1),
    .dout(mul_ln1118_1090_fu_321_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            reg_436 <= mul_ln1118_1094_fu_319_p2;
        end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            reg_436 <= mul_ln1118_1092_fu_313_p2;
        end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            reg_436 <= mul_ln1118_1090_fu_321_p2;
        end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            reg_436 <= mul_ln1118_1088_fu_314_p2;
        end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            reg_436 <= mul_ln1118_1086_fu_307_p2;
        end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            reg_436 <= mul_ln1118_1084_fu_311_p2;
        end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            reg_436 <= mul_ln1118_1082_fu_312_p2;
        end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            reg_436 <= mul_ln1118_1080_fu_306_p2;
        end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            reg_436 <= mul_ln1118_fu_308_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            reg_440 <= mul_ln1118_1095_fu_309_p2;
        end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            reg_440 <= mul_ln1118_1093_fu_315_p2;
        end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            reg_440 <= mul_ln1118_1091_fu_317_p2;
        end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            reg_440 <= mul_ln1118_1089_fu_304_p2;
        end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            reg_440 <= mul_ln1118_1087_fu_318_p2;
        end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            reg_440 <= mul_ln1118_1085_fu_310_p2;
        end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            reg_440 <= mul_ln1118_1083_fu_305_p2;
        end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            reg_440 <= mul_ln1118_1081_fu_320_p2;
        end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            reg_440 <= mul_ln1118_1079_fu_316_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        data_load_144_reg_6888 <= data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        data_load_145_reg_6976 <= data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_offset_read_reg_6771 <= data_offset;
        icmp_ln718_16_reg_7469 <= icmp_ln718_16_fu_5869_p2;
        icmp_ln718_17_reg_7497 <= icmp_ln718_17_fu_5930_p2;
        icmp_ln768_16_reg_7486 <= icmp_ln768_16_fu_5907_p2;
        icmp_ln768_17_reg_7514 <= icmp_ln768_17_fu_5968_p2;
        icmp_ln874_32_reg_7474 <= icmp_ln874_32_fu_5885_p2;
        icmp_ln874_33_reg_7479 <= icmp_ln874_33_fu_5901_p2;
        icmp_ln874_34_reg_7502 <= icmp_ln874_34_fu_5946_p2;
        icmp_ln874_35_reg_7507 <= icmp_ln874_35_fu_5962_p2;
        select_ln340_138_reg_7519 <= select_ln340_138_fu_6066_p3;
        select_ln340_139_reg_7524 <= select_ln340_139_fu_6166_p3;
        tmp_8830_reg_7463 <= mul_ln1118_1094_fu_319_p2[32'd31];
        tmp_8836_reg_7491 <= mul_ln1118_1095_fu_309_p2[32'd31];
        weights_offset_read_reg_6766 <= weights_offset;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        icmp_ln718_10_reg_7229 <= icmp_ln718_10_fu_3758_p2;
        icmp_ln718_11_reg_7257 <= icmp_ln718_11_fu_3819_p2;
        icmp_ln768_10_reg_7246 <= icmp_ln768_10_fu_3796_p2;
        icmp_ln768_11_reg_7274 <= icmp_ln768_11_fu_3857_p2;
        icmp_ln874_20_reg_7234 <= icmp_ln874_20_fu_3774_p2;
        icmp_ln874_21_reg_7239 <= icmp_ln874_21_fu_3790_p2;
        icmp_ln874_22_reg_7262 <= icmp_ln874_22_fu_3835_p2;
        icmp_ln874_23_reg_7267 <= icmp_ln874_23_fu_3851_p2;
        select_ln340_132_reg_7289 <= select_ln340_132_fu_3975_p3;
        select_ln340_133_reg_7295 <= select_ln340_133_fu_4075_p3;
        tmp_8794_reg_7223 <= mul_ln1118_1088_fu_314_p2[32'd31];
        tmp_8800_reg_7251 <= mul_ln1118_1089_fu_304_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        icmp_ln718_12_reg_7315 <= icmp_ln718_12_fu_4465_p2;
        icmp_ln718_13_reg_7343 <= icmp_ln718_13_fu_4526_p2;
        icmp_ln768_12_reg_7332 <= icmp_ln768_12_fu_4503_p2;
        icmp_ln768_13_reg_7360 <= icmp_ln768_13_fu_4564_p2;
        icmp_ln874_24_reg_7320 <= icmp_ln874_24_fu_4481_p2;
        icmp_ln874_25_reg_7325 <= icmp_ln874_25_fu_4497_p2;
        icmp_ln874_26_reg_7348 <= icmp_ln874_26_fu_4542_p2;
        icmp_ln874_27_reg_7353 <= icmp_ln874_27_fu_4558_p2;
        select_ln340_134_reg_7375 <= select_ln340_134_fu_4682_p3;
        select_ln340_135_reg_7381 <= select_ln340_135_fu_4782_p3;
        sext_ln1116_2_reg_7301 <= sext_ln1116_2_fu_4443_p1;
        tmp_8806_reg_7309 <= mul_ln1118_1090_fu_321_p2[32'd31];
        tmp_8812_reg_7337 <= mul_ln1118_1091_fu_317_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        icmp_ln718_14_reg_7393 <= icmp_ln718_14_fu_5167_p2;
        icmp_ln718_15_reg_7421 <= icmp_ln718_15_fu_5228_p2;
        icmp_ln768_14_reg_7410 <= icmp_ln768_14_fu_5205_p2;
        icmp_ln768_15_reg_7438 <= icmp_ln768_15_fu_5266_p2;
        icmp_ln874_28_reg_7398 <= icmp_ln874_28_fu_5183_p2;
        icmp_ln874_29_reg_7403 <= icmp_ln874_29_fu_5199_p2;
        icmp_ln874_30_reg_7426 <= icmp_ln874_30_fu_5244_p2;
        icmp_ln874_31_reg_7431 <= icmp_ln874_31_fu_5260_p2;
        select_ln340_136_reg_7453 <= select_ln340_136_fu_5384_p3;
        select_ln340_137_reg_7458 <= select_ln340_137_fu_5484_p3;
        tmp_8818_reg_7387 <= mul_ln1118_1092_fu_313_p2[32'd31];
        tmp_8824_reg_7415 <= mul_ln1118_1093_fu_315_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        icmp_ln718_1_reg_6856 <= icmp_ln718_1_fu_1092_p2;
        icmp_ln718_reg_6828 <= icmp_ln718_fu_1031_p2;
        icmp_ln768_1_reg_6873 <= icmp_ln768_1_fu_1130_p2;
        icmp_ln768_reg_6845 <= icmp_ln768_fu_1069_p2;
        icmp_ln874_1_reg_6838 <= icmp_ln874_1_fu_1063_p2;
        icmp_ln874_2_reg_6861 <= icmp_ln874_2_fu_1108_p2;
        icmp_ln874_3_reg_6866 <= icmp_ln874_3_fu_1124_p2;
        icmp_ln874_reg_6833 <= icmp_ln874_fu_1047_p2;
        sext_ln1116_reg_6814 <= sext_ln1116_fu_1008_p1;
        tmp_8740_reg_6850 <= mul_ln1118_1079_fu_316_p2[32'd31];
        tmp_reg_6822 <= mul_ln1118_fu_308_p2[32'd31];
        weights_offset_cast_reg_6796[6 : 0] <= weights_offset_cast_fu_1005_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln718_2_reg_6916 <= icmp_ln718_2_fu_1545_p2;
        icmp_ln718_3_reg_6944 <= icmp_ln718_3_fu_1606_p2;
        icmp_ln768_2_reg_6933 <= icmp_ln768_2_fu_1583_p2;
        icmp_ln768_3_reg_6961 <= icmp_ln768_3_fu_1644_p2;
        icmp_ln874_4_reg_6921 <= icmp_ln874_4_fu_1561_p2;
        icmp_ln874_5_reg_6926 <= icmp_ln874_5_fu_1577_p2;
        icmp_ln874_6_reg_6949 <= icmp_ln874_6_fu_1622_p2;
        icmp_ln874_7_reg_6954 <= icmp_ln874_7_fu_1638_p2;
        select_ln384_1919_reg_6898 <= select_ln384_1919_fu_1340_p3;
        select_ln384_1921_reg_6904 <= select_ln384_1921_fu_1520_p3;
        tmp_8746_reg_6910 <= mul_ln1118_1080_fu_306_p2[32'd31];
        tmp_8752_reg_6938 <= mul_ln1118_1081_fu_320_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln718_4_reg_6999 <= icmp_ln718_4_fu_2047_p2;
        icmp_ln718_5_reg_7027 <= icmp_ln718_5_fu_2108_p2;
        icmp_ln768_4_reg_7016 <= icmp_ln768_4_fu_2085_p2;
        icmp_ln768_5_reg_7044 <= icmp_ln768_5_fu_2146_p2;
        icmp_ln874_10_reg_7032 <= icmp_ln874_10_fu_2124_p2;
        icmp_ln874_11_reg_7037 <= icmp_ln874_11_fu_2140_p2;
        icmp_ln874_8_reg_7004 <= icmp_ln874_8_fu_2063_p2;
        icmp_ln874_9_reg_7009 <= icmp_ln874_9_fu_2079_p2;
        select_ln384_1923_reg_6981 <= select_ln384_1923_fu_1842_p3;
        select_ln384_1925_reg_6987 <= select_ln384_1925_fu_2022_p3;
        tmp_8758_reg_6993 <= mul_ln1118_1082_fu_312_p2[32'd31];
        tmp_8764_reg_7021 <= mul_ln1118_1083_fu_305_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        icmp_ln718_6_reg_7085 <= icmp_ln718_6_fu_2554_p2;
        icmp_ln718_7_reg_7113 <= icmp_ln718_7_fu_2615_p2;
        icmp_ln768_6_reg_7102 <= icmp_ln768_6_fu_2592_p2;
        icmp_ln768_7_reg_7130 <= icmp_ln768_7_fu_2653_p2;
        icmp_ln874_12_reg_7090 <= icmp_ln874_12_fu_2570_p2;
        icmp_ln874_13_reg_7095 <= icmp_ln874_13_fu_2586_p2;
        icmp_ln874_14_reg_7118 <= icmp_ln874_14_fu_2631_p2;
        icmp_ln874_15_reg_7123 <= icmp_ln874_15_fu_2647_p2;
        select_ln384_1927_reg_7059 <= select_ln384_1927_fu_2344_p3;
        select_ln384_1929_reg_7065 <= select_ln384_1929_fu_2524_p3;
        sext_ln1116_1_reg_7071 <= sext_ln1116_1_fu_2532_p1;
        tmp_8770_reg_7079 <= mul_ln1118_1084_fu_311_p2[32'd31];
        tmp_8776_reg_7107 <= mul_ln1118_1085_fu_310_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        icmp_ln718_8_reg_7151 <= icmp_ln718_8_fu_3056_p2;
        icmp_ln718_9_reg_7179 <= icmp_ln718_9_fu_3117_p2;
        icmp_ln768_8_reg_7168 <= icmp_ln768_8_fu_3094_p2;
        icmp_ln768_9_reg_7196 <= icmp_ln768_9_fu_3155_p2;
        icmp_ln874_16_reg_7156 <= icmp_ln874_16_fu_3072_p2;
        icmp_ln874_17_reg_7161 <= icmp_ln874_17_fu_3088_p2;
        icmp_ln874_18_reg_7184 <= icmp_ln874_18_fu_3133_p2;
        icmp_ln874_19_reg_7189 <= icmp_ln874_19_fu_3149_p2;
        select_ln340_130_reg_7211 <= select_ln340_130_fu_3273_p3;
        select_ln340_131_reg_7217 <= select_ln340_131_fu_3373_p3;
        tmp_8782_reg_7145 <= mul_ln1118_1086_fu_307_p2[32'd31];
        tmp_8788_reg_7173 <= mul_ln1118_1087_fu_318_p2[32'd31];
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_address0 = zext_ln38_1_fu_1163_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_address0 = zext_ln38_fu_1000_p1;
        end else begin
            data_address0 = 'bx;
        end
    end else begin
        data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_ce1 = 1'b1;
    end else begin
        data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            weights_address0 = zext_ln42_16_fu_5287_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            weights_address0 = zext_ln42_14_fu_4585_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            weights_address0 = zext_ln42_12_fu_3878_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            weights_address0 = zext_ln42_10_fu_3176_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            weights_address0 = zext_ln42_8_fu_2674_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            weights_address0 = zext_ln42_6_fu_2167_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            weights_address0 = zext_ln42_4_fu_1665_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights_address0 = zext_ln42_2_fu_1153_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights_address0 = zext_ln42_fu_989_p1;
        end else begin
            weights_address0 = 'bx;
        end
    end else begin
        weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            weights_address1 = zext_ln42_15_fu_5277_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            weights_address1 = zext_ln42_13_fu_4575_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            weights_address1 = zext_ln42_11_fu_3868_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            weights_address1 = zext_ln42_9_fu_3166_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            weights_address1 = zext_ln42_7_fu_2664_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            weights_address1 = zext_ln42_5_fu_2157_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            weights_address1 = zext_ln42_3_fu_1655_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights_address1 = zext_ln42_1_fu_1142_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights_address1 = weights_offset_cast37_fu_973_p1;
        end else begin
            weights_address1 = 'bx;
        end
    end else begin
        weights_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        weights_ce0 = 1'b1;
    end else begin
        weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        weights_ce1 = 1'b1;
    end else begin
        weights_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_idle_pp0_1to1 == 1'b1) & (ap_start == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_V_0_1_fu_1114_p4 = {{mul_ln1118_1079_fu_316_p2[31:26]}};

assign Range1_V_0_2_fu_1567_p4 = {{mul_ln1118_1080_fu_306_p2[31:26]}};

assign Range1_V_0_3_fu_1628_p4 = {{mul_ln1118_1081_fu_320_p2[31:26]}};

assign Range1_V_0_4_fu_2069_p4 = {{mul_ln1118_1082_fu_312_p2[31:26]}};

assign Range1_V_0_5_fu_2130_p4 = {{mul_ln1118_1083_fu_305_p2[31:26]}};

assign Range1_V_1_1_fu_2637_p4 = {{mul_ln1118_1085_fu_310_p2[31:26]}};

assign Range1_V_1_2_fu_3078_p4 = {{mul_ln1118_1086_fu_307_p2[31:26]}};

assign Range1_V_1_3_fu_3139_p4 = {{mul_ln1118_1087_fu_318_p2[31:26]}};

assign Range1_V_1_4_fu_3780_p4 = {{mul_ln1118_1088_fu_314_p2[31:26]}};

assign Range1_V_1_5_fu_3841_p4 = {{mul_ln1118_1089_fu_304_p2[31:26]}};

assign Range1_V_1_fu_2576_p4 = {{mul_ln1118_1084_fu_311_p2[31:26]}};

assign Range1_V_2_1_fu_4548_p4 = {{mul_ln1118_1091_fu_317_p2[31:26]}};

assign Range1_V_2_2_fu_5189_p4 = {{mul_ln1118_1092_fu_313_p2[31:26]}};

assign Range1_V_2_3_fu_5250_p4 = {{mul_ln1118_1093_fu_315_p2[31:26]}};

assign Range1_V_2_4_fu_5891_p4 = {{mul_ln1118_1094_fu_319_p2[31:26]}};

assign Range1_V_2_5_fu_5952_p4 = {{mul_ln1118_1095_fu_309_p2[31:26]}};

assign Range1_V_2_fu_4487_p4 = {{mul_ln1118_1090_fu_321_p2[31:26]}};

assign Range1_V_fu_1053_p4 = {{mul_ln1118_fu_308_p2[31:26]}};

assign Range2_V_0_1_fu_1098_p4 = {{mul_ln1118_1079_fu_316_p2[31:27]}};

assign Range2_V_0_2_fu_1551_p4 = {{mul_ln1118_1080_fu_306_p2[31:27]}};

assign Range2_V_0_3_fu_1612_p4 = {{mul_ln1118_1081_fu_320_p2[31:27]}};

assign Range2_V_0_4_fu_2053_p4 = {{mul_ln1118_1082_fu_312_p2[31:27]}};

assign Range2_V_0_5_fu_2114_p4 = {{mul_ln1118_1083_fu_305_p2[31:27]}};

assign Range2_V_1_1_fu_2621_p4 = {{mul_ln1118_1085_fu_310_p2[31:27]}};

assign Range2_V_1_2_fu_3062_p4 = {{mul_ln1118_1086_fu_307_p2[31:27]}};

assign Range2_V_1_3_fu_3123_p4 = {{mul_ln1118_1087_fu_318_p2[31:27]}};

assign Range2_V_1_4_fu_3764_p4 = {{mul_ln1118_1088_fu_314_p2[31:27]}};

assign Range2_V_1_5_fu_3825_p4 = {{mul_ln1118_1089_fu_304_p2[31:27]}};

assign Range2_V_1_fu_2560_p4 = {{mul_ln1118_1084_fu_311_p2[31:27]}};

assign Range2_V_2_1_fu_4532_p4 = {{mul_ln1118_1091_fu_317_p2[31:27]}};

assign Range2_V_2_2_fu_5173_p4 = {{mul_ln1118_1092_fu_313_p2[31:27]}};

assign Range2_V_2_3_fu_5234_p4 = {{mul_ln1118_1093_fu_315_p2[31:27]}};

assign Range2_V_2_4_fu_5875_p4 = {{mul_ln1118_1094_fu_319_p2[31:27]}};

assign Range2_V_2_5_fu_5936_p4 = {{mul_ln1118_1095_fu_309_p2[31:27]}};

assign Range2_V_2_fu_4471_p4 = {{mul_ln1118_1090_fu_321_p2[31:27]}};

assign Range2_V_fu_1037_p4 = {{mul_ln1118_fu_308_p2[31:27]}};

assign add_ln1192_10_fu_6541_p2 = ($signed(sext_ln703_835_fu_6537_p1) + $signed(sext_ln703_834_fu_6534_p1));

assign add_ln1192_11_fu_6641_p2 = ($signed(sext_ln703_837_fu_6637_p1) + $signed(sext_ln703_836_fu_6634_p1));

assign add_ln1192_1_fu_3288_p2 = ($signed(sext_ln703_817_fu_3284_p1) + $signed(sext_ln703_816_fu_3281_p1));

assign add_ln1192_2_fu_3890_p2 = ($signed(sext_ln703_819_fu_3886_p1) + $signed(sext_ln703_818_fu_3883_p1));

assign add_ln1192_3_fu_3990_p2 = ($signed(sext_ln703_821_fu_3986_p1) + $signed(sext_ln703_820_fu_3983_p1));

assign add_ln1192_4_fu_4597_p2 = ($signed(sext_ln703_823_fu_4593_p1) + $signed(sext_ln703_822_fu_4590_p1));

assign add_ln1192_5_fu_4697_p2 = ($signed(sext_ln703_825_fu_4693_p1) + $signed(sext_ln703_824_fu_4690_p1));

assign add_ln1192_6_fu_5299_p2 = ($signed(sext_ln703_827_fu_5295_p1) + $signed(sext_ln703_826_fu_5292_p1));

assign add_ln1192_7_fu_5399_p2 = ($signed(sext_ln703_829_fu_5395_p1) + $signed(sext_ln703_828_fu_5392_p1));

assign add_ln1192_8_fu_5981_p2 = ($signed(sext_ln703_831_fu_5977_p1) + $signed(sext_ln703_830_fu_5974_p1));

assign add_ln1192_9_fu_6081_p2 = ($signed(sext_ln703_833_fu_6077_p1) + $signed(sext_ln703_832_fu_6074_p1));

assign add_ln1192_fu_3188_p2 = ($signed(sext_ln703_815_fu_3184_p1) + $signed(sext_ln703_fu_3181_p1));

assign add_ln38_1_fu_1158_p2 = (7'd2 + data_offset_read_reg_6771);

assign add_ln38_fu_994_p2 = (7'd1 + data_offset);

assign add_ln415_1008_fu_1397_p2 = (trunc_ln708_1_fu_1348_p4 + zext_ln415_1151_fu_1393_p1);

assign add_ln415_1009_fu_1719_p2 = (trunc_ln708_2_fu_1670_p4 + zext_ln415_1152_fu_1715_p1);

assign add_ln415_1010_fu_1899_p2 = (trunc_ln708_3_fu_1850_p4 + zext_ln415_1153_fu_1895_p1);

assign add_ln415_1011_fu_2221_p2 = (trunc_ln708_4_fu_2172_p4 + zext_ln415_1154_fu_2217_p1);

assign add_ln415_1012_fu_2401_p2 = (trunc_ln708_5_fu_2352_p4 + zext_ln415_1155_fu_2397_p1);

assign add_ln415_1013_fu_2728_p2 = (trunc_ln708_6_fu_2679_p4 + zext_ln415_1156_fu_2724_p1);

assign add_ln415_1014_fu_2908_p2 = (trunc_ln708_7_fu_2859_p4 + zext_ln415_1157_fu_2904_p1);

assign add_ln415_1015_fu_3430_p2 = (trunc_ln708_8_fu_3381_p4 + zext_ln415_1158_fu_3426_p1);

assign add_ln415_1016_fu_3610_p2 = (trunc_ln708_9_fu_3561_p4 + zext_ln415_1159_fu_3606_p1);

assign add_ln415_1017_fu_4132_p2 = (trunc_ln708_s_fu_4083_p4 + zext_ln415_1160_fu_4128_p1);

assign add_ln415_1018_fu_4312_p2 = (trunc_ln708_10_fu_4263_p4 + zext_ln415_1161_fu_4308_p1);

assign add_ln415_1019_fu_4839_p2 = (trunc_ln708_11_fu_4790_p4 + zext_ln415_1162_fu_4835_p1);

assign add_ln415_1020_fu_5019_p2 = (trunc_ln708_12_fu_4970_p4 + zext_ln415_1163_fu_5015_p1);

assign add_ln415_1021_fu_5541_p2 = (trunc_ln708_13_fu_5492_p4 + zext_ln415_1164_fu_5537_p1);

assign add_ln415_1022_fu_5721_p2 = (trunc_ln708_14_fu_5672_p4 + zext_ln415_1165_fu_5717_p1);

assign add_ln415_1023_fu_6223_p2 = (trunc_ln708_15_fu_6174_p4 + zext_ln415_1166_fu_6219_p1);

assign add_ln415_1024_fu_6403_p2 = (trunc_ln708_16_fu_6354_p4 + zext_ln415_1167_fu_6399_p1);

assign add_ln415_fu_1217_p2 = (trunc_ln7_fu_1168_p4 + zext_ln415_fu_1213_p1);

assign add_ln42_10_fu_3171_p2 = (8'd11 + weights_offset_cast_reg_6796);

assign add_ln42_11_fu_3863_p2 = (8'd12 + weights_offset_cast_reg_6796);

assign add_ln42_12_fu_3873_p2 = (8'd13 + weights_offset_cast_reg_6796);

assign add_ln42_13_fu_4570_p2 = (8'd14 + weights_offset_cast_reg_6796);

assign add_ln42_14_fu_4580_p2 = (8'd15 + weights_offset_cast_reg_6796);

assign add_ln42_15_fu_5272_p2 = (8'd16 + weights_offset_cast_reg_6796);

assign add_ln42_16_fu_5282_p2 = (8'd17 + weights_offset_cast_reg_6796);

assign add_ln42_1_fu_1136_p2 = (8'd2 + weights_offset_cast_fu_1005_p1);

assign add_ln42_2_fu_1147_p2 = (8'd3 + weights_offset_cast_fu_1005_p1);

assign add_ln42_3_fu_1650_p2 = (8'd4 + weights_offset_cast_reg_6796);

assign add_ln42_4_fu_1660_p2 = (8'd5 + weights_offset_cast_reg_6796);

assign add_ln42_5_fu_2152_p2 = (8'd6 + weights_offset_cast_reg_6796);

assign add_ln42_6_fu_2162_p2 = (8'd7 + weights_offset_cast_reg_6796);

assign add_ln42_7_fu_2659_p2 = (8'd8 + weights_offset_cast_reg_6796);

assign add_ln42_8_fu_2669_p2 = (8'd9 + weights_offset_cast_reg_6796);

assign add_ln42_9_fu_3161_p2 = (8'd10 + weights_offset_cast_reg_6796);

assign add_ln42_fu_983_p2 = (7'd1 + weights_offset);

assign add_ln703_10_fu_6555_p2 = ($signed(select_ln340_134_reg_7375) + $signed(select_ln384_1951_fu_6346_p3));

assign add_ln703_11_fu_6655_p2 = ($signed(select_ln340_135_reg_7381) + $signed(select_ln384_1953_fu_6526_p3));

assign add_ln703_1_fu_3302_p2 = ($signed(select_ln384_1921_reg_6904) + $signed(select_ln384_1933_fu_3031_p3));

assign add_ln703_2_fu_3904_p2 = ($signed(select_ln384_1923_reg_6981) + $signed(select_ln384_1935_fu_3553_p3));

assign add_ln703_3_fu_4004_p2 = ($signed(select_ln384_1925_reg_6987) + $signed(select_ln384_1937_fu_3733_p3));

assign add_ln703_4_fu_4611_p2 = ($signed(select_ln384_1927_reg_7059) + $signed(select_ln384_1939_fu_4255_p3));

assign add_ln703_5_fu_4711_p2 = ($signed(select_ln384_1929_reg_7065) + $signed(select_ln384_1941_fu_4435_p3));

assign add_ln703_6_fu_5313_p2 = ($signed(select_ln340_130_reg_7211) + $signed(select_ln384_1943_fu_4962_p3));

assign add_ln703_7_fu_5413_p2 = ($signed(select_ln340_131_reg_7217) + $signed(select_ln384_1945_fu_5142_p3));

assign add_ln703_8_fu_5995_p2 = ($signed(select_ln340_132_reg_7289) + $signed(select_ln384_1947_fu_5664_p3));

assign add_ln703_9_fu_6095_p2 = ($signed(select_ln340_133_reg_7295) + $signed(select_ln384_1949_fu_5844_p3));

assign add_ln703_fu_3202_p2 = ($signed(select_ln384_1919_reg_6898) + $signed(select_ln384_1931_fu_2851_p3));

assign and_ln412_10_fu_4122_p2 = (tmp_8796_fu_4101_p3 & or_ln412_1160_fu_4117_p2);

assign and_ln412_11_fu_4302_p2 = (tmp_8802_fu_4281_p3 & or_ln412_1161_fu_4297_p2);

assign and_ln412_12_fu_4829_p2 = (tmp_8808_fu_4808_p3 & or_ln412_1162_fu_4824_p2);

assign and_ln412_13_fu_5009_p2 = (tmp_8814_fu_4988_p3 & or_ln412_1163_fu_5004_p2);

assign and_ln412_14_fu_5531_p2 = (tmp_8820_fu_5510_p3 & or_ln412_1164_fu_5526_p2);

assign and_ln412_15_fu_5711_p2 = (tmp_8826_fu_5690_p3 & or_ln412_1165_fu_5706_p2);

assign and_ln412_16_fu_6213_p2 = (tmp_8832_fu_6192_p3 & or_ln412_1166_fu_6208_p2);

assign and_ln412_17_fu_6393_p2 = (tmp_8838_fu_6372_p3 & or_ln412_1167_fu_6388_p2);

assign and_ln412_1_fu_1387_p2 = (tmp_8742_fu_1366_p3 & or_ln412_1151_fu_1382_p2);

assign and_ln412_2_fu_1709_p2 = (tmp_8748_fu_1688_p3 & or_ln412_1152_fu_1704_p2);

assign and_ln412_3_fu_1889_p2 = (tmp_8754_fu_1868_p3 & or_ln412_1153_fu_1884_p2);

assign and_ln412_4_fu_2211_p2 = (tmp_8760_fu_2190_p3 & or_ln412_1154_fu_2206_p2);

assign and_ln412_5_fu_2391_p2 = (tmp_8766_fu_2370_p3 & or_ln412_1155_fu_2386_p2);

assign and_ln412_6_fu_2718_p2 = (tmp_8772_fu_2697_p3 & or_ln412_1156_fu_2713_p2);

assign and_ln412_7_fu_2898_p2 = (tmp_8778_fu_2877_p3 & or_ln412_1157_fu_2893_p2);

assign and_ln412_8_fu_3420_p2 = (tmp_8784_fu_3399_p3 & or_ln412_1158_fu_3415_p2);

assign and_ln412_9_fu_3600_p2 = (tmp_8790_fu_3579_p3 & or_ln412_1159_fu_3595_p2);

assign and_ln412_fu_1207_p2 = (tmp_8736_fu_1186_p3 & or_ln412_fu_1202_p2);

assign and_ln416_10_fu_4152_p2 = (xor_ln416_1088_fu_4146_p2 & tmp_8797_fu_4109_p3);

assign and_ln416_11_fu_4332_p2 = (xor_ln416_1089_fu_4326_p2 & tmp_8803_fu_4289_p3);

assign and_ln416_12_fu_4859_p2 = (xor_ln416_1090_fu_4853_p2 & tmp_8809_fu_4816_p3);

assign and_ln416_13_fu_5039_p2 = (xor_ln416_1091_fu_5033_p2 & tmp_8815_fu_4996_p3);

assign and_ln416_14_fu_5561_p2 = (xor_ln416_1092_fu_5555_p2 & tmp_8821_fu_5518_p3);

assign and_ln416_15_fu_5741_p2 = (xor_ln416_1093_fu_5735_p2 & tmp_8827_fu_5698_p3);

assign and_ln416_16_fu_6243_p2 = (xor_ln416_1094_fu_6237_p2 & tmp_8833_fu_6200_p3);

assign and_ln416_17_fu_6423_p2 = (xor_ln416_1095_fu_6417_p2 & tmp_8839_fu_6380_p3);

assign and_ln416_1_fu_1417_p2 = (xor_ln416_1079_fu_1411_p2 & tmp_8743_fu_1374_p3);

assign and_ln416_2_fu_1739_p2 = (xor_ln416_1080_fu_1733_p2 & tmp_8749_fu_1696_p3);

assign and_ln416_3_fu_1919_p2 = (xor_ln416_1081_fu_1913_p2 & tmp_8755_fu_1876_p3);

assign and_ln416_4_fu_2241_p2 = (xor_ln416_1082_fu_2235_p2 & tmp_8761_fu_2198_p3);

assign and_ln416_5_fu_2421_p2 = (xor_ln416_1083_fu_2415_p2 & tmp_8767_fu_2378_p3);

assign and_ln416_6_fu_2748_p2 = (xor_ln416_1084_fu_2742_p2 & tmp_8773_fu_2705_p3);

assign and_ln416_7_fu_2928_p2 = (xor_ln416_1085_fu_2922_p2 & tmp_8779_fu_2885_p3);

assign and_ln416_8_fu_3450_p2 = (xor_ln416_1086_fu_3444_p2 & tmp_8785_fu_3407_p3);

assign and_ln416_9_fu_3630_p2 = (xor_ln416_1087_fu_3624_p2 & tmp_8791_fu_3587_p3);

assign and_ln416_fu_1237_p2 = (xor_ln416_fu_1231_p2 & tmp_8737_fu_1194_p3);

assign and_ln780_1007_fu_1443_p2 = (xor_ln780_1007_fu_1437_p2 & icmp_ln874_2_reg_6861);

assign and_ln780_1008_fu_1765_p2 = (xor_ln780_1008_fu_1759_p2 & icmp_ln874_4_reg_6921);

assign and_ln780_1009_fu_1945_p2 = (xor_ln780_1009_fu_1939_p2 & icmp_ln874_6_reg_6949);

assign and_ln780_1010_fu_2267_p2 = (xor_ln780_1010_fu_2261_p2 & icmp_ln874_8_reg_7004);

assign and_ln780_1011_fu_2447_p2 = (xor_ln780_1011_fu_2441_p2 & icmp_ln874_10_reg_7032);

assign and_ln780_1012_fu_2774_p2 = (xor_ln780_1012_fu_2768_p2 & icmp_ln874_12_reg_7090);

assign and_ln780_1013_fu_2954_p2 = (xor_ln780_1013_fu_2948_p2 & icmp_ln874_14_reg_7118);

assign and_ln780_1014_fu_3476_p2 = (xor_ln780_1014_fu_3470_p2 & icmp_ln874_16_reg_7156);

assign and_ln780_1015_fu_3656_p2 = (xor_ln780_1015_fu_3650_p2 & icmp_ln874_18_reg_7184);

assign and_ln780_1016_fu_4178_p2 = (xor_ln780_1016_fu_4172_p2 & icmp_ln874_20_reg_7234);

assign and_ln780_1017_fu_4358_p2 = (xor_ln780_1017_fu_4352_p2 & icmp_ln874_22_reg_7262);

assign and_ln780_1018_fu_4885_p2 = (xor_ln780_1018_fu_4879_p2 & icmp_ln874_24_reg_7320);

assign and_ln780_1019_fu_5065_p2 = (xor_ln780_1019_fu_5059_p2 & icmp_ln874_26_reg_7348);

assign and_ln780_1020_fu_5587_p2 = (xor_ln780_1020_fu_5581_p2 & icmp_ln874_28_reg_7398);

assign and_ln780_1021_fu_5767_p2 = (xor_ln780_1021_fu_5761_p2 & icmp_ln874_30_reg_7426);

assign and_ln780_1022_fu_6269_p2 = (xor_ln780_1022_fu_6263_p2 & icmp_ln874_32_reg_7474);

assign and_ln780_1023_fu_6449_p2 = (xor_ln780_1023_fu_6443_p2 & icmp_ln874_34_reg_7502);

assign and_ln780_fu_1263_p2 = (xor_ln780_fu_1257_p2 & icmp_ln874_reg_6833);

assign and_ln781_1007_fu_1455_p2 = (icmp_ln874_3_reg_6866 & and_ln416_1_fu_1417_p2);

assign and_ln781_1008_fu_1777_p2 = (icmp_ln874_5_reg_6926 & and_ln416_2_fu_1739_p2);

assign and_ln781_1009_fu_1957_p2 = (icmp_ln874_7_reg_6954 & and_ln416_3_fu_1919_p2);

assign and_ln781_1010_fu_2279_p2 = (icmp_ln874_9_reg_7009 & and_ln416_4_fu_2241_p2);

assign and_ln781_1011_fu_2459_p2 = (icmp_ln874_11_reg_7037 & and_ln416_5_fu_2421_p2);

assign and_ln781_1012_fu_2786_p2 = (icmp_ln874_13_reg_7095 & and_ln416_6_fu_2748_p2);

assign and_ln781_1013_fu_2966_p2 = (icmp_ln874_15_reg_7123 & and_ln416_7_fu_2928_p2);

assign and_ln781_1014_fu_3488_p2 = (icmp_ln874_17_reg_7161 & and_ln416_8_fu_3450_p2);

assign and_ln781_1015_fu_3668_p2 = (icmp_ln874_19_reg_7189 & and_ln416_9_fu_3630_p2);

assign and_ln781_1016_fu_4190_p2 = (icmp_ln874_21_reg_7239 & and_ln416_10_fu_4152_p2);

assign and_ln781_1017_fu_4370_p2 = (icmp_ln874_23_reg_7267 & and_ln416_11_fu_4332_p2);

assign and_ln781_1018_fu_4897_p2 = (icmp_ln874_25_reg_7325 & and_ln416_12_fu_4859_p2);

assign and_ln781_1019_fu_5077_p2 = (icmp_ln874_27_reg_7353 & and_ln416_13_fu_5039_p2);

assign and_ln781_1020_fu_5599_p2 = (icmp_ln874_29_reg_7403 & and_ln416_14_fu_5561_p2);

assign and_ln781_1021_fu_5779_p2 = (icmp_ln874_31_reg_7431 & and_ln416_15_fu_5741_p2);

assign and_ln781_1022_fu_6281_p2 = (icmp_ln874_33_reg_7479 & and_ln416_16_fu_6243_p2);

assign and_ln781_1023_fu_6461_p2 = (icmp_ln874_35_reg_7507 & and_ln416_17_fu_6423_p2);

assign and_ln781_fu_1275_p2 = (icmp_ln874_1_reg_6838 & and_ln416_fu_1237_p2);

assign and_ln785_10_fu_4212_p2 = (xor_ln785_2155_fu_4207_p2 & or_ln785_1087_fu_4201_p2);

assign and_ln785_11_fu_4392_p2 = (xor_ln785_2157_fu_4387_p2 & or_ln785_1088_fu_4381_p2);

assign and_ln785_12_fu_4919_p2 = (xor_ln785_2159_fu_4914_p2 & or_ln785_1089_fu_4908_p2);

assign and_ln785_13_fu_5099_p2 = (xor_ln785_2161_fu_5094_p2 & or_ln785_1090_fu_5088_p2);

assign and_ln785_14_fu_5621_p2 = (xor_ln785_2163_fu_5616_p2 & or_ln785_1091_fu_5610_p2);

assign and_ln785_15_fu_5801_p2 = (xor_ln785_2165_fu_5796_p2 & or_ln785_1092_fu_5790_p2);

assign and_ln785_16_fu_6303_p2 = (xor_ln785_2167_fu_6298_p2 & or_ln785_1093_fu_6292_p2);

assign and_ln785_17_fu_6483_p2 = (xor_ln785_2169_fu_6478_p2 & or_ln785_1094_fu_6472_p2);

assign and_ln785_18_fu_3221_p2 = (xor_ln785_2170_fu_3215_p2 & tmp_8843_fu_3207_p3);

assign and_ln785_19_fu_3321_p2 = (xor_ln785_2171_fu_3315_p2 & tmp_8845_fu_3307_p3);

assign and_ln785_1_fu_1477_p2 = (xor_ln785_2137_fu_1472_p2 & or_ln785_1078_fu_1466_p2);

assign and_ln785_20_fu_3923_p2 = (xor_ln785_2172_fu_3917_p2 & tmp_8847_fu_3909_p3);

assign and_ln785_21_fu_4023_p2 = (xor_ln785_2173_fu_4017_p2 & tmp_8849_fu_4009_p3);

assign and_ln785_22_fu_4630_p2 = (xor_ln785_2174_fu_4624_p2 & tmp_8851_fu_4616_p3);

assign and_ln785_23_fu_4730_p2 = (xor_ln785_2175_fu_4724_p2 & tmp_8853_fu_4716_p3);

assign and_ln785_24_fu_5332_p2 = (xor_ln785_2176_fu_5326_p2 & tmp_8855_fu_5318_p3);

assign and_ln785_25_fu_5432_p2 = (xor_ln785_2177_fu_5426_p2 & tmp_8857_fu_5418_p3);

assign and_ln785_26_fu_6014_p2 = (xor_ln785_2178_fu_6008_p2 & tmp_8859_fu_6000_p3);

assign and_ln785_27_fu_6114_p2 = (xor_ln785_2179_fu_6108_p2 & tmp_8861_fu_6100_p3);

assign and_ln785_28_fu_6574_p2 = (xor_ln785_2180_fu_6568_p2 & tmp_8863_fu_6560_p3);

assign and_ln785_29_fu_6674_p2 = (xor_ln785_2181_fu_6668_p2 & tmp_8865_fu_6660_p3);

assign and_ln785_2_fu_1799_p2 = (xor_ln785_2139_fu_1794_p2 & or_ln785_1079_fu_1788_p2);

assign and_ln785_3_fu_1979_p2 = (xor_ln785_2141_fu_1974_p2 & or_ln785_1080_fu_1968_p2);

assign and_ln785_4_fu_2301_p2 = (xor_ln785_2143_fu_2296_p2 & or_ln785_1081_fu_2290_p2);

assign and_ln785_5_fu_2481_p2 = (xor_ln785_2145_fu_2476_p2 & or_ln785_1082_fu_2470_p2);

assign and_ln785_6_fu_2808_p2 = (xor_ln785_2147_fu_2803_p2 & or_ln785_1083_fu_2797_p2);

assign and_ln785_7_fu_2988_p2 = (xor_ln785_2149_fu_2983_p2 & or_ln785_1084_fu_2977_p2);

assign and_ln785_8_fu_3510_p2 = (xor_ln785_2151_fu_3505_p2 & or_ln785_1085_fu_3499_p2);

assign and_ln785_9_fu_3690_p2 = (xor_ln785_2153_fu_3685_p2 & or_ln785_1086_fu_3679_p2);

assign and_ln785_fu_1297_p2 = (xor_ln785_2135_fu_1292_p2 & or_ln785_fu_1286_p2);

assign and_ln786_2015_fu_1321_p2 = (xor_ln786_fu_1315_p2 & tmp_reg_6822);

assign and_ln786_2016_fu_1483_p2 = (tmp_8744_fu_1403_p3 & select_ln780_1_fu_1448_p3);

assign and_ln786_2017_fu_1501_p2 = (xor_ln786_1007_fu_1495_p2 & tmp_8740_reg_6850);

assign and_ln786_2018_fu_1805_p2 = (tmp_8750_fu_1725_p3 & select_ln780_2_fu_1770_p3);

assign and_ln786_2019_fu_1823_p2 = (xor_ln786_1008_fu_1817_p2 & tmp_8746_reg_6910);

assign and_ln786_2020_fu_1985_p2 = (tmp_8756_fu_1905_p3 & select_ln780_3_fu_1950_p3);

assign and_ln786_2021_fu_2003_p2 = (xor_ln786_1009_fu_1997_p2 & tmp_8752_reg_6938);

assign and_ln786_2022_fu_2307_p2 = (tmp_8762_fu_2227_p3 & select_ln780_4_fu_2272_p3);

assign and_ln786_2023_fu_2325_p2 = (xor_ln786_1010_fu_2319_p2 & tmp_8758_reg_6993);

assign and_ln786_2024_fu_2487_p2 = (tmp_8768_fu_2407_p3 & select_ln780_5_fu_2452_p3);

assign and_ln786_2025_fu_2505_p2 = (xor_ln786_1011_fu_2499_p2 & tmp_8764_reg_7021);

assign and_ln786_2026_fu_2814_p2 = (tmp_8774_fu_2734_p3 & select_ln780_6_fu_2779_p3);

assign and_ln786_2027_fu_2832_p2 = (xor_ln786_1012_fu_2826_p2 & tmp_8770_reg_7079);

assign and_ln786_2028_fu_2994_p2 = (tmp_8780_fu_2914_p3 & select_ln780_7_fu_2959_p3);

assign and_ln786_2029_fu_3012_p2 = (xor_ln786_1013_fu_3006_p2 & tmp_8776_reg_7107);

assign and_ln786_2030_fu_3516_p2 = (tmp_8786_fu_3436_p3 & select_ln780_8_fu_3481_p3);

assign and_ln786_2031_fu_3534_p2 = (xor_ln786_1014_fu_3528_p2 & tmp_8782_reg_7145);

assign and_ln786_2032_fu_3696_p2 = (tmp_8792_fu_3616_p3 & select_ln780_9_fu_3661_p3);

assign and_ln786_2033_fu_3714_p2 = (xor_ln786_1015_fu_3708_p2 & tmp_8788_reg_7173);

assign and_ln786_2034_fu_4218_p2 = (tmp_8798_fu_4138_p3 & select_ln780_10_fu_4183_p3);

assign and_ln786_2035_fu_4236_p2 = (xor_ln786_1016_fu_4230_p2 & tmp_8794_reg_7223);

assign and_ln786_2036_fu_4398_p2 = (tmp_8804_fu_4318_p3 & select_ln780_11_fu_4363_p3);

assign and_ln786_2037_fu_4416_p2 = (xor_ln786_1017_fu_4410_p2 & tmp_8800_reg_7251);

assign and_ln786_2038_fu_4925_p2 = (tmp_8810_fu_4845_p3 & select_ln780_12_fu_4890_p3);

assign and_ln786_2039_fu_4943_p2 = (xor_ln786_1018_fu_4937_p2 & tmp_8806_reg_7309);

assign and_ln786_2040_fu_5105_p2 = (tmp_8816_fu_5025_p3 & select_ln780_13_fu_5070_p3);

assign and_ln786_2041_fu_5123_p2 = (xor_ln786_1019_fu_5117_p2 & tmp_8812_reg_7337);

assign and_ln786_2042_fu_5627_p2 = (tmp_8822_fu_5547_p3 & select_ln780_14_fu_5592_p3);

assign and_ln786_2043_fu_5645_p2 = (xor_ln786_1020_fu_5639_p2 & tmp_8818_reg_7387);

assign and_ln786_2044_fu_5807_p2 = (tmp_8828_fu_5727_p3 & select_ln780_15_fu_5772_p3);

assign and_ln786_2045_fu_5825_p2 = (xor_ln786_1021_fu_5819_p2 & tmp_8824_reg_7415);

assign and_ln786_2046_fu_6309_p2 = (tmp_8834_fu_6229_p3 & select_ln780_16_fu_6274_p3);

assign and_ln786_2047_fu_6327_p2 = (xor_ln786_1022_fu_6321_p2 & tmp_8830_reg_7463);

assign and_ln786_2048_fu_6489_p2 = (tmp_8840_fu_6409_p3 & select_ln780_17_fu_6454_p3);

assign and_ln786_2049_fu_6507_p2 = (xor_ln786_1023_fu_6501_p2 & tmp_8836_reg_7491);

assign and_ln786_2050_fu_3233_p2 = (xor_ln786_1024_fu_3227_p2 & tmp_8842_fu_3194_p3);

assign and_ln786_2051_fu_3333_p2 = (xor_ln786_1025_fu_3327_p2 & tmp_8844_fu_3294_p3);

assign and_ln786_2052_fu_3935_p2 = (xor_ln786_1026_fu_3929_p2 & tmp_8846_fu_3896_p3);

assign and_ln786_2053_fu_4035_p2 = (xor_ln786_1027_fu_4029_p2 & tmp_8848_fu_3996_p3);

assign and_ln786_2054_fu_4642_p2 = (xor_ln786_1028_fu_4636_p2 & tmp_8850_fu_4603_p3);

assign and_ln786_2055_fu_4742_p2 = (xor_ln786_1029_fu_4736_p2 & tmp_8852_fu_4703_p3);

assign and_ln786_2056_fu_5344_p2 = (xor_ln786_1030_fu_5338_p2 & tmp_8854_fu_5305_p3);

assign and_ln786_2057_fu_5444_p2 = (xor_ln786_1031_fu_5438_p2 & tmp_8856_fu_5405_p3);

assign and_ln786_2058_fu_6026_p2 = (xor_ln786_1032_fu_6020_p2 & tmp_8858_fu_5987_p3);

assign and_ln786_2059_fu_6126_p2 = (xor_ln786_1033_fu_6120_p2 & tmp_8860_fu_6087_p3);

assign and_ln786_2060_fu_6586_p2 = (xor_ln786_1034_fu_6580_p2 & tmp_8862_fu_6547_p3);

assign and_ln786_2061_fu_6686_p2 = (xor_ln786_1035_fu_6680_p2 & tmp_8864_fu_6647_p3);

assign and_ln786_fu_1303_p2 = (tmp_8738_fu_1223_p3 & select_ln780_fu_1268_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_start == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_subdone = (1'b0 == ap_ce);
end

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = select_ln340_136_reg_7453;

assign ap_return_1 = select_ln340_137_reg_7458;

assign ap_return_2 = select_ln340_138_reg_7519;

assign ap_return_3 = select_ln340_139_reg_7524;

assign ap_return_4 = select_ln340_140_fu_6626_p3;

assign ap_return_5 = select_ln340_141_fu_6726_p3;

assign data_address1 = data_offset_cast_fu_978_p1;

assign data_offset_cast_fu_978_p1 = data_offset;

assign icmp_ln718_10_fu_3758_p2 = ((trunc_ln718_1088_fu_3754_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_11_fu_3819_p2 = ((trunc_ln718_1089_fu_3815_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_12_fu_4465_p2 = ((trunc_ln718_1090_fu_4461_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_13_fu_4526_p2 = ((trunc_ln718_1091_fu_4522_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_14_fu_5167_p2 = ((trunc_ln718_1092_fu_5163_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_15_fu_5228_p2 = ((trunc_ln718_1093_fu_5224_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_16_fu_5869_p2 = ((trunc_ln718_1094_fu_5865_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_17_fu_5930_p2 = ((trunc_ln718_1095_fu_5926_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_1_fu_1092_p2 = ((trunc_ln718_1079_fu_1088_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_2_fu_1545_p2 = ((trunc_ln718_1080_fu_1541_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_3_fu_1606_p2 = ((trunc_ln718_1081_fu_1602_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_4_fu_2047_p2 = ((trunc_ln718_1082_fu_2043_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_5_fu_2108_p2 = ((trunc_ln718_1083_fu_2104_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_6_fu_2554_p2 = ((trunc_ln718_1084_fu_2550_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_7_fu_2615_p2 = ((trunc_ln718_1085_fu_2611_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_8_fu_3056_p2 = ((trunc_ln718_1086_fu_3052_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_9_fu_3117_p2 = ((trunc_ln718_1087_fu_3113_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln718_fu_1031_p2 = ((trunc_ln718_fu_1027_p1 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_10_fu_3796_p2 = ((Range1_V_1_4_fu_3780_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_11_fu_3857_p2 = ((Range1_V_1_5_fu_3841_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_12_fu_4503_p2 = ((Range1_V_2_fu_4487_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_13_fu_4564_p2 = ((Range1_V_2_1_fu_4548_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_14_fu_5205_p2 = ((Range1_V_2_2_fu_5189_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_15_fu_5266_p2 = ((Range1_V_2_3_fu_5250_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_16_fu_5907_p2 = ((Range1_V_2_4_fu_5891_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_17_fu_5968_p2 = ((Range1_V_2_5_fu_5952_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_1_fu_1130_p2 = ((Range1_V_0_1_fu_1114_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_2_fu_1583_p2 = ((Range1_V_0_2_fu_1567_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_3_fu_1644_p2 = ((Range1_V_0_3_fu_1628_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_4_fu_2085_p2 = ((Range1_V_0_4_fu_2069_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_5_fu_2146_p2 = ((Range1_V_0_5_fu_2130_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_6_fu_2592_p2 = ((Range1_V_1_fu_2576_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_7_fu_2653_p2 = ((Range1_V_1_1_fu_2637_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_8_fu_3094_p2 = ((Range1_V_1_2_fu_3078_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_9_fu_3155_p2 = ((Range1_V_1_3_fu_3139_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_fu_1069_p2 = ((Range1_V_fu_1053_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln874_10_fu_2124_p2 = ((Range2_V_0_5_fu_2114_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_11_fu_2140_p2 = ((Range1_V_0_5_fu_2130_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_12_fu_2570_p2 = ((Range2_V_1_fu_2560_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_13_fu_2586_p2 = ((Range1_V_1_fu_2576_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_14_fu_2631_p2 = ((Range2_V_1_1_fu_2621_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_15_fu_2647_p2 = ((Range1_V_1_1_fu_2637_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_16_fu_3072_p2 = ((Range2_V_1_2_fu_3062_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_17_fu_3088_p2 = ((Range1_V_1_2_fu_3078_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_18_fu_3133_p2 = ((Range2_V_1_3_fu_3123_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_19_fu_3149_p2 = ((Range1_V_1_3_fu_3139_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_1_fu_1063_p2 = ((Range1_V_fu_1053_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_20_fu_3774_p2 = ((Range2_V_1_4_fu_3764_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_21_fu_3790_p2 = ((Range1_V_1_4_fu_3780_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_22_fu_3835_p2 = ((Range2_V_1_5_fu_3825_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_23_fu_3851_p2 = ((Range1_V_1_5_fu_3841_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_24_fu_4481_p2 = ((Range2_V_2_fu_4471_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_25_fu_4497_p2 = ((Range1_V_2_fu_4487_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_26_fu_4542_p2 = ((Range2_V_2_1_fu_4532_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_27_fu_4558_p2 = ((Range1_V_2_1_fu_4548_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_28_fu_5183_p2 = ((Range2_V_2_2_fu_5173_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_29_fu_5199_p2 = ((Range1_V_2_2_fu_5189_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_2_fu_1108_p2 = ((Range2_V_0_1_fu_1098_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_30_fu_5244_p2 = ((Range2_V_2_3_fu_5234_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_31_fu_5260_p2 = ((Range1_V_2_3_fu_5250_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_32_fu_5885_p2 = ((Range2_V_2_4_fu_5875_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_33_fu_5901_p2 = ((Range1_V_2_4_fu_5891_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_34_fu_5946_p2 = ((Range2_V_2_5_fu_5936_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_35_fu_5962_p2 = ((Range1_V_2_5_fu_5952_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_3_fu_1124_p2 = ((Range1_V_0_1_fu_1114_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_4_fu_1561_p2 = ((Range2_V_0_2_fu_1551_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_5_fu_1577_p2 = ((Range1_V_0_2_fu_1567_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_6_fu_1622_p2 = ((Range2_V_0_3_fu_1612_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_7_fu_1638_p2 = ((Range1_V_0_3_fu_1628_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_8_fu_2063_p2 = ((Range2_V_0_4_fu_2053_p4 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln874_9_fu_2079_p2 = ((Range1_V_0_4_fu_2069_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_1047_p2 = ((Range2_V_fu_1037_p4 == 5'd31) ? 1'b1 : 1'b0);

assign mul_ln1118_1079_fu_316_p0 = sext_ln1116_fu_1008_p1;

assign mul_ln1118_1080_fu_306_p0 = sext_ln1116_reg_6814;

assign mul_ln1118_1081_fu_320_p0 = sext_ln1116_reg_6814;

assign mul_ln1118_1082_fu_312_p0 = sext_ln1116_reg_6814;

assign mul_ln1118_1083_fu_305_p0 = sext_ln1116_reg_6814;

assign mul_ln1118_1084_fu_311_p0 = sext_ln1116_1_fu_2532_p1;

assign mul_ln1118_1085_fu_310_p0 = sext_ln1116_1_fu_2532_p1;

assign mul_ln1118_1086_fu_307_p0 = sext_ln1116_1_reg_7071;

assign mul_ln1118_1087_fu_318_p0 = sext_ln1116_1_reg_7071;

assign mul_ln1118_1088_fu_314_p0 = sext_ln1116_1_reg_7071;

assign mul_ln1118_1089_fu_304_p0 = sext_ln1116_1_reg_7071;

assign mul_ln1118_1090_fu_321_p0 = sext_ln1116_2_fu_4443_p1;

assign mul_ln1118_1091_fu_317_p0 = sext_ln1116_2_fu_4443_p1;

assign mul_ln1118_1092_fu_313_p0 = sext_ln1116_2_reg_7301;

assign mul_ln1118_1093_fu_315_p0 = sext_ln1116_2_reg_7301;

assign mul_ln1118_1094_fu_319_p0 = sext_ln1116_2_reg_7301;

assign mul_ln1118_1095_fu_309_p0 = sext_ln1116_2_reg_7301;

assign mul_ln1118_fu_308_p0 = sext_ln1116_fu_1008_p1;

assign or_ln340_10_fu_6604_p2 = (xor_ln340_68_fu_6598_p2 | and_ln785_28_fu_6574_p2);

assign or_ln340_11_fu_6704_p2 = (xor_ln340_70_fu_6698_p2 | and_ln785_29_fu_6674_p2);

assign or_ln340_1_fu_3351_p2 = (xor_ln340_50_fu_3345_p2 | and_ln785_19_fu_3321_p2);

assign or_ln340_2_fu_3953_p2 = (xor_ln340_52_fu_3947_p2 | and_ln785_20_fu_3923_p2);

assign or_ln340_3_fu_4053_p2 = (xor_ln340_54_fu_4047_p2 | and_ln785_21_fu_4023_p2);

assign or_ln340_4_fu_4660_p2 = (xor_ln340_56_fu_4654_p2 | and_ln785_22_fu_4630_p2);

assign or_ln340_5_fu_4760_p2 = (xor_ln340_58_fu_4754_p2 | and_ln785_23_fu_4730_p2);

assign or_ln340_6_fu_5362_p2 = (xor_ln340_60_fu_5356_p2 | and_ln785_24_fu_5332_p2);

assign or_ln340_7_fu_5462_p2 = (xor_ln340_62_fu_5456_p2 | and_ln785_25_fu_5432_p2);

assign or_ln340_8_fu_6044_p2 = (xor_ln340_64_fu_6038_p2 | and_ln785_26_fu_6014_p2);

assign or_ln340_9_fu_6144_p2 = (xor_ln340_66_fu_6138_p2 | and_ln785_27_fu_6114_p2);

assign or_ln340_fu_3251_p2 = (xor_ln340_48_fu_3245_p2 | and_ln785_18_fu_3221_p2);

assign or_ln384_1007_fu_1514_p2 = (and_ln786_2017_fu_1501_p2 | and_ln785_1_fu_1477_p2);

assign or_ln384_1008_fu_1836_p2 = (and_ln786_2019_fu_1823_p2 | and_ln785_2_fu_1799_p2);

assign or_ln384_1009_fu_2016_p2 = (and_ln786_2021_fu_2003_p2 | and_ln785_3_fu_1979_p2);

assign or_ln384_1010_fu_2338_p2 = (and_ln786_2023_fu_2325_p2 | and_ln785_4_fu_2301_p2);

assign or_ln384_1011_fu_2518_p2 = (and_ln786_2025_fu_2505_p2 | and_ln785_5_fu_2481_p2);

assign or_ln384_1012_fu_2845_p2 = (and_ln786_2027_fu_2832_p2 | and_ln785_6_fu_2808_p2);

assign or_ln384_1013_fu_3025_p2 = (and_ln786_2029_fu_3012_p2 | and_ln785_7_fu_2988_p2);

assign or_ln384_1014_fu_3547_p2 = (and_ln786_2031_fu_3534_p2 | and_ln785_8_fu_3510_p2);

assign or_ln384_1015_fu_3727_p2 = (and_ln786_2033_fu_3714_p2 | and_ln785_9_fu_3690_p2);

assign or_ln384_1016_fu_4249_p2 = (and_ln786_2035_fu_4236_p2 | and_ln785_10_fu_4212_p2);

assign or_ln384_1017_fu_4429_p2 = (and_ln786_2037_fu_4416_p2 | and_ln785_11_fu_4392_p2);

assign or_ln384_1018_fu_4956_p2 = (and_ln786_2039_fu_4943_p2 | and_ln785_12_fu_4919_p2);

assign or_ln384_1019_fu_5136_p2 = (and_ln786_2041_fu_5123_p2 | and_ln785_13_fu_5099_p2);

assign or_ln384_1020_fu_5658_p2 = (and_ln786_2043_fu_5645_p2 | and_ln785_14_fu_5621_p2);

assign or_ln384_1021_fu_5838_p2 = (and_ln786_2045_fu_5825_p2 | and_ln785_15_fu_5801_p2);

assign or_ln384_1022_fu_6340_p2 = (and_ln786_2047_fu_6327_p2 | and_ln785_16_fu_6303_p2);

assign or_ln384_1023_fu_6520_p2 = (and_ln786_2049_fu_6507_p2 | and_ln785_17_fu_6483_p2);

assign or_ln384_fu_1334_p2 = (and_ln786_2015_fu_1321_p2 | and_ln785_fu_1297_p2);

assign or_ln412_1151_fu_1382_p2 = (tmp_8741_fu_1358_p3 | icmp_ln718_1_reg_6856);

assign or_ln412_1152_fu_1704_p2 = (tmp_8747_fu_1680_p3 | icmp_ln718_2_reg_6916);

assign or_ln412_1153_fu_1884_p2 = (tmp_8753_fu_1860_p3 | icmp_ln718_3_reg_6944);

assign or_ln412_1154_fu_2206_p2 = (tmp_8759_fu_2182_p3 | icmp_ln718_4_reg_6999);

assign or_ln412_1155_fu_2386_p2 = (tmp_8765_fu_2362_p3 | icmp_ln718_5_reg_7027);

assign or_ln412_1156_fu_2713_p2 = (tmp_8771_fu_2689_p3 | icmp_ln718_6_reg_7085);

assign or_ln412_1157_fu_2893_p2 = (tmp_8777_fu_2869_p3 | icmp_ln718_7_reg_7113);

assign or_ln412_1158_fu_3415_p2 = (tmp_8783_fu_3391_p3 | icmp_ln718_8_reg_7151);

assign or_ln412_1159_fu_3595_p2 = (tmp_8789_fu_3571_p3 | icmp_ln718_9_reg_7179);

assign or_ln412_1160_fu_4117_p2 = (tmp_8795_fu_4093_p3 | icmp_ln718_10_reg_7229);

assign or_ln412_1161_fu_4297_p2 = (tmp_8801_fu_4273_p3 | icmp_ln718_11_reg_7257);

assign or_ln412_1162_fu_4824_p2 = (tmp_8807_fu_4800_p3 | icmp_ln718_12_reg_7315);

assign or_ln412_1163_fu_5004_p2 = (tmp_8813_fu_4980_p3 | icmp_ln718_13_reg_7343);

assign or_ln412_1164_fu_5526_p2 = (tmp_8819_fu_5502_p3 | icmp_ln718_14_reg_7393);

assign or_ln412_1165_fu_5706_p2 = (tmp_8825_fu_5682_p3 | icmp_ln718_15_reg_7421);

assign or_ln412_1166_fu_6208_p2 = (tmp_8831_fu_6184_p3 | icmp_ln718_16_reg_7469);

assign or_ln412_1167_fu_6388_p2 = (tmp_8837_fu_6364_p3 | icmp_ln718_17_reg_7497);

assign or_ln412_fu_1202_p2 = (tmp_8735_fu_1178_p3 | icmp_ln718_reg_6828);

assign or_ln785_1078_fu_1466_p2 = (xor_ln785_2136_fu_1460_p2 | tmp_8744_fu_1403_p3);

assign or_ln785_1079_fu_1788_p2 = (xor_ln785_2138_fu_1782_p2 | tmp_8750_fu_1725_p3);

assign or_ln785_1080_fu_1968_p2 = (xor_ln785_2140_fu_1962_p2 | tmp_8756_fu_1905_p3);

assign or_ln785_1081_fu_2290_p2 = (xor_ln785_2142_fu_2284_p2 | tmp_8762_fu_2227_p3);

assign or_ln785_1082_fu_2470_p2 = (xor_ln785_2144_fu_2464_p2 | tmp_8768_fu_2407_p3);

assign or_ln785_1083_fu_2797_p2 = (xor_ln785_2146_fu_2791_p2 | tmp_8774_fu_2734_p3);

assign or_ln785_1084_fu_2977_p2 = (xor_ln785_2148_fu_2971_p2 | tmp_8780_fu_2914_p3);

assign or_ln785_1085_fu_3499_p2 = (xor_ln785_2150_fu_3493_p2 | tmp_8786_fu_3436_p3);

assign or_ln785_1086_fu_3679_p2 = (xor_ln785_2152_fu_3673_p2 | tmp_8792_fu_3616_p3);

assign or_ln785_1087_fu_4201_p2 = (xor_ln785_2154_fu_4195_p2 | tmp_8798_fu_4138_p3);

assign or_ln785_1088_fu_4381_p2 = (xor_ln785_2156_fu_4375_p2 | tmp_8804_fu_4318_p3);

assign or_ln785_1089_fu_4908_p2 = (xor_ln785_2158_fu_4902_p2 | tmp_8810_fu_4845_p3);

assign or_ln785_1090_fu_5088_p2 = (xor_ln785_2160_fu_5082_p2 | tmp_8816_fu_5025_p3);

assign or_ln785_1091_fu_5610_p2 = (xor_ln785_2162_fu_5604_p2 | tmp_8822_fu_5547_p3);

assign or_ln785_1092_fu_5790_p2 = (xor_ln785_2164_fu_5784_p2 | tmp_8828_fu_5727_p3);

assign or_ln785_1093_fu_6292_p2 = (xor_ln785_2166_fu_6286_p2 | tmp_8834_fu_6229_p3);

assign or_ln785_1094_fu_6472_p2 = (xor_ln785_2168_fu_6466_p2 | tmp_8840_fu_6409_p3);

assign or_ln785_fu_1286_p2 = (xor_ln785_fu_1280_p2 | tmp_8738_fu_1223_p3);

assign or_ln786_1007_fu_1489_p2 = (and_ln786_2016_fu_1483_p2 | and_ln781_1007_fu_1455_p2);

assign or_ln786_1008_fu_1811_p2 = (and_ln786_2018_fu_1805_p2 | and_ln781_1008_fu_1777_p2);

assign or_ln786_1009_fu_1991_p2 = (and_ln786_2020_fu_1985_p2 | and_ln781_1009_fu_1957_p2);

assign or_ln786_1010_fu_2313_p2 = (and_ln786_2022_fu_2307_p2 | and_ln781_1010_fu_2279_p2);

assign or_ln786_1011_fu_2493_p2 = (and_ln786_2024_fu_2487_p2 | and_ln781_1011_fu_2459_p2);

assign or_ln786_1012_fu_2820_p2 = (and_ln786_2026_fu_2814_p2 | and_ln781_1012_fu_2786_p2);

assign or_ln786_1013_fu_3000_p2 = (and_ln786_2028_fu_2994_p2 | and_ln781_1013_fu_2966_p2);

assign or_ln786_1014_fu_3522_p2 = (and_ln786_2030_fu_3516_p2 | and_ln781_1014_fu_3488_p2);

assign or_ln786_1015_fu_3702_p2 = (and_ln786_2032_fu_3696_p2 | and_ln781_1015_fu_3668_p2);

assign or_ln786_1016_fu_4224_p2 = (and_ln786_2034_fu_4218_p2 | and_ln781_1016_fu_4190_p2);

assign or_ln786_1017_fu_4404_p2 = (and_ln786_2036_fu_4398_p2 | and_ln781_1017_fu_4370_p2);

assign or_ln786_1018_fu_4931_p2 = (and_ln786_2038_fu_4925_p2 | and_ln781_1018_fu_4897_p2);

assign or_ln786_1019_fu_5111_p2 = (and_ln786_2040_fu_5105_p2 | and_ln781_1019_fu_5077_p2);

assign or_ln786_1020_fu_5633_p2 = (and_ln786_2042_fu_5627_p2 | and_ln781_1020_fu_5599_p2);

assign or_ln786_1021_fu_5813_p2 = (and_ln786_2044_fu_5807_p2 | and_ln781_1021_fu_5779_p2);

assign or_ln786_1022_fu_6315_p2 = (and_ln786_2046_fu_6309_p2 | and_ln781_1022_fu_6281_p2);

assign or_ln786_1023_fu_6495_p2 = (and_ln786_2048_fu_6489_p2 | and_ln781_1023_fu_6461_p2);

assign or_ln786_fu_1309_p2 = (and_ln786_fu_1303_p2 | and_ln781_fu_1275_p2);

assign select_ln340_119_fu_3357_p3 = ((xor_ln340_49_fu_3339_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_1_fu_3302_p2);

assign select_ln340_120_fu_3959_p3 = ((xor_ln340_51_fu_3941_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_2_fu_3904_p2);

assign select_ln340_121_fu_4059_p3 = ((xor_ln340_53_fu_4041_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_3_fu_4004_p2);

assign select_ln340_122_fu_4666_p3 = ((xor_ln340_55_fu_4648_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_4_fu_4611_p2);

assign select_ln340_123_fu_4766_p3 = ((xor_ln340_57_fu_4748_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_5_fu_4711_p2);

assign select_ln340_124_fu_5368_p3 = ((xor_ln340_59_fu_5350_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_6_fu_5313_p2);

assign select_ln340_125_fu_5468_p3 = ((xor_ln340_61_fu_5450_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_7_fu_5413_p2);

assign select_ln340_126_fu_6050_p3 = ((xor_ln340_63_fu_6032_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_8_fu_5995_p2);

assign select_ln340_127_fu_6150_p3 = ((xor_ln340_65_fu_6132_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_9_fu_6095_p2);

assign select_ln340_128_fu_6610_p3 = ((xor_ln340_67_fu_6592_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_10_fu_6555_p2);

assign select_ln340_129_fu_6710_p3 = ((xor_ln340_69_fu_6692_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_11_fu_6655_p2);

assign select_ln340_130_fu_3273_p3 = ((or_ln340_fu_3251_p2[0:0] === 1'b1) ? select_ln340_fu_3257_p3 : select_ln388_fu_3265_p3);

assign select_ln340_131_fu_3373_p3 = ((or_ln340_1_fu_3351_p2[0:0] === 1'b1) ? select_ln340_119_fu_3357_p3 : select_ln388_1_fu_3365_p3);

assign select_ln340_132_fu_3975_p3 = ((or_ln340_2_fu_3953_p2[0:0] === 1'b1) ? select_ln340_120_fu_3959_p3 : select_ln388_2_fu_3967_p3);

assign select_ln340_133_fu_4075_p3 = ((or_ln340_3_fu_4053_p2[0:0] === 1'b1) ? select_ln340_121_fu_4059_p3 : select_ln388_3_fu_4067_p3);

assign select_ln340_134_fu_4682_p3 = ((or_ln340_4_fu_4660_p2[0:0] === 1'b1) ? select_ln340_122_fu_4666_p3 : select_ln388_4_fu_4674_p3);

assign select_ln340_135_fu_4782_p3 = ((or_ln340_5_fu_4760_p2[0:0] === 1'b1) ? select_ln340_123_fu_4766_p3 : select_ln388_5_fu_4774_p3);

assign select_ln340_136_fu_5384_p3 = ((or_ln340_6_fu_5362_p2[0:0] === 1'b1) ? select_ln340_124_fu_5368_p3 : select_ln388_6_fu_5376_p3);

assign select_ln340_137_fu_5484_p3 = ((or_ln340_7_fu_5462_p2[0:0] === 1'b1) ? select_ln340_125_fu_5468_p3 : select_ln388_7_fu_5476_p3);

assign select_ln340_138_fu_6066_p3 = ((or_ln340_8_fu_6044_p2[0:0] === 1'b1) ? select_ln340_126_fu_6050_p3 : select_ln388_8_fu_6058_p3);

assign select_ln340_139_fu_6166_p3 = ((or_ln340_9_fu_6144_p2[0:0] === 1'b1) ? select_ln340_127_fu_6150_p3 : select_ln388_9_fu_6158_p3);

assign select_ln340_140_fu_6626_p3 = ((or_ln340_10_fu_6604_p2[0:0] === 1'b1) ? select_ln340_128_fu_6610_p3 : select_ln388_10_fu_6618_p3);

assign select_ln340_141_fu_6726_p3 = ((or_ln340_11_fu_6704_p2[0:0] === 1'b1) ? select_ln340_129_fu_6710_p3 : select_ln388_11_fu_6718_p3);

assign select_ln340_fu_3257_p3 = ((xor_ln340_fu_3239_p2[0:0] === 1'b1) ? 16'd32767 : add_ln703_fu_3202_p2);

assign select_ln384_1919_fu_1340_p3 = ((or_ln384_fu_1334_p2[0:0] === 1'b1) ? select_ln384_fu_1326_p3 : add_ln415_fu_1217_p2);

assign select_ln384_1920_fu_1506_p3 = ((and_ln785_1_fu_1477_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1921_fu_1520_p3 = ((or_ln384_1007_fu_1514_p2[0:0] === 1'b1) ? select_ln384_1920_fu_1506_p3 : add_ln415_1008_fu_1397_p2);

assign select_ln384_1922_fu_1828_p3 = ((and_ln785_2_fu_1799_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1923_fu_1842_p3 = ((or_ln384_1008_fu_1836_p2[0:0] === 1'b1) ? select_ln384_1922_fu_1828_p3 : add_ln415_1009_fu_1719_p2);

assign select_ln384_1924_fu_2008_p3 = ((and_ln785_3_fu_1979_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1925_fu_2022_p3 = ((or_ln384_1009_fu_2016_p2[0:0] === 1'b1) ? select_ln384_1924_fu_2008_p3 : add_ln415_1010_fu_1899_p2);

assign select_ln384_1926_fu_2330_p3 = ((and_ln785_4_fu_2301_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1927_fu_2344_p3 = ((or_ln384_1010_fu_2338_p2[0:0] === 1'b1) ? select_ln384_1926_fu_2330_p3 : add_ln415_1011_fu_2221_p2);

assign select_ln384_1928_fu_2510_p3 = ((and_ln785_5_fu_2481_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1929_fu_2524_p3 = ((or_ln384_1011_fu_2518_p2[0:0] === 1'b1) ? select_ln384_1928_fu_2510_p3 : add_ln415_1012_fu_2401_p2);

assign select_ln384_1930_fu_2837_p3 = ((and_ln785_6_fu_2808_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1931_fu_2851_p3 = ((or_ln384_1012_fu_2845_p2[0:0] === 1'b1) ? select_ln384_1930_fu_2837_p3 : add_ln415_1013_fu_2728_p2);

assign select_ln384_1932_fu_3017_p3 = ((and_ln785_7_fu_2988_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1933_fu_3031_p3 = ((or_ln384_1013_fu_3025_p2[0:0] === 1'b1) ? select_ln384_1932_fu_3017_p3 : add_ln415_1014_fu_2908_p2);

assign select_ln384_1934_fu_3539_p3 = ((and_ln785_8_fu_3510_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1935_fu_3553_p3 = ((or_ln384_1014_fu_3547_p2[0:0] === 1'b1) ? select_ln384_1934_fu_3539_p3 : add_ln415_1015_fu_3430_p2);

assign select_ln384_1936_fu_3719_p3 = ((and_ln785_9_fu_3690_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1937_fu_3733_p3 = ((or_ln384_1015_fu_3727_p2[0:0] === 1'b1) ? select_ln384_1936_fu_3719_p3 : add_ln415_1016_fu_3610_p2);

assign select_ln384_1938_fu_4241_p3 = ((and_ln785_10_fu_4212_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1939_fu_4255_p3 = ((or_ln384_1016_fu_4249_p2[0:0] === 1'b1) ? select_ln384_1938_fu_4241_p3 : add_ln415_1017_fu_4132_p2);

assign select_ln384_1940_fu_4421_p3 = ((and_ln785_11_fu_4392_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1941_fu_4435_p3 = ((or_ln384_1017_fu_4429_p2[0:0] === 1'b1) ? select_ln384_1940_fu_4421_p3 : add_ln415_1018_fu_4312_p2);

assign select_ln384_1942_fu_4948_p3 = ((and_ln785_12_fu_4919_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1943_fu_4962_p3 = ((or_ln384_1018_fu_4956_p2[0:0] === 1'b1) ? select_ln384_1942_fu_4948_p3 : add_ln415_1019_fu_4839_p2);

assign select_ln384_1944_fu_5128_p3 = ((and_ln785_13_fu_5099_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1945_fu_5142_p3 = ((or_ln384_1019_fu_5136_p2[0:0] === 1'b1) ? select_ln384_1944_fu_5128_p3 : add_ln415_1020_fu_5019_p2);

assign select_ln384_1946_fu_5650_p3 = ((and_ln785_14_fu_5621_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1947_fu_5664_p3 = ((or_ln384_1020_fu_5658_p2[0:0] === 1'b1) ? select_ln384_1946_fu_5650_p3 : add_ln415_1021_fu_5541_p2);

assign select_ln384_1948_fu_5830_p3 = ((and_ln785_15_fu_5801_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1949_fu_5844_p3 = ((or_ln384_1021_fu_5838_p2[0:0] === 1'b1) ? select_ln384_1948_fu_5830_p3 : add_ln415_1022_fu_5721_p2);

assign select_ln384_1950_fu_6332_p3 = ((and_ln785_16_fu_6303_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1951_fu_6346_p3 = ((or_ln384_1022_fu_6340_p2[0:0] === 1'b1) ? select_ln384_1950_fu_6332_p3 : add_ln415_1023_fu_6223_p2);

assign select_ln384_1952_fu_6512_p3 = ((and_ln785_17_fu_6483_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_1953_fu_6526_p3 = ((or_ln384_1023_fu_6520_p2[0:0] === 1'b1) ? select_ln384_1952_fu_6512_p3 : add_ln415_1024_fu_6403_p2);

assign select_ln384_fu_1326_p3 = ((and_ln785_fu_1297_p2[0:0] === 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln388_10_fu_6618_p3 = ((and_ln786_2060_fu_6586_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_10_fu_6555_p2);

assign select_ln388_11_fu_6718_p3 = ((and_ln786_2061_fu_6686_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_11_fu_6655_p2);

assign select_ln388_1_fu_3365_p3 = ((and_ln786_2051_fu_3333_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_1_fu_3302_p2);

assign select_ln388_2_fu_3967_p3 = ((and_ln786_2052_fu_3935_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_2_fu_3904_p2);

assign select_ln388_3_fu_4067_p3 = ((and_ln786_2053_fu_4035_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_3_fu_4004_p2);

assign select_ln388_4_fu_4674_p3 = ((and_ln786_2054_fu_4642_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_4_fu_4611_p2);

assign select_ln388_5_fu_4774_p3 = ((and_ln786_2055_fu_4742_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_5_fu_4711_p2);

assign select_ln388_6_fu_5376_p3 = ((and_ln786_2056_fu_5344_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_6_fu_5313_p2);

assign select_ln388_7_fu_5476_p3 = ((and_ln786_2057_fu_5444_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_7_fu_5413_p2);

assign select_ln388_8_fu_6058_p3 = ((and_ln786_2058_fu_6026_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_8_fu_5995_p2);

assign select_ln388_9_fu_6158_p3 = ((and_ln786_2059_fu_6126_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_9_fu_6095_p2);

assign select_ln388_fu_3265_p3 = ((and_ln786_2050_fu_3233_p2[0:0] === 1'b1) ? 16'd32768 : add_ln703_fu_3202_p2);

assign select_ln778_10_fu_4158_p3 = ((and_ln416_10_fu_4152_p2[0:0] === 1'b1) ? icmp_ln874_21_reg_7239 : icmp_ln768_10_reg_7246);

assign select_ln778_11_fu_4338_p3 = ((and_ln416_11_fu_4332_p2[0:0] === 1'b1) ? icmp_ln874_23_reg_7267 : icmp_ln768_11_reg_7274);

assign select_ln778_12_fu_4865_p3 = ((and_ln416_12_fu_4859_p2[0:0] === 1'b1) ? icmp_ln874_25_reg_7325 : icmp_ln768_12_reg_7332);

assign select_ln778_13_fu_5045_p3 = ((and_ln416_13_fu_5039_p2[0:0] === 1'b1) ? icmp_ln874_27_reg_7353 : icmp_ln768_13_reg_7360);

assign select_ln778_14_fu_5567_p3 = ((and_ln416_14_fu_5561_p2[0:0] === 1'b1) ? icmp_ln874_29_reg_7403 : icmp_ln768_14_reg_7410);

assign select_ln778_15_fu_5747_p3 = ((and_ln416_15_fu_5741_p2[0:0] === 1'b1) ? icmp_ln874_31_reg_7431 : icmp_ln768_15_reg_7438);

assign select_ln778_16_fu_6249_p3 = ((and_ln416_16_fu_6243_p2[0:0] === 1'b1) ? icmp_ln874_33_reg_7479 : icmp_ln768_16_reg_7486);

assign select_ln778_17_fu_6429_p3 = ((and_ln416_17_fu_6423_p2[0:0] === 1'b1) ? icmp_ln874_35_reg_7507 : icmp_ln768_17_reg_7514);

assign select_ln778_1_fu_1423_p3 = ((and_ln416_1_fu_1417_p2[0:0] === 1'b1) ? icmp_ln874_3_reg_6866 : icmp_ln768_1_reg_6873);

assign select_ln778_2_fu_1745_p3 = ((and_ln416_2_fu_1739_p2[0:0] === 1'b1) ? icmp_ln874_5_reg_6926 : icmp_ln768_2_reg_6933);

assign select_ln778_3_fu_1925_p3 = ((and_ln416_3_fu_1919_p2[0:0] === 1'b1) ? icmp_ln874_7_reg_6954 : icmp_ln768_3_reg_6961);

assign select_ln778_4_fu_2247_p3 = ((and_ln416_4_fu_2241_p2[0:0] === 1'b1) ? icmp_ln874_9_reg_7009 : icmp_ln768_4_reg_7016);

assign select_ln778_5_fu_2427_p3 = ((and_ln416_5_fu_2421_p2[0:0] === 1'b1) ? icmp_ln874_11_reg_7037 : icmp_ln768_5_reg_7044);

assign select_ln778_6_fu_2754_p3 = ((and_ln416_6_fu_2748_p2[0:0] === 1'b1) ? icmp_ln874_13_reg_7095 : icmp_ln768_6_reg_7102);

assign select_ln778_7_fu_2934_p3 = ((and_ln416_7_fu_2928_p2[0:0] === 1'b1) ? icmp_ln874_15_reg_7123 : icmp_ln768_7_reg_7130);

assign select_ln778_8_fu_3456_p3 = ((and_ln416_8_fu_3450_p2[0:0] === 1'b1) ? icmp_ln874_17_reg_7161 : icmp_ln768_8_reg_7168);

assign select_ln778_9_fu_3636_p3 = ((and_ln416_9_fu_3630_p2[0:0] === 1'b1) ? icmp_ln874_19_reg_7189 : icmp_ln768_9_reg_7196);

assign select_ln778_fu_1243_p3 = ((and_ln416_fu_1237_p2[0:0] === 1'b1) ? icmp_ln874_1_reg_6838 : icmp_ln768_reg_6845);

assign select_ln780_10_fu_4183_p3 = ((and_ln416_10_fu_4152_p2[0:0] === 1'b1) ? and_ln780_1016_fu_4178_p2 : icmp_ln874_21_reg_7239);

assign select_ln780_11_fu_4363_p3 = ((and_ln416_11_fu_4332_p2[0:0] === 1'b1) ? and_ln780_1017_fu_4358_p2 : icmp_ln874_23_reg_7267);

assign select_ln780_12_fu_4890_p3 = ((and_ln416_12_fu_4859_p2[0:0] === 1'b1) ? and_ln780_1018_fu_4885_p2 : icmp_ln874_25_reg_7325);

assign select_ln780_13_fu_5070_p3 = ((and_ln416_13_fu_5039_p2[0:0] === 1'b1) ? and_ln780_1019_fu_5065_p2 : icmp_ln874_27_reg_7353);

assign select_ln780_14_fu_5592_p3 = ((and_ln416_14_fu_5561_p2[0:0] === 1'b1) ? and_ln780_1020_fu_5587_p2 : icmp_ln874_29_reg_7403);

assign select_ln780_15_fu_5772_p3 = ((and_ln416_15_fu_5741_p2[0:0] === 1'b1) ? and_ln780_1021_fu_5767_p2 : icmp_ln874_31_reg_7431);

assign select_ln780_16_fu_6274_p3 = ((and_ln416_16_fu_6243_p2[0:0] === 1'b1) ? and_ln780_1022_fu_6269_p2 : icmp_ln874_33_reg_7479);

assign select_ln780_17_fu_6454_p3 = ((and_ln416_17_fu_6423_p2[0:0] === 1'b1) ? and_ln780_1023_fu_6449_p2 : icmp_ln874_35_reg_7507);

assign select_ln780_1_fu_1448_p3 = ((and_ln416_1_fu_1417_p2[0:0] === 1'b1) ? and_ln780_1007_fu_1443_p2 : icmp_ln874_3_reg_6866);

assign select_ln780_2_fu_1770_p3 = ((and_ln416_2_fu_1739_p2[0:0] === 1'b1) ? and_ln780_1008_fu_1765_p2 : icmp_ln874_5_reg_6926);

assign select_ln780_3_fu_1950_p3 = ((and_ln416_3_fu_1919_p2[0:0] === 1'b1) ? and_ln780_1009_fu_1945_p2 : icmp_ln874_7_reg_6954);

assign select_ln780_4_fu_2272_p3 = ((and_ln416_4_fu_2241_p2[0:0] === 1'b1) ? and_ln780_1010_fu_2267_p2 : icmp_ln874_9_reg_7009);

assign select_ln780_5_fu_2452_p3 = ((and_ln416_5_fu_2421_p2[0:0] === 1'b1) ? and_ln780_1011_fu_2447_p2 : icmp_ln874_11_reg_7037);

assign select_ln780_6_fu_2779_p3 = ((and_ln416_6_fu_2748_p2[0:0] === 1'b1) ? and_ln780_1012_fu_2774_p2 : icmp_ln874_13_reg_7095);

assign select_ln780_7_fu_2959_p3 = ((and_ln416_7_fu_2928_p2[0:0] === 1'b1) ? and_ln780_1013_fu_2954_p2 : icmp_ln874_15_reg_7123);

assign select_ln780_8_fu_3481_p3 = ((and_ln416_8_fu_3450_p2[0:0] === 1'b1) ? and_ln780_1014_fu_3476_p2 : icmp_ln874_17_reg_7161);

assign select_ln780_9_fu_3661_p3 = ((and_ln416_9_fu_3630_p2[0:0] === 1'b1) ? and_ln780_1015_fu_3656_p2 : icmp_ln874_19_reg_7189);

assign select_ln780_fu_1268_p3 = ((and_ln416_fu_1237_p2[0:0] === 1'b1) ? and_ln780_fu_1263_p2 : icmp_ln874_1_reg_6838);

assign sext_ln1116_1_fu_2532_p1 = $signed(data_load_144_reg_6888);

assign sext_ln1116_2_fu_4443_p1 = $signed(data_load_145_reg_6976);

assign sext_ln1116_fu_1008_p1 = $signed(data_q1);

assign sext_ln703_815_fu_3184_p1 = select_ln384_1931_fu_2851_p3;

assign sext_ln703_816_fu_3281_p1 = select_ln384_1921_reg_6904;

assign sext_ln703_817_fu_3284_p1 = select_ln384_1933_fu_3031_p3;

assign sext_ln703_818_fu_3883_p1 = select_ln384_1923_reg_6981;

assign sext_ln703_819_fu_3886_p1 = select_ln384_1935_fu_3553_p3;

assign sext_ln703_820_fu_3983_p1 = select_ln384_1925_reg_6987;

assign sext_ln703_821_fu_3986_p1 = select_ln384_1937_fu_3733_p3;

assign sext_ln703_822_fu_4590_p1 = select_ln384_1927_reg_7059;

assign sext_ln703_823_fu_4593_p1 = select_ln384_1939_fu_4255_p3;

assign sext_ln703_824_fu_4690_p1 = select_ln384_1929_reg_7065;

assign sext_ln703_825_fu_4693_p1 = select_ln384_1941_fu_4435_p3;

assign sext_ln703_826_fu_5292_p1 = select_ln340_130_reg_7211;

assign sext_ln703_827_fu_5295_p1 = select_ln384_1943_fu_4962_p3;

assign sext_ln703_828_fu_5392_p1 = select_ln340_131_reg_7217;

assign sext_ln703_829_fu_5395_p1 = select_ln384_1945_fu_5142_p3;

assign sext_ln703_830_fu_5974_p1 = select_ln340_132_reg_7289;

assign sext_ln703_831_fu_5977_p1 = select_ln384_1947_fu_5664_p3;

assign sext_ln703_832_fu_6074_p1 = select_ln340_133_reg_7295;

assign sext_ln703_833_fu_6077_p1 = select_ln384_1949_fu_5844_p3;

assign sext_ln703_834_fu_6534_p1 = select_ln340_134_reg_7375;

assign sext_ln703_835_fu_6537_p1 = select_ln384_1951_fu_6346_p3;

assign sext_ln703_836_fu_6634_p1 = select_ln340_135_reg_7381;

assign sext_ln703_837_fu_6637_p1 = select_ln384_1953_fu_6526_p3;

assign sext_ln703_fu_3181_p1 = select_ln384_1919_reg_6898;

assign tmp_8735_fu_1178_p3 = reg_436[32'd10];

assign tmp_8736_fu_1186_p3 = reg_436[32'd9];

assign tmp_8737_fu_1194_p3 = reg_436[32'd25];

assign tmp_8738_fu_1223_p3 = add_ln415_fu_1217_p2[32'd15];

assign tmp_8739_fu_1249_p3 = reg_436[32'd26];

assign tmp_8741_fu_1358_p3 = reg_440[32'd10];

assign tmp_8742_fu_1366_p3 = reg_440[32'd9];

assign tmp_8743_fu_1374_p3 = reg_440[32'd25];

assign tmp_8744_fu_1403_p3 = add_ln415_1008_fu_1397_p2[32'd15];

assign tmp_8745_fu_1429_p3 = reg_440[32'd26];

assign tmp_8747_fu_1680_p3 = reg_436[32'd10];

assign tmp_8748_fu_1688_p3 = reg_436[32'd9];

assign tmp_8749_fu_1696_p3 = reg_436[32'd25];

assign tmp_8750_fu_1725_p3 = add_ln415_1009_fu_1719_p2[32'd15];

assign tmp_8751_fu_1751_p3 = reg_436[32'd26];

assign tmp_8753_fu_1860_p3 = reg_440[32'd10];

assign tmp_8754_fu_1868_p3 = reg_440[32'd9];

assign tmp_8755_fu_1876_p3 = reg_440[32'd25];

assign tmp_8756_fu_1905_p3 = add_ln415_1010_fu_1899_p2[32'd15];

assign tmp_8757_fu_1931_p3 = reg_440[32'd26];

assign tmp_8759_fu_2182_p3 = reg_436[32'd10];

assign tmp_8760_fu_2190_p3 = reg_436[32'd9];

assign tmp_8761_fu_2198_p3 = reg_436[32'd25];

assign tmp_8762_fu_2227_p3 = add_ln415_1011_fu_2221_p2[32'd15];

assign tmp_8763_fu_2253_p3 = reg_436[32'd26];

assign tmp_8765_fu_2362_p3 = reg_440[32'd10];

assign tmp_8766_fu_2370_p3 = reg_440[32'd9];

assign tmp_8767_fu_2378_p3 = reg_440[32'd25];

assign tmp_8768_fu_2407_p3 = add_ln415_1012_fu_2401_p2[32'd15];

assign tmp_8769_fu_2433_p3 = reg_440[32'd26];

assign tmp_8771_fu_2689_p3 = reg_436[32'd10];

assign tmp_8772_fu_2697_p3 = reg_436[32'd9];

assign tmp_8773_fu_2705_p3 = reg_436[32'd25];

assign tmp_8774_fu_2734_p3 = add_ln415_1013_fu_2728_p2[32'd15];

assign tmp_8775_fu_2760_p3 = reg_436[32'd26];

assign tmp_8777_fu_2869_p3 = reg_440[32'd10];

assign tmp_8778_fu_2877_p3 = reg_440[32'd9];

assign tmp_8779_fu_2885_p3 = reg_440[32'd25];

assign tmp_8780_fu_2914_p3 = add_ln415_1014_fu_2908_p2[32'd15];

assign tmp_8781_fu_2940_p3 = reg_440[32'd26];

assign tmp_8783_fu_3391_p3 = reg_436[32'd10];

assign tmp_8784_fu_3399_p3 = reg_436[32'd9];

assign tmp_8785_fu_3407_p3 = reg_436[32'd25];

assign tmp_8786_fu_3436_p3 = add_ln415_1015_fu_3430_p2[32'd15];

assign tmp_8787_fu_3462_p3 = reg_436[32'd26];

assign tmp_8789_fu_3571_p3 = reg_440[32'd10];

assign tmp_8790_fu_3579_p3 = reg_440[32'd9];

assign tmp_8791_fu_3587_p3 = reg_440[32'd25];

assign tmp_8792_fu_3616_p3 = add_ln415_1016_fu_3610_p2[32'd15];

assign tmp_8793_fu_3642_p3 = reg_440[32'd26];

assign tmp_8795_fu_4093_p3 = reg_436[32'd10];

assign tmp_8796_fu_4101_p3 = reg_436[32'd9];

assign tmp_8797_fu_4109_p3 = reg_436[32'd25];

assign tmp_8798_fu_4138_p3 = add_ln415_1017_fu_4132_p2[32'd15];

assign tmp_8799_fu_4164_p3 = reg_436[32'd26];

assign tmp_8801_fu_4273_p3 = reg_440[32'd10];

assign tmp_8802_fu_4281_p3 = reg_440[32'd9];

assign tmp_8803_fu_4289_p3 = reg_440[32'd25];

assign tmp_8804_fu_4318_p3 = add_ln415_1018_fu_4312_p2[32'd15];

assign tmp_8805_fu_4344_p3 = reg_440[32'd26];

assign tmp_8807_fu_4800_p3 = reg_436[32'd10];

assign tmp_8808_fu_4808_p3 = reg_436[32'd9];

assign tmp_8809_fu_4816_p3 = reg_436[32'd25];

assign tmp_8810_fu_4845_p3 = add_ln415_1019_fu_4839_p2[32'd15];

assign tmp_8811_fu_4871_p3 = reg_436[32'd26];

assign tmp_8813_fu_4980_p3 = reg_440[32'd10];

assign tmp_8814_fu_4988_p3 = reg_440[32'd9];

assign tmp_8815_fu_4996_p3 = reg_440[32'd25];

assign tmp_8816_fu_5025_p3 = add_ln415_1020_fu_5019_p2[32'd15];

assign tmp_8817_fu_5051_p3 = reg_440[32'd26];

assign tmp_8819_fu_5502_p3 = reg_436[32'd10];

assign tmp_8820_fu_5510_p3 = reg_436[32'd9];

assign tmp_8821_fu_5518_p3 = reg_436[32'd25];

assign tmp_8822_fu_5547_p3 = add_ln415_1021_fu_5541_p2[32'd15];

assign tmp_8823_fu_5573_p3 = reg_436[32'd26];

assign tmp_8825_fu_5682_p3 = reg_440[32'd10];

assign tmp_8826_fu_5690_p3 = reg_440[32'd9];

assign tmp_8827_fu_5698_p3 = reg_440[32'd25];

assign tmp_8828_fu_5727_p3 = add_ln415_1022_fu_5721_p2[32'd15];

assign tmp_8829_fu_5753_p3 = reg_440[32'd26];

assign tmp_8831_fu_6184_p3 = reg_436[32'd10];

assign tmp_8832_fu_6192_p3 = reg_436[32'd9];

assign tmp_8833_fu_6200_p3 = reg_436[32'd25];

assign tmp_8834_fu_6229_p3 = add_ln415_1023_fu_6223_p2[32'd15];

assign tmp_8835_fu_6255_p3 = reg_436[32'd26];

assign tmp_8837_fu_6364_p3 = reg_440[32'd10];

assign tmp_8838_fu_6372_p3 = reg_440[32'd9];

assign tmp_8839_fu_6380_p3 = reg_440[32'd25];

assign tmp_8840_fu_6409_p3 = add_ln415_1024_fu_6403_p2[32'd15];

assign tmp_8841_fu_6435_p3 = reg_440[32'd26];

assign tmp_8842_fu_3194_p3 = add_ln1192_fu_3188_p2[32'd16];

assign tmp_8843_fu_3207_p3 = add_ln703_fu_3202_p2[32'd15];

assign tmp_8844_fu_3294_p3 = add_ln1192_1_fu_3288_p2[32'd16];

assign tmp_8845_fu_3307_p3 = add_ln703_1_fu_3302_p2[32'd15];

assign tmp_8846_fu_3896_p3 = add_ln1192_2_fu_3890_p2[32'd16];

assign tmp_8847_fu_3909_p3 = add_ln703_2_fu_3904_p2[32'd15];

assign tmp_8848_fu_3996_p3 = add_ln1192_3_fu_3990_p2[32'd16];

assign tmp_8849_fu_4009_p3 = add_ln703_3_fu_4004_p2[32'd15];

assign tmp_8850_fu_4603_p3 = add_ln1192_4_fu_4597_p2[32'd16];

assign tmp_8851_fu_4616_p3 = add_ln703_4_fu_4611_p2[32'd15];

assign tmp_8852_fu_4703_p3 = add_ln1192_5_fu_4697_p2[32'd16];

assign tmp_8853_fu_4716_p3 = add_ln703_5_fu_4711_p2[32'd15];

assign tmp_8854_fu_5305_p3 = add_ln1192_6_fu_5299_p2[32'd16];

assign tmp_8855_fu_5318_p3 = add_ln703_6_fu_5313_p2[32'd15];

assign tmp_8856_fu_5405_p3 = add_ln1192_7_fu_5399_p2[32'd16];

assign tmp_8857_fu_5418_p3 = add_ln703_7_fu_5413_p2[32'd15];

assign tmp_8858_fu_5987_p3 = add_ln1192_8_fu_5981_p2[32'd16];

assign tmp_8859_fu_6000_p3 = add_ln703_8_fu_5995_p2[32'd15];

assign tmp_8860_fu_6087_p3 = add_ln1192_9_fu_6081_p2[32'd16];

assign tmp_8861_fu_6100_p3 = add_ln703_9_fu_6095_p2[32'd15];

assign tmp_8862_fu_6547_p3 = add_ln1192_10_fu_6541_p2[32'd16];

assign tmp_8863_fu_6560_p3 = add_ln703_10_fu_6555_p2[32'd15];

assign tmp_8864_fu_6647_p3 = add_ln1192_11_fu_6641_p2[32'd16];

assign tmp_8865_fu_6660_p3 = add_ln703_11_fu_6655_p2[32'd15];

assign trunc_ln708_10_fu_4263_p4 = {{reg_440[25:10]}};

assign trunc_ln708_11_fu_4790_p4 = {{reg_436[25:10]}};

assign trunc_ln708_12_fu_4970_p4 = {{reg_440[25:10]}};

assign trunc_ln708_13_fu_5492_p4 = {{reg_436[25:10]}};

assign trunc_ln708_14_fu_5672_p4 = {{reg_440[25:10]}};

assign trunc_ln708_15_fu_6174_p4 = {{reg_436[25:10]}};

assign trunc_ln708_16_fu_6354_p4 = {{reg_440[25:10]}};

assign trunc_ln708_1_fu_1348_p4 = {{reg_440[25:10]}};

assign trunc_ln708_2_fu_1670_p4 = {{reg_436[25:10]}};

assign trunc_ln708_3_fu_1850_p4 = {{reg_440[25:10]}};

assign trunc_ln708_4_fu_2172_p4 = {{reg_436[25:10]}};

assign trunc_ln708_5_fu_2352_p4 = {{reg_440[25:10]}};

assign trunc_ln708_6_fu_2679_p4 = {{reg_436[25:10]}};

assign trunc_ln708_7_fu_2859_p4 = {{reg_440[25:10]}};

assign trunc_ln708_8_fu_3381_p4 = {{reg_436[25:10]}};

assign trunc_ln708_9_fu_3561_p4 = {{reg_440[25:10]}};

assign trunc_ln708_s_fu_4083_p4 = {{reg_436[25:10]}};

assign trunc_ln718_1079_fu_1088_p1 = mul_ln1118_1079_fu_316_p2[8:0];

assign trunc_ln718_1080_fu_1541_p1 = mul_ln1118_1080_fu_306_p2[8:0];

assign trunc_ln718_1081_fu_1602_p1 = mul_ln1118_1081_fu_320_p2[8:0];

assign trunc_ln718_1082_fu_2043_p1 = mul_ln1118_1082_fu_312_p2[8:0];

assign trunc_ln718_1083_fu_2104_p1 = mul_ln1118_1083_fu_305_p2[8:0];

assign trunc_ln718_1084_fu_2550_p1 = mul_ln1118_1084_fu_311_p2[8:0];

assign trunc_ln718_1085_fu_2611_p1 = mul_ln1118_1085_fu_310_p2[8:0];

assign trunc_ln718_1086_fu_3052_p1 = mul_ln1118_1086_fu_307_p2[8:0];

assign trunc_ln718_1087_fu_3113_p1 = mul_ln1118_1087_fu_318_p2[8:0];

assign trunc_ln718_1088_fu_3754_p1 = mul_ln1118_1088_fu_314_p2[8:0];

assign trunc_ln718_1089_fu_3815_p1 = mul_ln1118_1089_fu_304_p2[8:0];

assign trunc_ln718_1090_fu_4461_p1 = mul_ln1118_1090_fu_321_p2[8:0];

assign trunc_ln718_1091_fu_4522_p1 = mul_ln1118_1091_fu_317_p2[8:0];

assign trunc_ln718_1092_fu_5163_p1 = mul_ln1118_1092_fu_313_p2[8:0];

assign trunc_ln718_1093_fu_5224_p1 = mul_ln1118_1093_fu_315_p2[8:0];

assign trunc_ln718_1094_fu_5865_p1 = mul_ln1118_1094_fu_319_p2[8:0];

assign trunc_ln718_1095_fu_5926_p1 = mul_ln1118_1095_fu_309_p2[8:0];

assign trunc_ln718_fu_1027_p1 = mul_ln1118_fu_308_p2[8:0];

assign trunc_ln7_fu_1168_p4 = {{reg_436[25:10]}};

assign weights_offset_cast37_fu_973_p1 = weights_offset;

assign weights_offset_cast_fu_1005_p1 = weights_offset_read_reg_6766;

assign xor_ln340_48_fu_3245_p2 = (xor_ln340_fu_3239_p2 ^ 1'd1);

assign xor_ln340_49_fu_3339_p2 = (tmp_8845_fu_3307_p3 ^ tmp_8844_fu_3294_p3);

assign xor_ln340_50_fu_3345_p2 = (xor_ln340_49_fu_3339_p2 ^ 1'd1);

assign xor_ln340_51_fu_3941_p2 = (tmp_8847_fu_3909_p3 ^ tmp_8846_fu_3896_p3);

assign xor_ln340_52_fu_3947_p2 = (xor_ln340_51_fu_3941_p2 ^ 1'd1);

assign xor_ln340_53_fu_4041_p2 = (tmp_8849_fu_4009_p3 ^ tmp_8848_fu_3996_p3);

assign xor_ln340_54_fu_4047_p2 = (xor_ln340_53_fu_4041_p2 ^ 1'd1);

assign xor_ln340_55_fu_4648_p2 = (tmp_8851_fu_4616_p3 ^ tmp_8850_fu_4603_p3);

assign xor_ln340_56_fu_4654_p2 = (xor_ln340_55_fu_4648_p2 ^ 1'd1);

assign xor_ln340_57_fu_4748_p2 = (tmp_8853_fu_4716_p3 ^ tmp_8852_fu_4703_p3);

assign xor_ln340_58_fu_4754_p2 = (xor_ln340_57_fu_4748_p2 ^ 1'd1);

assign xor_ln340_59_fu_5350_p2 = (tmp_8855_fu_5318_p3 ^ tmp_8854_fu_5305_p3);

assign xor_ln340_60_fu_5356_p2 = (xor_ln340_59_fu_5350_p2 ^ 1'd1);

assign xor_ln340_61_fu_5450_p2 = (tmp_8857_fu_5418_p3 ^ tmp_8856_fu_5405_p3);

assign xor_ln340_62_fu_5456_p2 = (xor_ln340_61_fu_5450_p2 ^ 1'd1);

assign xor_ln340_63_fu_6032_p2 = (tmp_8859_fu_6000_p3 ^ tmp_8858_fu_5987_p3);

assign xor_ln340_64_fu_6038_p2 = (xor_ln340_63_fu_6032_p2 ^ 1'd1);

assign xor_ln340_65_fu_6132_p2 = (tmp_8861_fu_6100_p3 ^ tmp_8860_fu_6087_p3);

assign xor_ln340_66_fu_6138_p2 = (xor_ln340_65_fu_6132_p2 ^ 1'd1);

assign xor_ln340_67_fu_6592_p2 = (tmp_8863_fu_6560_p3 ^ tmp_8862_fu_6547_p3);

assign xor_ln340_68_fu_6598_p2 = (xor_ln340_67_fu_6592_p2 ^ 1'd1);

assign xor_ln340_69_fu_6692_p2 = (tmp_8865_fu_6660_p3 ^ tmp_8864_fu_6647_p3);

assign xor_ln340_70_fu_6698_p2 = (xor_ln340_69_fu_6692_p2 ^ 1'd1);

assign xor_ln340_fu_3239_p2 = (tmp_8843_fu_3207_p3 ^ tmp_8842_fu_3194_p3);

assign xor_ln416_1079_fu_1411_p2 = (tmp_8744_fu_1403_p3 ^ 1'd1);

assign xor_ln416_1080_fu_1733_p2 = (tmp_8750_fu_1725_p3 ^ 1'd1);

assign xor_ln416_1081_fu_1913_p2 = (tmp_8756_fu_1905_p3 ^ 1'd1);

assign xor_ln416_1082_fu_2235_p2 = (tmp_8762_fu_2227_p3 ^ 1'd1);

assign xor_ln416_1083_fu_2415_p2 = (tmp_8768_fu_2407_p3 ^ 1'd1);

assign xor_ln416_1084_fu_2742_p2 = (tmp_8774_fu_2734_p3 ^ 1'd1);

assign xor_ln416_1085_fu_2922_p2 = (tmp_8780_fu_2914_p3 ^ 1'd1);

assign xor_ln416_1086_fu_3444_p2 = (tmp_8786_fu_3436_p3 ^ 1'd1);

assign xor_ln416_1087_fu_3624_p2 = (tmp_8792_fu_3616_p3 ^ 1'd1);

assign xor_ln416_1088_fu_4146_p2 = (tmp_8798_fu_4138_p3 ^ 1'd1);

assign xor_ln416_1089_fu_4326_p2 = (tmp_8804_fu_4318_p3 ^ 1'd1);

assign xor_ln416_1090_fu_4853_p2 = (tmp_8810_fu_4845_p3 ^ 1'd1);

assign xor_ln416_1091_fu_5033_p2 = (tmp_8816_fu_5025_p3 ^ 1'd1);

assign xor_ln416_1092_fu_5555_p2 = (tmp_8822_fu_5547_p3 ^ 1'd1);

assign xor_ln416_1093_fu_5735_p2 = (tmp_8828_fu_5727_p3 ^ 1'd1);

assign xor_ln416_1094_fu_6237_p2 = (tmp_8834_fu_6229_p3 ^ 1'd1);

assign xor_ln416_1095_fu_6417_p2 = (tmp_8840_fu_6409_p3 ^ 1'd1);

assign xor_ln416_fu_1231_p2 = (tmp_8738_fu_1223_p3 ^ 1'd1);

assign xor_ln780_1007_fu_1437_p2 = (tmp_8745_fu_1429_p3 ^ 1'd1);

assign xor_ln780_1008_fu_1759_p2 = (tmp_8751_fu_1751_p3 ^ 1'd1);

assign xor_ln780_1009_fu_1939_p2 = (tmp_8757_fu_1931_p3 ^ 1'd1);

assign xor_ln780_1010_fu_2261_p2 = (tmp_8763_fu_2253_p3 ^ 1'd1);

assign xor_ln780_1011_fu_2441_p2 = (tmp_8769_fu_2433_p3 ^ 1'd1);

assign xor_ln780_1012_fu_2768_p2 = (tmp_8775_fu_2760_p3 ^ 1'd1);

assign xor_ln780_1013_fu_2948_p2 = (tmp_8781_fu_2940_p3 ^ 1'd1);

assign xor_ln780_1014_fu_3470_p2 = (tmp_8787_fu_3462_p3 ^ 1'd1);

assign xor_ln780_1015_fu_3650_p2 = (tmp_8793_fu_3642_p3 ^ 1'd1);

assign xor_ln780_1016_fu_4172_p2 = (tmp_8799_fu_4164_p3 ^ 1'd1);

assign xor_ln780_1017_fu_4352_p2 = (tmp_8805_fu_4344_p3 ^ 1'd1);

assign xor_ln780_1018_fu_4879_p2 = (tmp_8811_fu_4871_p3 ^ 1'd1);

assign xor_ln780_1019_fu_5059_p2 = (tmp_8817_fu_5051_p3 ^ 1'd1);

assign xor_ln780_1020_fu_5581_p2 = (tmp_8823_fu_5573_p3 ^ 1'd1);

assign xor_ln780_1021_fu_5761_p2 = (tmp_8829_fu_5753_p3 ^ 1'd1);

assign xor_ln780_1022_fu_6263_p2 = (tmp_8835_fu_6255_p3 ^ 1'd1);

assign xor_ln780_1023_fu_6443_p2 = (tmp_8841_fu_6435_p3 ^ 1'd1);

assign xor_ln780_fu_1257_p2 = (tmp_8739_fu_1249_p3 ^ 1'd1);

assign xor_ln785_2135_fu_1292_p2 = (tmp_reg_6822 ^ 1'd1);

assign xor_ln785_2136_fu_1460_p2 = (select_ln778_1_fu_1423_p3 ^ 1'd1);

assign xor_ln785_2137_fu_1472_p2 = (tmp_8740_reg_6850 ^ 1'd1);

assign xor_ln785_2138_fu_1782_p2 = (select_ln778_2_fu_1745_p3 ^ 1'd1);

assign xor_ln785_2139_fu_1794_p2 = (tmp_8746_reg_6910 ^ 1'd1);

assign xor_ln785_2140_fu_1962_p2 = (select_ln778_3_fu_1925_p3 ^ 1'd1);

assign xor_ln785_2141_fu_1974_p2 = (tmp_8752_reg_6938 ^ 1'd1);

assign xor_ln785_2142_fu_2284_p2 = (select_ln778_4_fu_2247_p3 ^ 1'd1);

assign xor_ln785_2143_fu_2296_p2 = (tmp_8758_reg_6993 ^ 1'd1);

assign xor_ln785_2144_fu_2464_p2 = (select_ln778_5_fu_2427_p3 ^ 1'd1);

assign xor_ln785_2145_fu_2476_p2 = (tmp_8764_reg_7021 ^ 1'd1);

assign xor_ln785_2146_fu_2791_p2 = (select_ln778_6_fu_2754_p3 ^ 1'd1);

assign xor_ln785_2147_fu_2803_p2 = (tmp_8770_reg_7079 ^ 1'd1);

assign xor_ln785_2148_fu_2971_p2 = (select_ln778_7_fu_2934_p3 ^ 1'd1);

assign xor_ln785_2149_fu_2983_p2 = (tmp_8776_reg_7107 ^ 1'd1);

assign xor_ln785_2150_fu_3493_p2 = (select_ln778_8_fu_3456_p3 ^ 1'd1);

assign xor_ln785_2151_fu_3505_p2 = (tmp_8782_reg_7145 ^ 1'd1);

assign xor_ln785_2152_fu_3673_p2 = (select_ln778_9_fu_3636_p3 ^ 1'd1);

assign xor_ln785_2153_fu_3685_p2 = (tmp_8788_reg_7173 ^ 1'd1);

assign xor_ln785_2154_fu_4195_p2 = (select_ln778_10_fu_4158_p3 ^ 1'd1);

assign xor_ln785_2155_fu_4207_p2 = (tmp_8794_reg_7223 ^ 1'd1);

assign xor_ln785_2156_fu_4375_p2 = (select_ln778_11_fu_4338_p3 ^ 1'd1);

assign xor_ln785_2157_fu_4387_p2 = (tmp_8800_reg_7251 ^ 1'd1);

assign xor_ln785_2158_fu_4902_p2 = (select_ln778_12_fu_4865_p3 ^ 1'd1);

assign xor_ln785_2159_fu_4914_p2 = (tmp_8806_reg_7309 ^ 1'd1);

assign xor_ln785_2160_fu_5082_p2 = (select_ln778_13_fu_5045_p3 ^ 1'd1);

assign xor_ln785_2161_fu_5094_p2 = (tmp_8812_reg_7337 ^ 1'd1);

assign xor_ln785_2162_fu_5604_p2 = (select_ln778_14_fu_5567_p3 ^ 1'd1);

assign xor_ln785_2163_fu_5616_p2 = (tmp_8818_reg_7387 ^ 1'd1);

assign xor_ln785_2164_fu_5784_p2 = (select_ln778_15_fu_5747_p3 ^ 1'd1);

assign xor_ln785_2165_fu_5796_p2 = (tmp_8824_reg_7415 ^ 1'd1);

assign xor_ln785_2166_fu_6286_p2 = (select_ln778_16_fu_6249_p3 ^ 1'd1);

assign xor_ln785_2167_fu_6298_p2 = (tmp_8830_reg_7463 ^ 1'd1);

assign xor_ln785_2168_fu_6466_p2 = (select_ln778_17_fu_6429_p3 ^ 1'd1);

assign xor_ln785_2169_fu_6478_p2 = (tmp_8836_reg_7491 ^ 1'd1);

assign xor_ln785_2170_fu_3215_p2 = (tmp_8842_fu_3194_p3 ^ 1'd1);

assign xor_ln785_2171_fu_3315_p2 = (tmp_8844_fu_3294_p3 ^ 1'd1);

assign xor_ln785_2172_fu_3917_p2 = (tmp_8846_fu_3896_p3 ^ 1'd1);

assign xor_ln785_2173_fu_4017_p2 = (tmp_8848_fu_3996_p3 ^ 1'd1);

assign xor_ln785_2174_fu_4624_p2 = (tmp_8850_fu_4603_p3 ^ 1'd1);

assign xor_ln785_2175_fu_4724_p2 = (tmp_8852_fu_4703_p3 ^ 1'd1);

assign xor_ln785_2176_fu_5326_p2 = (tmp_8854_fu_5305_p3 ^ 1'd1);

assign xor_ln785_2177_fu_5426_p2 = (tmp_8856_fu_5405_p3 ^ 1'd1);

assign xor_ln785_2178_fu_6008_p2 = (tmp_8858_fu_5987_p3 ^ 1'd1);

assign xor_ln785_2179_fu_6108_p2 = (tmp_8860_fu_6087_p3 ^ 1'd1);

assign xor_ln785_2180_fu_6568_p2 = (tmp_8862_fu_6547_p3 ^ 1'd1);

assign xor_ln785_2181_fu_6668_p2 = (tmp_8864_fu_6647_p3 ^ 1'd1);

assign xor_ln785_fu_1280_p2 = (select_ln778_fu_1243_p3 ^ 1'd1);

assign xor_ln786_1007_fu_1495_p2 = (or_ln786_1007_fu_1489_p2 ^ 1'd1);

assign xor_ln786_1008_fu_1817_p2 = (or_ln786_1008_fu_1811_p2 ^ 1'd1);

assign xor_ln786_1009_fu_1997_p2 = (or_ln786_1009_fu_1991_p2 ^ 1'd1);

assign xor_ln786_1010_fu_2319_p2 = (or_ln786_1010_fu_2313_p2 ^ 1'd1);

assign xor_ln786_1011_fu_2499_p2 = (or_ln786_1011_fu_2493_p2 ^ 1'd1);

assign xor_ln786_1012_fu_2826_p2 = (or_ln786_1012_fu_2820_p2 ^ 1'd1);

assign xor_ln786_1013_fu_3006_p2 = (or_ln786_1013_fu_3000_p2 ^ 1'd1);

assign xor_ln786_1014_fu_3528_p2 = (or_ln786_1014_fu_3522_p2 ^ 1'd1);

assign xor_ln786_1015_fu_3708_p2 = (or_ln786_1015_fu_3702_p2 ^ 1'd1);

assign xor_ln786_1016_fu_4230_p2 = (or_ln786_1016_fu_4224_p2 ^ 1'd1);

assign xor_ln786_1017_fu_4410_p2 = (or_ln786_1017_fu_4404_p2 ^ 1'd1);

assign xor_ln786_1018_fu_4937_p2 = (or_ln786_1018_fu_4931_p2 ^ 1'd1);

assign xor_ln786_1019_fu_5117_p2 = (or_ln786_1019_fu_5111_p2 ^ 1'd1);

assign xor_ln786_1020_fu_5639_p2 = (or_ln786_1020_fu_5633_p2 ^ 1'd1);

assign xor_ln786_1021_fu_5819_p2 = (or_ln786_1021_fu_5813_p2 ^ 1'd1);

assign xor_ln786_1022_fu_6321_p2 = (or_ln786_1022_fu_6315_p2 ^ 1'd1);

assign xor_ln786_1023_fu_6501_p2 = (or_ln786_1023_fu_6495_p2 ^ 1'd1);

assign xor_ln786_1024_fu_3227_p2 = (tmp_8843_fu_3207_p3 ^ 1'd1);

assign xor_ln786_1025_fu_3327_p2 = (tmp_8845_fu_3307_p3 ^ 1'd1);

assign xor_ln786_1026_fu_3929_p2 = (tmp_8847_fu_3909_p3 ^ 1'd1);

assign xor_ln786_1027_fu_4029_p2 = (tmp_8849_fu_4009_p3 ^ 1'd1);

assign xor_ln786_1028_fu_4636_p2 = (tmp_8851_fu_4616_p3 ^ 1'd1);

assign xor_ln786_1029_fu_4736_p2 = (tmp_8853_fu_4716_p3 ^ 1'd1);

assign xor_ln786_1030_fu_5338_p2 = (tmp_8855_fu_5318_p3 ^ 1'd1);

assign xor_ln786_1031_fu_5438_p2 = (tmp_8857_fu_5418_p3 ^ 1'd1);

assign xor_ln786_1032_fu_6020_p2 = (tmp_8859_fu_6000_p3 ^ 1'd1);

assign xor_ln786_1033_fu_6120_p2 = (tmp_8861_fu_6100_p3 ^ 1'd1);

assign xor_ln786_1034_fu_6580_p2 = (tmp_8863_fu_6560_p3 ^ 1'd1);

assign xor_ln786_1035_fu_6680_p2 = (tmp_8865_fu_6660_p3 ^ 1'd1);

assign xor_ln786_fu_1315_p2 = (or_ln786_fu_1309_p2 ^ 1'd1);

assign zext_ln38_1_fu_1163_p1 = add_ln38_1_fu_1158_p2;

assign zext_ln38_fu_1000_p1 = add_ln38_fu_994_p2;

assign zext_ln415_1151_fu_1393_p1 = and_ln412_1_fu_1387_p2;

assign zext_ln415_1152_fu_1715_p1 = and_ln412_2_fu_1709_p2;

assign zext_ln415_1153_fu_1895_p1 = and_ln412_3_fu_1889_p2;

assign zext_ln415_1154_fu_2217_p1 = and_ln412_4_fu_2211_p2;

assign zext_ln415_1155_fu_2397_p1 = and_ln412_5_fu_2391_p2;

assign zext_ln415_1156_fu_2724_p1 = and_ln412_6_fu_2718_p2;

assign zext_ln415_1157_fu_2904_p1 = and_ln412_7_fu_2898_p2;

assign zext_ln415_1158_fu_3426_p1 = and_ln412_8_fu_3420_p2;

assign zext_ln415_1159_fu_3606_p1 = and_ln412_9_fu_3600_p2;

assign zext_ln415_1160_fu_4128_p1 = and_ln412_10_fu_4122_p2;

assign zext_ln415_1161_fu_4308_p1 = and_ln412_11_fu_4302_p2;

assign zext_ln415_1162_fu_4835_p1 = and_ln412_12_fu_4829_p2;

assign zext_ln415_1163_fu_5015_p1 = and_ln412_13_fu_5009_p2;

assign zext_ln415_1164_fu_5537_p1 = and_ln412_14_fu_5531_p2;

assign zext_ln415_1165_fu_5717_p1 = and_ln412_15_fu_5711_p2;

assign zext_ln415_1166_fu_6219_p1 = and_ln412_16_fu_6213_p2;

assign zext_ln415_1167_fu_6399_p1 = and_ln412_17_fu_6393_p2;

assign zext_ln415_fu_1213_p1 = and_ln412_fu_1207_p2;

assign zext_ln42_10_fu_3176_p1 = add_ln42_10_fu_3171_p2;

assign zext_ln42_11_fu_3868_p1 = add_ln42_11_fu_3863_p2;

assign zext_ln42_12_fu_3878_p1 = add_ln42_12_fu_3873_p2;

assign zext_ln42_13_fu_4575_p1 = add_ln42_13_fu_4570_p2;

assign zext_ln42_14_fu_4585_p1 = add_ln42_14_fu_4580_p2;

assign zext_ln42_15_fu_5277_p1 = add_ln42_15_fu_5272_p2;

assign zext_ln42_16_fu_5287_p1 = add_ln42_16_fu_5282_p2;

assign zext_ln42_1_fu_1142_p1 = add_ln42_1_fu_1136_p2;

assign zext_ln42_2_fu_1153_p1 = add_ln42_2_fu_1147_p2;

assign zext_ln42_3_fu_1655_p1 = add_ln42_3_fu_1650_p2;

assign zext_ln42_4_fu_1665_p1 = add_ln42_4_fu_1660_p2;

assign zext_ln42_5_fu_2157_p1 = add_ln42_5_fu_2152_p2;

assign zext_ln42_6_fu_2167_p1 = add_ln42_6_fu_2162_p2;

assign zext_ln42_7_fu_2664_p1 = add_ln42_7_fu_2659_p2;

assign zext_ln42_8_fu_2674_p1 = add_ln42_8_fu_2669_p2;

assign zext_ln42_9_fu_3166_p1 = add_ln42_9_fu_3161_p2;

assign zext_ln42_fu_989_p1 = add_ln42_fu_983_p2;

always @ (posedge ap_clk) begin
    weights_offset_cast_reg_6796[7] <= 1'b0;
end

endmodule //myproject_dense_latency_ap_fixed_16_6_4_0_0_ap_fixed_16_6_4_0_0_config5_dense_s
