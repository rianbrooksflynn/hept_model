// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689
`timescale 1 ns / 1 ps
//   
//   
// 
module myproject_am_submul_16s_16s_34_1_0_DSP48_0(
    input  [16 - 1:0] in0,
    input  [16 - 1:0] in1,
    output [34 - 1:0]  dout);

wire signed [17 - 1:0]     a;
wire signed [17 - 1:0]     d;
wire signed [36 - 1:0]     m;
wire signed [18 - 1:0]    ad;

assign a = $signed(in0);
assign d = $signed(in1);

assign ad = a - d;
assign m  = ad * ad;

assign dout = m;

endmodule
// 

`timescale 1 ns / 1 ps
module myproject_am_submul_16s_16s_34_1_0(
// 
    din0,
    din1,
    dout);

parameter ID = 32'd1;
parameter NUM_STAGE = 32'd1;
parameter din0_WIDTH = 32'd1;
parameter din1_WIDTH = 32'd1;
parameter dout_WIDTH = 32'd1;
// 
input[din0_WIDTH - 1:0] din0;
input[din1_WIDTH - 1:0] din1;
output[dout_WIDTH - 1:0] dout;

myproject_am_submul_16s_16s_34_1_0_DSP48_0 myproject_am_submul_16s_16s_34_1_0_DSP48_0_U(
// 
    .in0( din0 ),
    .in1( din1 ),
    .dout( dout ));

endmodule

