-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_dense_latency_ap_fixed_13_4_4_0_0_ap_fixed_13_4_4_0_0_config5_dense_11 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_44_val : IN STD_LOGIC_VECTOR (12 downto 0);
    data_45_val : IN STD_LOGIC_VECTOR (12 downto 0);
    data_46_val : IN STD_LOGIC_VECTOR (12 downto 0);
    data_47_val : IN STD_LOGIC_VECTOR (12 downto 0);
    weights_44_val : IN STD_LOGIC_VECTOR (12 downto 0);
    weights_45_val : IN STD_LOGIC_VECTOR (12 downto 0);
    weights_46_val : IN STD_LOGIC_VECTOR (12 downto 0);
    weights_47_val : IN STD_LOGIC_VECTOR (12 downto 0);
    idx : IN STD_LOGIC_VECTOR (5 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of myproject_dense_latency_ap_fixed_13_4_4_0_0_ap_fixed_13_4_4_0_0_config5_dense_11 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv13_FFF : STD_LOGIC_VECTOR (12 downto 0) := "0111111111111";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal add_ln42_fu_320_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln42_reg_1473 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal and_ln42_220_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_220_reg_1478 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_90_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_90_reg_1483 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln42_25_fu_553_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln42_25_reg_1488 : STD_LOGIC_VECTOR (12 downto 0);
    signal and_ln42_227_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_227_reg_1493 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_93_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_93_reg_1498 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln42_26_fu_812_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln42_26_reg_1503 : STD_LOGIC_VECTOR (12 downto 0);
    signal and_ln42_234_fu_936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_234_reg_1508 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_96_fu_966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_96_reg_1513 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln42_27_fu_1045_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln42_27_reg_1518 : STD_LOGIC_VECTOR (12 downto 0);
    signal and_ln42_241_fu_1169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_241_reg_1523 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_99_fu_1199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_99_reg_1528 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln73_26_fu_144_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln73_43_fu_733_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal mul_ln73_fu_145_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln73_fu_241_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln73_27_fu_146_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln73_25_fu_147_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal a_fu_221_p7 : STD_LOGIC_VECTOR (12 downto 0);
    signal a_fu_221_p9 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln73_fu_145_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln42_fu_286_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2783_fu_270_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2784_fu_278_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_260_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln42_fu_316_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_2786_fu_326_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2785_fu_296_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_346_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_362_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln42_217_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_122_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_123_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2787_fu_392_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_121_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_136_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_218_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_fu_384_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_121_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_252_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_89_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_122_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_121_fu_412_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_219_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_221_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_100_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_123_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_222_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln73_25_fu_147_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln42_28_fu_519_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2789_fu_503_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_124_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_91_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2790_fu_511_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_223_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_s_fu_493_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln42_25_fu_549_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_2792_fu_559_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2791_fu_529_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_124_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1044_fu_579_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1045_fu_595_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln42_224_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_126_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_127_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2793_fu_625_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_125_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_137_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_225_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_124_fu_617_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_125_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2788_fu_485_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_92_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_126_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_125_fu_645_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_226_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_228_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_101_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_127_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_229_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_9_fu_713_p7 : STD_LOGIC_VECTOR (12 downto 0);
    signal a_9_fu_713_p9 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln73_26_fu_144_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln42_29_fu_778_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2795_fu_762_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_128_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_94_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2796_fu_770_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_230_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_11_fu_752_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln42_26_fu_808_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_2798_fu_818_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2797_fu_788_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_128_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1046_fu_838_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1047_fu_854_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln42_231_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_130_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_131_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2799_fu_884_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_129_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_138_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_232_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_128_fu_876_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_129_fu_918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2794_fu_744_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_95_fu_924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_130_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_129_fu_904_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_233_fu_912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_235_fu_942_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_102_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_131_fu_954_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_236_fu_960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln73_27_fu_146_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln42_30_fu_1011_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2801_fu_995_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_132_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_97_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2802_fu_1003_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_237_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln42_12_fu_985_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln42_27_fu_1041_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_2804_fu_1051_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2803_fu_1021_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_132_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1048_fu_1071_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1049_fu_1087_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln42_238_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_134_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_135_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2805_fu_1117_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_133_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_139_fu_1125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_239_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_132_fu_1109_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_133_fu_1151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2800_fu_977_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_98_fu_1157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_134_fu_1163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_133_fu_1137_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_240_fu_1145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_242_fu_1175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_103_fu_1181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln42_135_fu_1187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln42_243_fu_1193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_122_fu_1205_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln42_126_fu_1218_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln42_130_fu_1231_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln42_134_fu_1244_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln42_123_fu_1212_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln42_131_fu_1238_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln58_25_fu_1261_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln58_fu_1257_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln58_fu_1271_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln58_18_fu_1265_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_2806_fu_1277_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2807_fu_1285_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln58_fu_1293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln58_57_fu_1305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln58_58_fu_1317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_fu_1299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln58_59_fu_1323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_25_fu_1311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_fu_1329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln58_fu_1335_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln58_41_fu_1343_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln42_127_fu_1225_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln42_135_fu_1251_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln58_27_fu_1363_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln58_26_fu_1359_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln58_9_fu_1373_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln58_19_fu_1367_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_2808_fu_1379_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2809_fu_1387_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln58_60_fu_1395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln58_61_fu_1407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln58_62_fu_1419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_26_fu_1401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln58_63_fu_1425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_27_fu_1413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_9_fu_1431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln58_43_fu_1437_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln58_44_fu_1445_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln58_42_fu_1351_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln58_45_fu_1453_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal a_fu_221_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_fu_221_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_fu_221_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_9_fu_713_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_9_fu_713_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_9_fu_713_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_mul_13s_13s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_sparsemux_7_6_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (5 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (5 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (5 downto 0);
        din2_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        def : IN STD_LOGIC_VECTOR (12 downto 0);
        sel : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;



begin
    mul_13s_13s_26_1_1_U909 : component myproject_mul_13s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln73_26_fu_144_p0,
        din1 => weights_46_val,
        dout => mul_ln73_26_fu_144_p2);

    mul_13s_13s_26_1_1_U910 : component myproject_mul_13s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln73_fu_145_p0,
        din1 => weights_44_val,
        dout => mul_ln73_fu_145_p2);

    mul_13s_13s_26_1_1_U911 : component myproject_mul_13s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln73_27_fu_146_p0,
        din1 => weights_47_val,
        dout => mul_ln73_27_fu_146_p2);

    mul_13s_13s_26_1_1_U912 : component myproject_mul_13s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln73_25_fu_147_p0,
        din1 => weights_45_val,
        dout => mul_ln73_25_fu_147_p2);

    sparsemux_7_6_13_1_1_U913 : component myproject_sparsemux_7_6_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "101100",
        din0_WIDTH => 13,
        CASE1 => "101101",
        din1_WIDTH => 13,
        CASE2 => "101110",
        din2_WIDTH => 13,
        def_WIDTH => 13,
        sel_WIDTH => 6,
        dout_WIDTH => 13)
    port map (
        din0 => data_44_val,
        din1 => data_45_val,
        din2 => data_46_val,
        def => a_fu_221_p7,
        sel => idx,
        dout => a_fu_221_p9);

    sparsemux_7_6_13_1_1_U914 : component myproject_sparsemux_7_6_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "101100",
        din0_WIDTH => 13,
        CASE1 => "101101",
        din1_WIDTH => 13,
        CASE2 => "101110",
        din2_WIDTH => 13,
        def_WIDTH => 13,
        sel_WIDTH => 6,
        dout_WIDTH => 13)
    port map (
        din0 => data_45_val,
        din1 => data_46_val,
        din2 => data_47_val,
        def => a_9_fu_713_p7,
        sel => idx,
        dout => a_9_fu_713_p9);




    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                add_ln42_25_reg_1488 <= add_ln42_25_fu_553_p2;
                add_ln42_26_reg_1503 <= add_ln42_26_fu_812_p2;
                add_ln42_27_reg_1518 <= add_ln42_27_fu_1045_p2;
                add_ln42_reg_1473 <= add_ln42_fu_320_p2;
                and_ln42_220_reg_1478 <= and_ln42_220_fu_444_p2;
                and_ln42_227_reg_1493 <= and_ln42_227_fu_677_p2;
                and_ln42_234_reg_1508 <= and_ln42_234_fu_936_p2;
                and_ln42_241_reg_1523 <= and_ln42_241_fu_1169_p2;
                or_ln42_90_reg_1483 <= or_ln42_90_fu_474_p2;
                or_ln42_93_reg_1498 <= or_ln42_93_fu_707_p2;
                or_ln42_96_reg_1513 <= or_ln42_96_fu_966_p2;
                or_ln42_99_reg_1528 <= or_ln42_99_fu_1199_p2;
            end if;
        end if;
    end process;
    a_9_fu_713_p7 <= "XXXXXXXXXXXXX";
    a_fu_221_p7 <= "XXXXXXXXXXXXX";
    add_ln42_25_fu_553_p2 <= std_logic_vector(unsigned(trunc_ln42_s_fu_493_p4) + unsigned(zext_ln42_25_fu_549_p1));
    add_ln42_26_fu_812_p2 <= std_logic_vector(unsigned(trunc_ln42_11_fu_752_p4) + unsigned(zext_ln42_26_fu_808_p1));
    add_ln42_27_fu_1045_p2 <= std_logic_vector(unsigned(trunc_ln42_12_fu_985_p4) + unsigned(zext_ln42_27_fu_1041_p1));
    add_ln42_fu_320_p2 <= std_logic_vector(unsigned(trunc_ln_fu_260_p4) + unsigned(zext_ln42_fu_316_p1));
    add_ln58_18_fu_1265_p2 <= std_logic_vector(signed(select_ln42_131_fu_1238_p3) + signed(select_ln42_123_fu_1212_p3));
    add_ln58_19_fu_1367_p2 <= std_logic_vector(signed(select_ln42_135_fu_1251_p3) + signed(select_ln42_127_fu_1225_p3));
    add_ln58_9_fu_1373_p2 <= std_logic_vector(signed(sext_ln58_27_fu_1363_p1) + signed(sext_ln58_26_fu_1359_p1));
    add_ln58_fu_1271_p2 <= std_logic_vector(signed(sext_ln58_25_fu_1261_p1) + signed(sext_ln58_fu_1257_p1));
    and_ln42_217_fu_340_p2 <= (xor_ln42_fu_334_p2 and tmp_2785_fu_296_p3);
    and_ln42_218_fu_406_p2 <= (xor_ln42_136_fu_400_p2 and icmp_ln42_121_fu_356_p2);
    and_ln42_219_fu_420_p2 <= (icmp_ln42_122_fu_372_p2 and and_ln42_217_fu_340_p2);
    and_ln42_220_fu_444_p2 <= (xor_ln42_122_fu_438_p2 and or_ln42_89_fu_432_p2);
    and_ln42_221_fu_450_p2 <= (tmp_2786_fu_326_p3 and select_ln42_121_fu_412_p3);
    and_ln42_222_fu_468_p2 <= (xor_ln42_123_fu_462_p2 and tmp_fu_252_p3);
    and_ln42_223_fu_543_p2 <= (tmp_2790_fu_511_p3 and or_ln42_91_fu_537_p2);
    and_ln42_224_fu_573_p2 <= (xor_ln42_124_fu_567_p2 and tmp_2791_fu_529_p3);
    and_ln42_225_fu_639_p2 <= (xor_ln42_137_fu_633_p2 and icmp_ln42_125_fu_589_p2);
    and_ln42_226_fu_653_p2 <= (icmp_ln42_126_fu_605_p2 and and_ln42_224_fu_573_p2);
    and_ln42_227_fu_677_p2 <= (xor_ln42_126_fu_671_p2 and or_ln42_92_fu_665_p2);
    and_ln42_228_fu_683_p2 <= (tmp_2792_fu_559_p3 and select_ln42_125_fu_645_p3);
    and_ln42_229_fu_701_p2 <= (xor_ln42_127_fu_695_p2 and tmp_2788_fu_485_p3);
    and_ln42_230_fu_802_p2 <= (tmp_2796_fu_770_p3 and or_ln42_94_fu_796_p2);
    and_ln42_231_fu_832_p2 <= (xor_ln42_128_fu_826_p2 and tmp_2797_fu_788_p3);
    and_ln42_232_fu_898_p2 <= (xor_ln42_138_fu_892_p2 and icmp_ln42_129_fu_848_p2);
    and_ln42_233_fu_912_p2 <= (icmp_ln42_130_fu_864_p2 and and_ln42_231_fu_832_p2);
    and_ln42_234_fu_936_p2 <= (xor_ln42_130_fu_930_p2 and or_ln42_95_fu_924_p2);
    and_ln42_235_fu_942_p2 <= (tmp_2798_fu_818_p3 and select_ln42_129_fu_904_p3);
    and_ln42_236_fu_960_p2 <= (xor_ln42_131_fu_954_p2 and tmp_2794_fu_744_p3);
    and_ln42_237_fu_1035_p2 <= (tmp_2802_fu_1003_p3 and or_ln42_97_fu_1029_p2);
    and_ln42_238_fu_1065_p2 <= (xor_ln42_132_fu_1059_p2 and tmp_2803_fu_1021_p3);
    and_ln42_239_fu_1131_p2 <= (xor_ln42_139_fu_1125_p2 and icmp_ln42_133_fu_1081_p2);
    and_ln42_240_fu_1145_p2 <= (icmp_ln42_134_fu_1097_p2 and and_ln42_238_fu_1065_p2);
    and_ln42_241_fu_1169_p2 <= (xor_ln42_134_fu_1163_p2 and or_ln42_98_fu_1157_p2);
    and_ln42_242_fu_1175_p2 <= (tmp_2804_fu_1051_p3 and select_ln42_133_fu_1137_p3);
    and_ln42_243_fu_1193_p2 <= (xor_ln42_135_fu_1187_p2 and tmp_2800_fu_977_p3);
    and_ln42_fu_310_p2 <= (tmp_2784_fu_278_p3 and or_ln42_fu_304_p2);
    and_ln58_25_fu_1311_p2 <= (xor_ln58_57_fu_1305_p2 and tmp_2806_fu_1277_p3);
    and_ln58_26_fu_1401_p2 <= (xor_ln58_60_fu_1395_p2 and tmp_2809_fu_1387_p3);
    and_ln58_27_fu_1413_p2 <= (xor_ln58_61_fu_1407_p2 and tmp_2808_fu_1379_p3);
    and_ln58_fu_1299_p2 <= (xor_ln58_fu_1293_p2 and tmp_2807_fu_1285_p3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return_0 <= select_ln58_42_fu_1351_p3;
    ap_return_1 <= select_ln58_45_fu_1453_p3;
    icmp_ln42_121_fu_356_p2 <= "1" when (tmp_8_fu_346_p4 = ap_const_lv3_7) else "0";
    icmp_ln42_122_fu_372_p2 <= "1" when (tmp_s_fu_362_p4 = ap_const_lv4_F) else "0";
    icmp_ln42_123_fu_378_p2 <= "1" when (tmp_s_fu_362_p4 = ap_const_lv4_0) else "0";
    icmp_ln42_124_fu_523_p2 <= "0" when (trunc_ln42_28_fu_519_p1 = ap_const_lv8_0) else "1";
    icmp_ln42_125_fu_589_p2 <= "1" when (tmp_1044_fu_579_p4 = ap_const_lv3_7) else "0";
    icmp_ln42_126_fu_605_p2 <= "1" when (tmp_1045_fu_595_p4 = ap_const_lv4_F) else "0";
    icmp_ln42_127_fu_611_p2 <= "1" when (tmp_1045_fu_595_p4 = ap_const_lv4_0) else "0";
    icmp_ln42_128_fu_782_p2 <= "0" when (trunc_ln42_29_fu_778_p1 = ap_const_lv8_0) else "1";
    icmp_ln42_129_fu_848_p2 <= "1" when (tmp_1046_fu_838_p4 = ap_const_lv3_7) else "0";
    icmp_ln42_130_fu_864_p2 <= "1" when (tmp_1047_fu_854_p4 = ap_const_lv4_F) else "0";
    icmp_ln42_131_fu_870_p2 <= "1" when (tmp_1047_fu_854_p4 = ap_const_lv4_0) else "0";
    icmp_ln42_132_fu_1015_p2 <= "0" when (trunc_ln42_30_fu_1011_p1 = ap_const_lv8_0) else "1";
    icmp_ln42_133_fu_1081_p2 <= "1" when (tmp_1048_fu_1071_p4 = ap_const_lv3_7) else "0";
    icmp_ln42_134_fu_1097_p2 <= "1" when (tmp_1049_fu_1087_p4 = ap_const_lv4_F) else "0";
    icmp_ln42_135_fu_1103_p2 <= "1" when (tmp_1049_fu_1087_p4 = ap_const_lv4_0) else "0";
    icmp_ln42_fu_290_p2 <= "0" when (trunc_ln42_fu_286_p1 = ap_const_lv8_0) else "1";
    mul_ln73_25_fu_147_p0 <= sext_ln73_fu_241_p1(13 - 1 downto 0);
    mul_ln73_26_fu_144_p0 <= sext_ln73_43_fu_733_p1(13 - 1 downto 0);
    mul_ln73_27_fu_146_p0 <= sext_ln73_43_fu_733_p1(13 - 1 downto 0);
    mul_ln73_fu_145_p0 <= sext_ln73_fu_241_p1(13 - 1 downto 0);
    or_ln42_100_fu_456_p2 <= (and_ln42_221_fu_450_p2 or and_ln42_219_fu_420_p2);
    or_ln42_101_fu_689_p2 <= (and_ln42_228_fu_683_p2 or and_ln42_226_fu_653_p2);
    or_ln42_102_fu_948_p2 <= (and_ln42_235_fu_942_p2 or and_ln42_233_fu_912_p2);
    or_ln42_103_fu_1181_p2 <= (and_ln42_242_fu_1175_p2 or and_ln42_240_fu_1145_p2);
    or_ln42_89_fu_432_p2 <= (xor_ln42_121_fu_426_p2 or tmp_2786_fu_326_p3);
    or_ln42_90_fu_474_p2 <= (and_ln42_222_fu_468_p2 or and_ln42_220_fu_444_p2);
    or_ln42_91_fu_537_p2 <= (tmp_2789_fu_503_p3 or icmp_ln42_124_fu_523_p2);
    or_ln42_92_fu_665_p2 <= (xor_ln42_125_fu_659_p2 or tmp_2792_fu_559_p3);
    or_ln42_93_fu_707_p2 <= (and_ln42_229_fu_701_p2 or and_ln42_227_fu_677_p2);
    or_ln42_94_fu_796_p2 <= (tmp_2795_fu_762_p3 or icmp_ln42_128_fu_782_p2);
    or_ln42_95_fu_924_p2 <= (xor_ln42_129_fu_918_p2 or tmp_2798_fu_818_p3);
    or_ln42_96_fu_966_p2 <= (and_ln42_236_fu_960_p2 or and_ln42_234_fu_936_p2);
    or_ln42_97_fu_1029_p2 <= (tmp_2801_fu_995_p3 or icmp_ln42_132_fu_1015_p2);
    or_ln42_98_fu_1157_p2 <= (xor_ln42_133_fu_1151_p2 or tmp_2804_fu_1051_p3);
    or_ln42_99_fu_1199_p2 <= (and_ln42_243_fu_1193_p2 or and_ln42_241_fu_1169_p2);
    or_ln42_fu_304_p2 <= (tmp_2783_fu_270_p3 or icmp_ln42_fu_290_p2);
    or_ln58_9_fu_1431_p2 <= (xor_ln58_63_fu_1425_p2 or and_ln58_26_fu_1401_p2);
    or_ln58_fu_1329_p2 <= (xor_ln58_59_fu_1323_p2 or and_ln58_fu_1299_p2);
    select_ln42_121_fu_412_p3 <= 
        and_ln42_218_fu_406_p2 when (and_ln42_217_fu_340_p2(0) = '1') else 
        icmp_ln42_122_fu_372_p2;
    select_ln42_122_fu_1205_p3 <= 
        ap_const_lv13_FFF when (and_ln42_220_reg_1478(0) = '1') else 
        ap_const_lv13_1000;
    select_ln42_123_fu_1212_p3 <= 
        select_ln42_122_fu_1205_p3 when (or_ln42_90_reg_1483(0) = '1') else 
        add_ln42_reg_1473;
    select_ln42_124_fu_617_p3 <= 
        icmp_ln42_126_fu_605_p2 when (and_ln42_224_fu_573_p2(0) = '1') else 
        icmp_ln42_127_fu_611_p2;
    select_ln42_125_fu_645_p3 <= 
        and_ln42_225_fu_639_p2 when (and_ln42_224_fu_573_p2(0) = '1') else 
        icmp_ln42_126_fu_605_p2;
    select_ln42_126_fu_1218_p3 <= 
        ap_const_lv13_FFF when (and_ln42_227_reg_1493(0) = '1') else 
        ap_const_lv13_1000;
    select_ln42_127_fu_1225_p3 <= 
        select_ln42_126_fu_1218_p3 when (or_ln42_93_reg_1498(0) = '1') else 
        add_ln42_25_reg_1488;
    select_ln42_128_fu_876_p3 <= 
        icmp_ln42_130_fu_864_p2 when (and_ln42_231_fu_832_p2(0) = '1') else 
        icmp_ln42_131_fu_870_p2;
    select_ln42_129_fu_904_p3 <= 
        and_ln42_232_fu_898_p2 when (and_ln42_231_fu_832_p2(0) = '1') else 
        icmp_ln42_130_fu_864_p2;
    select_ln42_130_fu_1231_p3 <= 
        ap_const_lv13_FFF when (and_ln42_234_reg_1508(0) = '1') else 
        ap_const_lv13_1000;
    select_ln42_131_fu_1238_p3 <= 
        select_ln42_130_fu_1231_p3 when (or_ln42_96_reg_1513(0) = '1') else 
        add_ln42_26_reg_1503;
    select_ln42_132_fu_1109_p3 <= 
        icmp_ln42_134_fu_1097_p2 when (and_ln42_238_fu_1065_p2(0) = '1') else 
        icmp_ln42_135_fu_1103_p2;
    select_ln42_133_fu_1137_p3 <= 
        and_ln42_239_fu_1131_p2 when (and_ln42_238_fu_1065_p2(0) = '1') else 
        icmp_ln42_134_fu_1097_p2;
    select_ln42_134_fu_1244_p3 <= 
        ap_const_lv13_FFF when (and_ln42_241_reg_1523(0) = '1') else 
        ap_const_lv13_1000;
    select_ln42_135_fu_1251_p3 <= 
        select_ln42_134_fu_1244_p3 when (or_ln42_99_reg_1528(0) = '1') else 
        add_ln42_27_reg_1518;
    select_ln42_fu_384_p3 <= 
        icmp_ln42_122_fu_372_p2 when (and_ln42_217_fu_340_p2(0) = '1') else 
        icmp_ln42_123_fu_378_p2;
    select_ln58_41_fu_1343_p3 <= 
        ap_const_lv13_1000 when (and_ln58_25_fu_1311_p2(0) = '1') else 
        add_ln58_18_fu_1265_p2;
    select_ln58_42_fu_1351_p3 <= 
        select_ln58_fu_1335_p3 when (or_ln58_fu_1329_p2(0) = '1') else 
        select_ln58_41_fu_1343_p3;
    select_ln58_43_fu_1437_p3 <= 
        ap_const_lv13_FFF when (xor_ln58_62_fu_1419_p2(0) = '1') else 
        add_ln58_19_fu_1367_p2;
    select_ln58_44_fu_1445_p3 <= 
        ap_const_lv13_1000 when (and_ln58_27_fu_1413_p2(0) = '1') else 
        add_ln58_19_fu_1367_p2;
    select_ln58_45_fu_1453_p3 <= 
        select_ln58_43_fu_1437_p3 when (or_ln58_9_fu_1431_p2(0) = '1') else 
        select_ln58_44_fu_1445_p3;
    select_ln58_fu_1335_p3 <= 
        ap_const_lv13_FFF when (xor_ln58_58_fu_1317_p2(0) = '1') else 
        add_ln58_18_fu_1265_p2;
        sext_ln58_25_fu_1261_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln42_131_fu_1238_p3),14));

        sext_ln58_26_fu_1359_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln42_127_fu_1225_p3),14));

        sext_ln58_27_fu_1363_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln42_135_fu_1251_p3),14));

        sext_ln58_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln42_123_fu_1212_p3),14));

        sext_ln73_43_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a_9_fu_713_p9),26));

        sext_ln73_fu_241_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a_fu_221_p9),26));

    tmp_1044_fu_579_p4 <= mul_ln73_25_fu_147_p2(25 downto 23);
    tmp_1045_fu_595_p4 <= mul_ln73_25_fu_147_p2(25 downto 22);
    tmp_1046_fu_838_p4 <= mul_ln73_26_fu_144_p2(25 downto 23);
    tmp_1047_fu_854_p4 <= mul_ln73_26_fu_144_p2(25 downto 22);
    tmp_1048_fu_1071_p4 <= mul_ln73_27_fu_146_p2(25 downto 23);
    tmp_1049_fu_1087_p4 <= mul_ln73_27_fu_146_p2(25 downto 22);
    tmp_2783_fu_270_p3 <= mul_ln73_fu_145_p2(9 downto 9);
    tmp_2784_fu_278_p3 <= mul_ln73_fu_145_p2(8 downto 8);
    tmp_2785_fu_296_p3 <= mul_ln73_fu_145_p2(21 downto 21);
    tmp_2786_fu_326_p3 <= add_ln42_fu_320_p2(12 downto 12);
    tmp_2787_fu_392_p3 <= mul_ln73_fu_145_p2(22 downto 22);
    tmp_2788_fu_485_p3 <= mul_ln73_25_fu_147_p2(25 downto 25);
    tmp_2789_fu_503_p3 <= mul_ln73_25_fu_147_p2(9 downto 9);
    tmp_2790_fu_511_p3 <= mul_ln73_25_fu_147_p2(8 downto 8);
    tmp_2791_fu_529_p3 <= mul_ln73_25_fu_147_p2(21 downto 21);
    tmp_2792_fu_559_p3 <= add_ln42_25_fu_553_p2(12 downto 12);
    tmp_2793_fu_625_p3 <= mul_ln73_25_fu_147_p2(22 downto 22);
    tmp_2794_fu_744_p3 <= mul_ln73_26_fu_144_p2(25 downto 25);
    tmp_2795_fu_762_p3 <= mul_ln73_26_fu_144_p2(9 downto 9);
    tmp_2796_fu_770_p3 <= mul_ln73_26_fu_144_p2(8 downto 8);
    tmp_2797_fu_788_p3 <= mul_ln73_26_fu_144_p2(21 downto 21);
    tmp_2798_fu_818_p3 <= add_ln42_26_fu_812_p2(12 downto 12);
    tmp_2799_fu_884_p3 <= mul_ln73_26_fu_144_p2(22 downto 22);
    tmp_2800_fu_977_p3 <= mul_ln73_27_fu_146_p2(25 downto 25);
    tmp_2801_fu_995_p3 <= mul_ln73_27_fu_146_p2(9 downto 9);
    tmp_2802_fu_1003_p3 <= mul_ln73_27_fu_146_p2(8 downto 8);
    tmp_2803_fu_1021_p3 <= mul_ln73_27_fu_146_p2(21 downto 21);
    tmp_2804_fu_1051_p3 <= add_ln42_27_fu_1045_p2(12 downto 12);
    tmp_2805_fu_1117_p3 <= mul_ln73_27_fu_146_p2(22 downto 22);
    tmp_2806_fu_1277_p3 <= add_ln58_fu_1271_p2(13 downto 13);
    tmp_2807_fu_1285_p3 <= add_ln58_18_fu_1265_p2(12 downto 12);
    tmp_2808_fu_1379_p3 <= add_ln58_9_fu_1373_p2(13 downto 13);
    tmp_2809_fu_1387_p3 <= add_ln58_19_fu_1367_p2(12 downto 12);
    tmp_8_fu_346_p4 <= mul_ln73_fu_145_p2(25 downto 23);
    tmp_fu_252_p3 <= mul_ln73_fu_145_p2(25 downto 25);
    tmp_s_fu_362_p4 <= mul_ln73_fu_145_p2(25 downto 22);
    trunc_ln42_11_fu_752_p4 <= mul_ln73_26_fu_144_p2(21 downto 9);
    trunc_ln42_12_fu_985_p4 <= mul_ln73_27_fu_146_p2(21 downto 9);
    trunc_ln42_28_fu_519_p1 <= mul_ln73_25_fu_147_p2(8 - 1 downto 0);
    trunc_ln42_29_fu_778_p1 <= mul_ln73_26_fu_144_p2(8 - 1 downto 0);
    trunc_ln42_30_fu_1011_p1 <= mul_ln73_27_fu_146_p2(8 - 1 downto 0);
    trunc_ln42_fu_286_p1 <= mul_ln73_fu_145_p2(8 - 1 downto 0);
    trunc_ln42_s_fu_493_p4 <= mul_ln73_25_fu_147_p2(21 downto 9);
    trunc_ln_fu_260_p4 <= mul_ln73_fu_145_p2(21 downto 9);
    xor_ln42_121_fu_426_p2 <= (select_ln42_fu_384_p3 xor ap_const_lv1_1);
    xor_ln42_122_fu_438_p2 <= (tmp_fu_252_p3 xor ap_const_lv1_1);
    xor_ln42_123_fu_462_p2 <= (or_ln42_100_fu_456_p2 xor ap_const_lv1_1);
    xor_ln42_124_fu_567_p2 <= (tmp_2792_fu_559_p3 xor ap_const_lv1_1);
    xor_ln42_125_fu_659_p2 <= (select_ln42_124_fu_617_p3 xor ap_const_lv1_1);
    xor_ln42_126_fu_671_p2 <= (tmp_2788_fu_485_p3 xor ap_const_lv1_1);
    xor_ln42_127_fu_695_p2 <= (or_ln42_101_fu_689_p2 xor ap_const_lv1_1);
    xor_ln42_128_fu_826_p2 <= (tmp_2798_fu_818_p3 xor ap_const_lv1_1);
    xor_ln42_129_fu_918_p2 <= (select_ln42_128_fu_876_p3 xor ap_const_lv1_1);
    xor_ln42_130_fu_930_p2 <= (tmp_2794_fu_744_p3 xor ap_const_lv1_1);
    xor_ln42_131_fu_954_p2 <= (or_ln42_102_fu_948_p2 xor ap_const_lv1_1);
    xor_ln42_132_fu_1059_p2 <= (tmp_2804_fu_1051_p3 xor ap_const_lv1_1);
    xor_ln42_133_fu_1151_p2 <= (select_ln42_132_fu_1109_p3 xor ap_const_lv1_1);
    xor_ln42_134_fu_1163_p2 <= (tmp_2800_fu_977_p3 xor ap_const_lv1_1);
    xor_ln42_135_fu_1187_p2 <= (or_ln42_103_fu_1181_p2 xor ap_const_lv1_1);
    xor_ln42_136_fu_400_p2 <= (tmp_2787_fu_392_p3 xor ap_const_lv1_1);
    xor_ln42_137_fu_633_p2 <= (tmp_2793_fu_625_p3 xor ap_const_lv1_1);
    xor_ln42_138_fu_892_p2 <= (tmp_2799_fu_884_p3 xor ap_const_lv1_1);
    xor_ln42_139_fu_1125_p2 <= (tmp_2805_fu_1117_p3 xor ap_const_lv1_1);
    xor_ln42_fu_334_p2 <= (tmp_2786_fu_326_p3 xor ap_const_lv1_1);
    xor_ln58_57_fu_1305_p2 <= (tmp_2807_fu_1285_p3 xor ap_const_lv1_1);
    xor_ln58_58_fu_1317_p2 <= (tmp_2807_fu_1285_p3 xor tmp_2806_fu_1277_p3);
    xor_ln58_59_fu_1323_p2 <= (xor_ln58_58_fu_1317_p2 xor ap_const_lv1_1);
    xor_ln58_60_fu_1395_p2 <= (tmp_2808_fu_1379_p3 xor ap_const_lv1_1);
    xor_ln58_61_fu_1407_p2 <= (tmp_2809_fu_1387_p3 xor ap_const_lv1_1);
    xor_ln58_62_fu_1419_p2 <= (tmp_2809_fu_1387_p3 xor tmp_2808_fu_1379_p3);
    xor_ln58_63_fu_1425_p2 <= (xor_ln58_62_fu_1419_p2 xor ap_const_lv1_1);
    xor_ln58_fu_1293_p2 <= (tmp_2806_fu_1277_p3 xor ap_const_lv1_1);
    zext_ln42_25_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln42_223_fu_543_p2),13));
    zext_ln42_26_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln42_230_fu_802_p2),13));
    zext_ln42_27_fu_1041_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln42_237_fu_1035_p2),13));
    zext_ln42_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln42_fu_310_p2),13));
end behav;
