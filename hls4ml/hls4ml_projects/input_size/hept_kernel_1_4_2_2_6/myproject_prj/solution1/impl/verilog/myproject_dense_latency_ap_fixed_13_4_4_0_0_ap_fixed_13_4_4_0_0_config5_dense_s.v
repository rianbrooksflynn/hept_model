// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_latency_ap_fixed_13_4_4_0_0_ap_fixed_13_4_4_0_0_config5_dense_s (
        ap_clk,
        ap_rst,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        data_5_val,
        data_6_val,
        data_7_val,
        data_8_val,
        data_9_val,
        data_10_val,
        data_11_val,
        data_12_val,
        data_13_val,
        data_14_val,
        data_15_val,
        weights_0_val,
        weights_1_val,
        weights_2_val,
        weights_3_val,
        weights_4_val,
        weights_5_val,
        weights_6_val,
        weights_7_val,
        idx,
        ap_return_0,
        ap_return_1,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [12:0] data_0_val;
input  [12:0] data_1_val;
input  [12:0] data_2_val;
input  [12:0] data_3_val;
input  [12:0] data_4_val;
input  [12:0] data_5_val;
input  [12:0] data_6_val;
input  [12:0] data_7_val;
input  [12:0] data_8_val;
input  [12:0] data_9_val;
input  [12:0] data_10_val;
input  [12:0] data_11_val;
input  [12:0] data_12_val;
input  [12:0] data_13_val;
input  [12:0] data_14_val;
input  [12:0] data_15_val;
input  [12:0] weights_0_val;
input  [12:0] weights_1_val;
input  [12:0] weights_2_val;
input  [12:0] weights_3_val;
input  [12:0] weights_4_val;
input  [12:0] weights_5_val;
input  [12:0] weights_6_val;
input  [12:0] weights_7_val;
input  [3:0] idx;
output  [12:0] ap_return_0;
output  [12:0] ap_return_1;
input   ap_ce;

reg[12:0] ap_return_0;
reg[12:0] ap_return_1;

wire   [0:0] tmp_fu_610_p3;
reg   [0:0] tmp_reg_3347;
wire    ap_block_pp0_stage0_11001;
wire   [12:0] add_ln42_fu_678_p2;
reg   [12:0] add_ln42_reg_3352;
wire   [0:0] and_ln42_56_fu_698_p2;
reg   [0:0] and_ln42_56_reg_3357;
wire   [0:0] icmp_ln42_33_fu_730_p2;
reg   [0:0] icmp_ln42_33_reg_3362;
wire   [0:0] and_ln42_59_fu_796_p2;
reg   [0:0] and_ln42_59_reg_3367;
wire   [0:0] and_ln42_60_fu_802_p2;
reg   [0:0] and_ln42_60_reg_3373;
wire   [0:0] tmp_2791_fu_813_p3;
reg   [0:0] tmp_2791_reg_3378;
wire   [12:0] add_ln42_8_fu_881_p2;
reg   [12:0] add_ln42_8_reg_3383;
wire   [0:0] and_ln42_63_fu_901_p2;
reg   [0:0] and_ln42_63_reg_3388;
wire   [0:0] icmp_ln42_37_fu_933_p2;
reg   [0:0] icmp_ln42_37_reg_3393;
wire   [0:0] and_ln42_66_fu_999_p2;
reg   [0:0] and_ln42_66_reg_3398;
wire   [0:0] and_ln42_67_fu_1005_p2;
reg   [0:0] and_ln42_67_reg_3404;
wire   [0:0] tmp_2797_fu_1082_p3;
reg   [0:0] tmp_2797_reg_3409;
wire   [12:0] add_ln42_9_fu_1150_p2;
reg   [12:0] add_ln42_9_reg_3414;
wire   [0:0] and_ln42_70_fu_1170_p2;
reg   [0:0] and_ln42_70_reg_3419;
wire   [0:0] icmp_ln42_41_fu_1202_p2;
reg   [0:0] icmp_ln42_41_reg_3424;
wire   [0:0] and_ln42_73_fu_1268_p2;
reg   [0:0] and_ln42_73_reg_3429;
wire   [0:0] and_ln42_74_fu_1274_p2;
reg   [0:0] and_ln42_74_reg_3435;
wire   [0:0] tmp_2803_fu_1285_p3;
reg   [0:0] tmp_2803_reg_3440;
wire   [12:0] add_ln42_10_fu_1353_p2;
reg   [12:0] add_ln42_10_reg_3445;
wire   [0:0] and_ln42_77_fu_1373_p2;
reg   [0:0] and_ln42_77_reg_3450;
wire   [0:0] icmp_ln42_45_fu_1405_p2;
reg   [0:0] icmp_ln42_45_reg_3455;
wire   [0:0] and_ln42_80_fu_1471_p2;
reg   [0:0] and_ln42_80_reg_3460;
wire   [0:0] and_ln42_81_fu_1477_p2;
reg   [0:0] and_ln42_81_reg_3466;
wire   [0:0] tmp_2809_fu_1554_p3;
reg   [0:0] tmp_2809_reg_3471;
wire   [12:0] add_ln42_11_fu_1622_p2;
reg   [12:0] add_ln42_11_reg_3476;
wire   [0:0] and_ln42_84_fu_1642_p2;
reg   [0:0] and_ln42_84_reg_3481;
wire   [0:0] icmp_ln42_49_fu_1674_p2;
reg   [0:0] icmp_ln42_49_reg_3486;
wire   [0:0] and_ln42_87_fu_1740_p2;
reg   [0:0] and_ln42_87_reg_3491;
wire   [0:0] and_ln42_88_fu_1746_p2;
reg   [0:0] and_ln42_88_reg_3497;
wire   [0:0] tmp_2815_fu_1757_p3;
reg   [0:0] tmp_2815_reg_3502;
wire   [12:0] add_ln42_12_fu_1825_p2;
reg   [12:0] add_ln42_12_reg_3507;
wire   [0:0] and_ln42_91_fu_1845_p2;
reg   [0:0] and_ln42_91_reg_3512;
wire   [0:0] icmp_ln42_53_fu_1877_p2;
reg   [0:0] icmp_ln42_53_reg_3517;
wire   [0:0] and_ln42_94_fu_1943_p2;
reg   [0:0] and_ln42_94_reg_3522;
wire   [0:0] and_ln42_95_fu_1949_p2;
reg   [0:0] and_ln42_95_reg_3528;
wire   [0:0] tmp_2821_fu_2026_p3;
reg   [0:0] tmp_2821_reg_3533;
wire   [12:0] add_ln42_13_fu_2094_p2;
reg   [12:0] add_ln42_13_reg_3538;
wire   [0:0] and_ln42_98_fu_2114_p2;
reg   [0:0] and_ln42_98_reg_3543;
wire   [0:0] icmp_ln42_57_fu_2146_p2;
reg   [0:0] icmp_ln42_57_reg_3548;
wire   [0:0] and_ln42_101_fu_2212_p2;
reg   [0:0] and_ln42_101_reg_3553;
wire   [0:0] and_ln42_102_fu_2218_p2;
reg   [0:0] and_ln42_102_reg_3559;
wire   [0:0] tmp_2827_fu_2229_p3;
reg   [0:0] tmp_2827_reg_3564;
wire   [12:0] add_ln42_14_fu_2297_p2;
reg   [12:0] add_ln42_14_reg_3569;
wire   [0:0] and_ln42_105_fu_2317_p2;
reg   [0:0] and_ln42_105_reg_3574;
wire   [0:0] icmp_ln42_61_fu_2349_p2;
reg   [0:0] icmp_ln42_61_reg_3579;
wire   [0:0] and_ln42_108_fu_2415_p2;
reg   [0:0] and_ln42_108_reg_3584;
wire   [0:0] and_ln42_109_fu_2421_p2;
reg   [0:0] and_ln42_109_reg_3590;
wire   [12:0] add_ln58_16_fu_3155_p2;
reg   [12:0] add_ln58_16_reg_3595;
reg   [0:0] tmp_2841_reg_3601;
reg   [0:0] tmp_2842_reg_3608;
wire   [12:0] add_ln58_17_fu_3191_p2;
reg   [12:0] add_ln58_17_reg_3615;
reg   [0:0] tmp_2843_reg_3621;
reg   [0:0] tmp_2844_reg_3628;
wire  signed [12:0] mul_ln73_10_fu_290_p0;
wire  signed [25:0] sext_ln73_14_fu_1071_p1;
wire    ap_block_pp0_stage0;
wire  signed [12:0] mul_ln73_14_fu_291_p0;
wire  signed [25:0] sext_ln73_20_fu_2015_p1;
wire  signed [12:0] mul_ln73_12_fu_292_p0;
wire  signed [25:0] sext_ln73_17_fu_1543_p1;
wire  signed [12:0] mul_ln73_13_fu_293_p0;
wire  signed [12:0] mul_ln73_8_fu_294_p0;
wire  signed [25:0] sext_ln73_fu_599_p1;
wire  signed [12:0] mul_ln73_11_fu_295_p0;
wire  signed [12:0] mul_ln73_9_fu_296_p0;
wire  signed [12:0] mul_ln73_fu_297_p0;
wire   [12:0] a_fu_539_p27;
wire   [12:0] a_fu_539_p29;
wire   [25:0] mul_ln73_fu_297_p2;
wire   [7:0] trunc_ln42_fu_644_p1;
wire   [0:0] tmp_2786_fu_628_p3;
wire   [0:0] icmp_ln42_fu_648_p2;
wire   [0:0] or_ln42_fu_662_p2;
wire   [0:0] tmp_2787_fu_636_p3;
wire   [0:0] and_ln42_fu_668_p2;
wire   [12:0] trunc_ln_fu_618_p4;
wire   [12:0] zext_ln42_fu_674_p1;
wire   [0:0] tmp_2789_fu_684_p3;
wire   [0:0] tmp_2788_fu_654_p3;
wire   [0:0] xor_ln42_fu_692_p2;
wire   [2:0] tmp_8_fu_704_p4;
wire   [3:0] tmp_s_fu_720_p4;
wire   [0:0] icmp_ln42_34_fu_736_p2;
wire   [0:0] tmp_2790_fu_750_p3;
wire   [0:0] icmp_ln42_32_fu_714_p2;
wire   [0:0] xor_ln42_63_fu_758_p2;
wire   [0:0] and_ln42_57_fu_764_p2;
wire   [0:0] select_ln42_fu_742_p3;
wire   [0:0] xor_ln42_32_fu_778_p2;
wire   [0:0] or_ln42_24_fu_784_p2;
wire   [0:0] xor_ln42_33_fu_790_p2;
wire   [0:0] select_ln42_32_fu_770_p3;
wire   [25:0] mul_ln73_8_fu_294_p2;
wire   [7:0] trunc_ln42_15_fu_847_p1;
wire   [0:0] tmp_2792_fu_831_p3;
wire   [0:0] icmp_ln42_35_fu_851_p2;
wire   [0:0] or_ln42_26_fu_865_p2;
wire   [0:0] tmp_2793_fu_839_p3;
wire   [0:0] and_ln42_62_fu_871_p2;
wire   [12:0] trunc_ln42_8_fu_821_p4;
wire   [12:0] zext_ln42_8_fu_877_p1;
wire   [0:0] tmp_2795_fu_887_p3;
wire   [0:0] tmp_2794_fu_857_p3;
wire   [0:0] xor_ln42_35_fu_895_p2;
wire   [2:0] tmp_1039_fu_907_p4;
wire   [3:0] tmp_1040_fu_923_p4;
wire   [0:0] icmp_ln42_38_fu_939_p2;
wire   [0:0] tmp_2796_fu_953_p3;
wire   [0:0] icmp_ln42_36_fu_917_p2;
wire   [0:0] xor_ln42_64_fu_961_p2;
wire   [0:0] and_ln42_64_fu_967_p2;
wire   [0:0] select_ln42_35_fu_945_p3;
wire   [0:0] xor_ln42_36_fu_981_p2;
wire   [0:0] or_ln42_27_fu_987_p2;
wire   [0:0] xor_ln42_37_fu_993_p2;
wire   [0:0] select_ln42_36_fu_973_p3;
wire   [12:0] a_4_fu_1011_p27;
wire   [12:0] a_4_fu_1011_p29;
wire   [25:0] mul_ln73_9_fu_296_p2;
wire   [7:0] trunc_ln42_16_fu_1116_p1;
wire   [0:0] tmp_2798_fu_1100_p3;
wire   [0:0] icmp_ln42_39_fu_1120_p2;
wire   [0:0] or_ln42_29_fu_1134_p2;
wire   [0:0] tmp_2799_fu_1108_p3;
wire   [0:0] and_ln42_69_fu_1140_p2;
wire   [12:0] trunc_ln42_9_fu_1090_p4;
wire   [12:0] zext_ln42_9_fu_1146_p1;
wire   [0:0] tmp_2801_fu_1156_p3;
wire   [0:0] tmp_2800_fu_1126_p3;
wire   [0:0] xor_ln42_39_fu_1164_p2;
wire   [2:0] tmp_1041_fu_1176_p4;
wire   [3:0] tmp_1042_fu_1192_p4;
wire   [0:0] icmp_ln42_42_fu_1208_p2;
wire   [0:0] tmp_2802_fu_1222_p3;
wire   [0:0] icmp_ln42_40_fu_1186_p2;
wire   [0:0] xor_ln42_65_fu_1230_p2;
wire   [0:0] and_ln42_71_fu_1236_p2;
wire   [0:0] select_ln42_39_fu_1214_p3;
wire   [0:0] xor_ln42_40_fu_1250_p2;
wire   [0:0] or_ln42_30_fu_1256_p2;
wire   [0:0] xor_ln42_41_fu_1262_p2;
wire   [0:0] select_ln42_40_fu_1242_p3;
wire   [25:0] mul_ln73_10_fu_290_p2;
wire   [7:0] trunc_ln42_17_fu_1319_p1;
wire   [0:0] tmp_2804_fu_1303_p3;
wire   [0:0] icmp_ln42_43_fu_1323_p2;
wire   [0:0] or_ln42_32_fu_1337_p2;
wire   [0:0] tmp_2805_fu_1311_p3;
wire   [0:0] and_ln42_76_fu_1343_p2;
wire   [12:0] trunc_ln42_s_fu_1293_p4;
wire   [12:0] zext_ln42_10_fu_1349_p1;
wire   [0:0] tmp_2807_fu_1359_p3;
wire   [0:0] tmp_2806_fu_1329_p3;
wire   [0:0] xor_ln42_43_fu_1367_p2;
wire   [2:0] tmp_1043_fu_1379_p4;
wire   [3:0] tmp_1044_fu_1395_p4;
wire   [0:0] icmp_ln42_46_fu_1411_p2;
wire   [0:0] tmp_2808_fu_1425_p3;
wire   [0:0] icmp_ln42_44_fu_1389_p2;
wire   [0:0] xor_ln42_66_fu_1433_p2;
wire   [0:0] and_ln42_78_fu_1439_p2;
wire   [0:0] select_ln42_43_fu_1417_p3;
wire   [0:0] xor_ln42_44_fu_1453_p2;
wire   [0:0] or_ln42_33_fu_1459_p2;
wire   [0:0] xor_ln42_45_fu_1465_p2;
wire   [0:0] select_ln42_44_fu_1445_p3;
wire   [12:0] a_5_fu_1483_p27;
wire   [12:0] a_5_fu_1483_p29;
wire   [25:0] mul_ln73_11_fu_295_p2;
wire   [7:0] trunc_ln42_18_fu_1588_p1;
wire   [0:0] tmp_2810_fu_1572_p3;
wire   [0:0] icmp_ln42_47_fu_1592_p2;
wire   [0:0] or_ln42_35_fu_1606_p2;
wire   [0:0] tmp_2811_fu_1580_p3;
wire   [0:0] and_ln42_83_fu_1612_p2;
wire   [12:0] trunc_ln42_1_fu_1562_p4;
wire   [12:0] zext_ln42_11_fu_1618_p1;
wire   [0:0] tmp_2813_fu_1628_p3;
wire   [0:0] tmp_2812_fu_1598_p3;
wire   [0:0] xor_ln42_47_fu_1636_p2;
wire   [2:0] tmp_1045_fu_1648_p4;
wire   [3:0] tmp_1046_fu_1664_p4;
wire   [0:0] icmp_ln42_50_fu_1680_p2;
wire   [0:0] tmp_2814_fu_1694_p3;
wire   [0:0] icmp_ln42_48_fu_1658_p2;
wire   [0:0] xor_ln42_67_fu_1702_p2;
wire   [0:0] and_ln42_85_fu_1708_p2;
wire   [0:0] select_ln42_47_fu_1686_p3;
wire   [0:0] xor_ln42_48_fu_1722_p2;
wire   [0:0] or_ln42_36_fu_1728_p2;
wire   [0:0] xor_ln42_49_fu_1734_p2;
wire   [0:0] select_ln42_48_fu_1714_p3;
wire   [25:0] mul_ln73_12_fu_292_p2;
wire   [7:0] trunc_ln42_19_fu_1791_p1;
wire   [0:0] tmp_2816_fu_1775_p3;
wire   [0:0] icmp_ln42_51_fu_1795_p2;
wire   [0:0] or_ln42_38_fu_1809_p2;
wire   [0:0] tmp_2817_fu_1783_p3;
wire   [0:0] and_ln42_90_fu_1815_p2;
wire   [12:0] trunc_ln42_2_fu_1765_p4;
wire   [12:0] zext_ln42_12_fu_1821_p1;
wire   [0:0] tmp_2819_fu_1831_p3;
wire   [0:0] tmp_2818_fu_1801_p3;
wire   [0:0] xor_ln42_51_fu_1839_p2;
wire   [2:0] tmp_1047_fu_1851_p4;
wire   [3:0] tmp_1048_fu_1867_p4;
wire   [0:0] icmp_ln42_54_fu_1883_p2;
wire   [0:0] tmp_2820_fu_1897_p3;
wire   [0:0] icmp_ln42_52_fu_1861_p2;
wire   [0:0] xor_ln42_68_fu_1905_p2;
wire   [0:0] and_ln42_92_fu_1911_p2;
wire   [0:0] select_ln42_51_fu_1889_p3;
wire   [0:0] xor_ln42_52_fu_1925_p2;
wire   [0:0] or_ln42_39_fu_1931_p2;
wire   [0:0] xor_ln42_53_fu_1937_p2;
wire   [0:0] select_ln42_52_fu_1917_p3;
wire   [12:0] a_6_fu_1955_p27;
wire   [12:0] a_6_fu_1955_p29;
wire   [25:0] mul_ln73_13_fu_293_p2;
wire   [7:0] trunc_ln42_20_fu_2060_p1;
wire   [0:0] tmp_2822_fu_2044_p3;
wire   [0:0] icmp_ln42_55_fu_2064_p2;
wire   [0:0] or_ln42_41_fu_2078_p2;
wire   [0:0] tmp_2823_fu_2052_p3;
wire   [0:0] and_ln42_97_fu_2084_p2;
wire   [12:0] trunc_ln42_3_fu_2034_p4;
wire   [12:0] zext_ln42_13_fu_2090_p1;
wire   [0:0] tmp_2825_fu_2100_p3;
wire   [0:0] tmp_2824_fu_2070_p3;
wire   [0:0] xor_ln42_55_fu_2108_p2;
wire   [2:0] tmp_1049_fu_2120_p4;
wire   [3:0] tmp_1050_fu_2136_p4;
wire   [0:0] icmp_ln42_58_fu_2152_p2;
wire   [0:0] tmp_2826_fu_2166_p3;
wire   [0:0] icmp_ln42_56_fu_2130_p2;
wire   [0:0] xor_ln42_69_fu_2174_p2;
wire   [0:0] and_ln42_99_fu_2180_p2;
wire   [0:0] select_ln42_55_fu_2158_p3;
wire   [0:0] xor_ln42_56_fu_2194_p2;
wire   [0:0] or_ln42_42_fu_2200_p2;
wire   [0:0] xor_ln42_57_fu_2206_p2;
wire   [0:0] select_ln42_56_fu_2186_p3;
wire   [25:0] mul_ln73_14_fu_291_p2;
wire   [7:0] trunc_ln42_21_fu_2263_p1;
wire   [0:0] tmp_2828_fu_2247_p3;
wire   [0:0] icmp_ln42_59_fu_2267_p2;
wire   [0:0] or_ln42_44_fu_2281_p2;
wire   [0:0] tmp_2829_fu_2255_p3;
wire   [0:0] and_ln42_104_fu_2287_p2;
wire   [12:0] trunc_ln42_4_fu_2237_p4;
wire   [12:0] zext_ln42_14_fu_2293_p1;
wire   [0:0] tmp_2831_fu_2303_p3;
wire   [0:0] tmp_2830_fu_2273_p3;
wire   [0:0] xor_ln42_59_fu_2311_p2;
wire   [2:0] tmp_1051_fu_2323_p4;
wire   [3:0] tmp_1052_fu_2339_p4;
wire   [0:0] icmp_ln42_62_fu_2355_p2;
wire   [0:0] tmp_2832_fu_2369_p3;
wire   [0:0] icmp_ln42_60_fu_2333_p2;
wire   [0:0] xor_ln42_70_fu_2377_p2;
wire   [0:0] and_ln42_106_fu_2383_p2;
wire   [0:0] select_ln42_59_fu_2361_p3;
wire   [0:0] xor_ln42_60_fu_2397_p2;
wire   [0:0] or_ln42_45_fu_2403_p2;
wire   [0:0] xor_ln42_61_fu_2409_p2;
wire   [0:0] select_ln42_60_fu_2389_p3;
wire   [0:0] and_ln42_58_fu_2427_p2;
wire   [0:0] or_ln42_47_fu_2431_p2;
wire   [0:0] xor_ln42_34_fu_2436_p2;
wire   [0:0] and_ln42_61_fu_2442_p2;
wire   [0:0] or_ln42_25_fu_2454_p2;
wire   [12:0] select_ln42_33_fu_2447_p3;
wire   [0:0] and_ln42_65_fu_2466_p2;
wire   [0:0] or_ln42_48_fu_2470_p2;
wire   [0:0] xor_ln42_38_fu_2475_p2;
wire   [0:0] and_ln42_68_fu_2481_p2;
wire   [0:0] or_ln42_28_fu_2493_p2;
wire   [12:0] select_ln42_37_fu_2486_p3;
wire   [0:0] and_ln42_72_fu_2505_p2;
wire   [0:0] or_ln42_49_fu_2509_p2;
wire   [0:0] xor_ln42_42_fu_2514_p2;
wire   [0:0] and_ln42_75_fu_2520_p2;
wire   [0:0] or_ln42_31_fu_2532_p2;
wire   [12:0] select_ln42_41_fu_2525_p3;
wire   [0:0] and_ln42_79_fu_2544_p2;
wire   [0:0] or_ln42_50_fu_2548_p2;
wire   [0:0] xor_ln42_46_fu_2553_p2;
wire   [0:0] and_ln42_82_fu_2559_p2;
wire   [0:0] or_ln42_34_fu_2571_p2;
wire   [12:0] select_ln42_45_fu_2564_p3;
wire   [0:0] and_ln42_86_fu_2583_p2;
wire   [0:0] or_ln42_51_fu_2587_p2;
wire   [0:0] xor_ln42_50_fu_2592_p2;
wire   [0:0] and_ln42_89_fu_2598_p2;
wire   [0:0] or_ln42_37_fu_2610_p2;
wire   [12:0] select_ln42_49_fu_2603_p3;
wire   [0:0] and_ln42_93_fu_2622_p2;
wire   [0:0] or_ln42_52_fu_2626_p2;
wire   [0:0] xor_ln42_54_fu_2631_p2;
wire   [0:0] and_ln42_96_fu_2637_p2;
wire   [0:0] or_ln42_40_fu_2649_p2;
wire   [12:0] select_ln42_53_fu_2642_p3;
wire   [0:0] and_ln42_100_fu_2661_p2;
wire   [0:0] or_ln42_53_fu_2665_p2;
wire   [0:0] xor_ln42_58_fu_2670_p2;
wire   [0:0] and_ln42_103_fu_2676_p2;
wire   [0:0] or_ln42_43_fu_2688_p2;
wire   [12:0] select_ln42_57_fu_2681_p3;
wire   [0:0] and_ln42_107_fu_2700_p2;
wire   [0:0] or_ln42_54_fu_2704_p2;
wire   [0:0] xor_ln42_62_fu_2709_p2;
wire   [0:0] and_ln42_110_fu_2715_p2;
wire   [0:0] or_ln42_46_fu_2727_p2;
wire   [12:0] select_ln42_61_fu_2720_p3;
wire  signed [12:0] select_ln42_34_fu_2459_p3;
wire  signed [12:0] select_ln42_42_fu_2537_p3;
wire  signed [13:0] sext_ln58_12_fu_2743_p1;
wire  signed [13:0] sext_ln58_fu_2739_p1;
wire   [13:0] add_ln58_fu_2753_p2;
wire   [12:0] add_ln58_12_fu_2747_p2;
wire   [0:0] tmp_2833_fu_2759_p3;
wire   [0:0] tmp_2834_fu_2767_p3;
wire   [0:0] xor_ln58_fu_2775_p2;
wire   [0:0] xor_ln58_24_fu_2787_p2;
wire   [0:0] xor_ln58_25_fu_2799_p2;
wire   [0:0] and_ln58_fu_2781_p2;
wire   [0:0] xor_ln58_26_fu_2805_p2;
wire   [0:0] and_ln58_12_fu_2793_p2;
wire   [0:0] or_ln58_fu_2811_p2;
wire   [12:0] select_ln58_fu_2817_p3;
wire   [12:0] select_ln58_18_fu_2825_p3;
wire  signed [12:0] select_ln42_38_fu_2498_p3;
wire  signed [12:0] select_ln42_46_fu_2576_p3;
wire  signed [13:0] sext_ln58_14_fu_2845_p1;
wire  signed [13:0] sext_ln58_13_fu_2841_p1;
wire   [13:0] add_ln58_6_fu_2855_p2;
wire   [12:0] add_ln58_13_fu_2849_p2;
wire   [0:0] tmp_2835_fu_2861_p3;
wire   [0:0] tmp_2836_fu_2869_p3;
wire   [0:0] xor_ln58_27_fu_2877_p2;
wire   [0:0] xor_ln58_28_fu_2889_p2;
wire   [0:0] xor_ln58_29_fu_2901_p2;
wire   [0:0] and_ln58_13_fu_2883_p2;
wire   [0:0] xor_ln58_30_fu_2907_p2;
wire   [0:0] and_ln58_14_fu_2895_p2;
wire   [0:0] or_ln58_6_fu_2913_p2;
wire   [12:0] select_ln58_20_fu_2919_p3;
wire   [12:0] select_ln58_21_fu_2927_p3;
wire  signed [12:0] select_ln58_19_fu_2833_p3;
wire  signed [12:0] select_ln42_50_fu_2615_p3;
wire  signed [13:0] sext_ln58_16_fu_2947_p1;
wire  signed [13:0] sext_ln58_15_fu_2943_p1;
wire   [13:0] add_ln58_7_fu_2957_p2;
wire   [12:0] add_ln58_14_fu_2951_p2;
wire   [0:0] tmp_2837_fu_2963_p3;
wire   [0:0] tmp_2838_fu_2971_p3;
wire   [0:0] xor_ln58_31_fu_2979_p2;
wire   [0:0] xor_ln58_32_fu_2991_p2;
wire   [0:0] xor_ln58_33_fu_3003_p2;
wire   [0:0] and_ln58_15_fu_2985_p2;
wire   [0:0] xor_ln58_34_fu_3009_p2;
wire   [0:0] and_ln58_16_fu_2997_p2;
wire   [0:0] or_ln58_7_fu_3015_p2;
wire   [12:0] select_ln58_23_fu_3021_p3;
wire   [12:0] select_ln58_24_fu_3029_p3;
wire  signed [12:0] select_ln58_22_fu_2935_p3;
wire  signed [12:0] select_ln42_54_fu_2654_p3;
wire  signed [13:0] sext_ln58_18_fu_3049_p1;
wire  signed [13:0] sext_ln58_17_fu_3045_p1;
wire   [13:0] add_ln58_8_fu_3059_p2;
wire   [12:0] add_ln58_15_fu_3053_p2;
wire   [0:0] tmp_2839_fu_3065_p3;
wire   [0:0] tmp_2840_fu_3073_p3;
wire   [0:0] xor_ln58_35_fu_3081_p2;
wire   [0:0] xor_ln58_36_fu_3093_p2;
wire   [0:0] xor_ln58_37_fu_3105_p2;
wire   [0:0] and_ln58_17_fu_3087_p2;
wire   [0:0] xor_ln58_38_fu_3111_p2;
wire   [0:0] and_ln58_18_fu_3099_p2;
wire   [0:0] or_ln58_8_fu_3117_p2;
wire   [12:0] select_ln58_26_fu_3123_p3;
wire   [12:0] select_ln58_27_fu_3131_p3;
wire  signed [12:0] select_ln58_25_fu_3037_p3;
wire  signed [12:0] select_ln42_58_fu_2693_p3;
wire  signed [13:0] sext_ln58_20_fu_3151_p1;
wire  signed [13:0] sext_ln58_19_fu_3147_p1;
wire   [13:0] add_ln58_9_fu_3161_p2;
wire  signed [12:0] select_ln58_28_fu_3139_p3;
wire  signed [12:0] select_ln42_62_fu_2732_p3;
wire  signed [13:0] sext_ln58_22_fu_3187_p1;
wire  signed [13:0] sext_ln58_21_fu_3183_p1;
wire   [13:0] add_ln58_10_fu_3197_p2;
wire   [0:0] xor_ln58_39_fu_3219_p2;
wire   [0:0] xor_ln58_40_fu_3229_p2;
wire   [0:0] xor_ln58_41_fu_3239_p2;
wire   [0:0] and_ln58_19_fu_3224_p2;
wire   [0:0] xor_ln58_42_fu_3243_p2;
wire   [0:0] and_ln58_20_fu_3234_p2;
wire   [0:0] or_ln58_9_fu_3249_p2;
wire   [12:0] select_ln58_29_fu_3255_p3;
wire   [12:0] select_ln58_30_fu_3262_p3;
wire   [0:0] xor_ln58_43_fu_3277_p2;
wire   [0:0] xor_ln58_44_fu_3287_p2;
wire   [0:0] xor_ln58_45_fu_3297_p2;
wire   [0:0] and_ln58_21_fu_3282_p2;
wire   [0:0] xor_ln58_46_fu_3301_p2;
wire   [0:0] and_ln58_22_fu_3292_p2;
wire   [0:0] or_ln58_10_fu_3307_p2;
wire   [12:0] select_ln58_32_fu_3313_p3;
wire   [12:0] select_ln58_33_fu_3320_p3;
wire   [12:0] select_ln58_31_fu_3269_p3;
wire   [12:0] select_ln58_34_fu_3327_p3;
reg    ap_ce_reg;
reg   [12:0] data_0_val_int_reg;
reg   [12:0] data_1_val_int_reg;
reg   [12:0] data_2_val_int_reg;
reg   [12:0] data_3_val_int_reg;
reg   [12:0] data_4_val_int_reg;
reg   [12:0] data_5_val_int_reg;
reg   [12:0] data_6_val_int_reg;
reg   [12:0] data_7_val_int_reg;
reg   [12:0] data_8_val_int_reg;
reg   [12:0] data_9_val_int_reg;
reg   [12:0] data_10_val_int_reg;
reg   [12:0] data_11_val_int_reg;
reg   [12:0] data_12_val_int_reg;
reg   [12:0] data_13_val_int_reg;
reg   [12:0] data_14_val_int_reg;
reg   [12:0] data_15_val_int_reg;
reg  signed [12:0] weights_0_val_int_reg;
reg  signed [12:0] weights_1_val_int_reg;
reg  signed [12:0] weights_2_val_int_reg;
reg  signed [12:0] weights_3_val_int_reg;
reg  signed [12:0] weights_4_val_int_reg;
reg  signed [12:0] weights_5_val_int_reg;
reg  signed [12:0] weights_6_val_int_reg;
reg  signed [12:0] weights_7_val_int_reg;
reg   [3:0] idx_int_reg;
reg   [12:0] ap_return_0_int_reg;
reg   [12:0] ap_return_1_int_reg;
wire   [3:0] a_fu_539_p1;
wire   [3:0] a_fu_539_p3;
wire   [3:0] a_fu_539_p5;
wire   [3:0] a_fu_539_p7;
wire   [3:0] a_fu_539_p9;
wire   [3:0] a_fu_539_p11;
wire   [3:0] a_fu_539_p13;
wire   [3:0] a_fu_539_p15;
wire  signed [3:0] a_fu_539_p17;
wire  signed [3:0] a_fu_539_p19;
wire  signed [3:0] a_fu_539_p21;
wire  signed [3:0] a_fu_539_p23;
wire  signed [3:0] a_fu_539_p25;
wire   [3:0] a_4_fu_1011_p1;
wire   [3:0] a_4_fu_1011_p3;
wire   [3:0] a_4_fu_1011_p5;
wire   [3:0] a_4_fu_1011_p7;
wire   [3:0] a_4_fu_1011_p9;
wire   [3:0] a_4_fu_1011_p11;
wire   [3:0] a_4_fu_1011_p13;
wire   [3:0] a_4_fu_1011_p15;
wire  signed [3:0] a_4_fu_1011_p17;
wire  signed [3:0] a_4_fu_1011_p19;
wire  signed [3:0] a_4_fu_1011_p21;
wire  signed [3:0] a_4_fu_1011_p23;
wire  signed [3:0] a_4_fu_1011_p25;
wire   [3:0] a_5_fu_1483_p1;
wire   [3:0] a_5_fu_1483_p3;
wire   [3:0] a_5_fu_1483_p5;
wire   [3:0] a_5_fu_1483_p7;
wire   [3:0] a_5_fu_1483_p9;
wire   [3:0] a_5_fu_1483_p11;
wire   [3:0] a_5_fu_1483_p13;
wire   [3:0] a_5_fu_1483_p15;
wire  signed [3:0] a_5_fu_1483_p17;
wire  signed [3:0] a_5_fu_1483_p19;
wire  signed [3:0] a_5_fu_1483_p21;
wire  signed [3:0] a_5_fu_1483_p23;
wire  signed [3:0] a_5_fu_1483_p25;
wire   [3:0] a_6_fu_1955_p1;
wire   [3:0] a_6_fu_1955_p3;
wire   [3:0] a_6_fu_1955_p5;
wire   [3:0] a_6_fu_1955_p7;
wire   [3:0] a_6_fu_1955_p9;
wire   [3:0] a_6_fu_1955_p11;
wire   [3:0] a_6_fu_1955_p13;
wire   [3:0] a_6_fu_1955_p15;
wire  signed [3:0] a_6_fu_1955_p17;
wire  signed [3:0] a_6_fu_1955_p19;
wire  signed [3:0] a_6_fu_1955_p21;
wire  signed [3:0] a_6_fu_1955_p23;
wire  signed [3:0] a_6_fu_1955_p25;

myproject_mul_13s_13s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_13s_13s_26_1_1_U591(
    .din0(mul_ln73_10_fu_290_p0),
    .din1(weights_3_val_int_reg),
    .dout(mul_ln73_10_fu_290_p2)
);

myproject_mul_13s_13s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_13s_13s_26_1_1_U592(
    .din0(mul_ln73_14_fu_291_p0),
    .din1(weights_7_val_int_reg),
    .dout(mul_ln73_14_fu_291_p2)
);

myproject_mul_13s_13s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_13s_13s_26_1_1_U593(
    .din0(mul_ln73_12_fu_292_p0),
    .din1(weights_5_val_int_reg),
    .dout(mul_ln73_12_fu_292_p2)
);

myproject_mul_13s_13s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_13s_13s_26_1_1_U594(
    .din0(mul_ln73_13_fu_293_p0),
    .din1(weights_6_val_int_reg),
    .dout(mul_ln73_13_fu_293_p2)
);

myproject_mul_13s_13s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_13s_13s_26_1_1_U595(
    .din0(mul_ln73_8_fu_294_p0),
    .din1(weights_1_val_int_reg),
    .dout(mul_ln73_8_fu_294_p2)
);

myproject_mul_13s_13s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_13s_13s_26_1_1_U596(
    .din0(mul_ln73_11_fu_295_p0),
    .din1(weights_4_val_int_reg),
    .dout(mul_ln73_11_fu_295_p2)
);

myproject_mul_13s_13s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_13s_13s_26_1_1_U597(
    .din0(mul_ln73_9_fu_296_p0),
    .din1(weights_2_val_int_reg),
    .dout(mul_ln73_9_fu_296_p2)
);

myproject_mul_13s_13s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_13s_13s_26_1_1_U598(
    .din0(mul_ln73_fu_297_p0),
    .din1(weights_0_val_int_reg),
    .dout(mul_ln73_fu_297_p2)
);

myproject_sparsemux_27_4_13_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 13 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 13 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 13 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 13 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 13 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 13 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 13 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 13 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 13 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 13 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 13 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 13 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 13 ),
    .def_WIDTH( 13 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 13 ))
sparsemux_27_4_13_1_0_U599(
    .din0(data_0_val_int_reg),
    .din1(data_1_val_int_reg),
    .din2(data_2_val_int_reg),
    .din3(data_3_val_int_reg),
    .din4(data_4_val_int_reg),
    .din5(data_5_val_int_reg),
    .din6(data_6_val_int_reg),
    .din7(data_7_val_int_reg),
    .din8(data_8_val_int_reg),
    .din9(data_9_val_int_reg),
    .din10(data_10_val_int_reg),
    .din11(data_11_val_int_reg),
    .din12(data_12_val_int_reg),
    .def(a_fu_539_p27),
    .sel(idx_int_reg),
    .dout(a_fu_539_p29)
);

myproject_sparsemux_27_4_13_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 13 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 13 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 13 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 13 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 13 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 13 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 13 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 13 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 13 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 13 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 13 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 13 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 13 ),
    .def_WIDTH( 13 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 13 ))
sparsemux_27_4_13_1_0_U600(
    .din0(data_1_val_int_reg),
    .din1(data_2_val_int_reg),
    .din2(data_3_val_int_reg),
    .din3(data_4_val_int_reg),
    .din4(data_5_val_int_reg),
    .din5(data_6_val_int_reg),
    .din6(data_7_val_int_reg),
    .din7(data_8_val_int_reg),
    .din8(data_9_val_int_reg),
    .din9(data_10_val_int_reg),
    .din10(data_11_val_int_reg),
    .din11(data_12_val_int_reg),
    .din12(data_13_val_int_reg),
    .def(a_4_fu_1011_p27),
    .sel(idx_int_reg),
    .dout(a_4_fu_1011_p29)
);

myproject_sparsemux_27_4_13_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 13 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 13 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 13 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 13 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 13 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 13 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 13 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 13 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 13 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 13 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 13 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 13 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 13 ),
    .def_WIDTH( 13 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 13 ))
sparsemux_27_4_13_1_0_U601(
    .din0(data_2_val_int_reg),
    .din1(data_3_val_int_reg),
    .din2(data_4_val_int_reg),
    .din3(data_5_val_int_reg),
    .din4(data_6_val_int_reg),
    .din5(data_7_val_int_reg),
    .din6(data_8_val_int_reg),
    .din7(data_9_val_int_reg),
    .din8(data_10_val_int_reg),
    .din9(data_11_val_int_reg),
    .din10(data_12_val_int_reg),
    .din11(data_13_val_int_reg),
    .din12(data_14_val_int_reg),
    .def(a_5_fu_1483_p27),
    .sel(idx_int_reg),
    .dout(a_5_fu_1483_p29)
);

myproject_sparsemux_27_4_13_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 13 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 13 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 13 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 13 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 13 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 13 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 13 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 13 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 13 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 13 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 13 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 13 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 13 ),
    .def_WIDTH( 13 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 13 ))
sparsemux_27_4_13_1_0_U602(
    .din0(data_3_val_int_reg),
    .din1(data_4_val_int_reg),
    .din2(data_5_val_int_reg),
    .din3(data_6_val_int_reg),
    .din4(data_7_val_int_reg),
    .din5(data_8_val_int_reg),
    .din6(data_9_val_int_reg),
    .din7(data_10_val_int_reg),
    .din8(data_11_val_int_reg),
    .din9(data_12_val_int_reg),
    .din10(data_13_val_int_reg),
    .din11(data_14_val_int_reg),
    .din12(data_15_val_int_reg),
    .def(a_6_fu_1955_p27),
    .sel(idx_int_reg),
    .dout(a_6_fu_1955_p29)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add_ln42_10_reg_3445 <= add_ln42_10_fu_1353_p2;
        add_ln42_11_reg_3476 <= add_ln42_11_fu_1622_p2;
        add_ln42_12_reg_3507 <= add_ln42_12_fu_1825_p2;
        add_ln42_13_reg_3538 <= add_ln42_13_fu_2094_p2;
        add_ln42_14_reg_3569 <= add_ln42_14_fu_2297_p2;
        add_ln42_8_reg_3383 <= add_ln42_8_fu_881_p2;
        add_ln42_9_reg_3414 <= add_ln42_9_fu_1150_p2;
        add_ln42_reg_3352 <= add_ln42_fu_678_p2;
        add_ln58_16_reg_3595 <= add_ln58_16_fu_3155_p2;
        add_ln58_17_reg_3615 <= add_ln58_17_fu_3191_p2;
        and_ln42_101_reg_3553 <= and_ln42_101_fu_2212_p2;
        and_ln42_102_reg_3559 <= and_ln42_102_fu_2218_p2;
        and_ln42_105_reg_3574 <= and_ln42_105_fu_2317_p2;
        and_ln42_108_reg_3584 <= and_ln42_108_fu_2415_p2;
        and_ln42_109_reg_3590 <= and_ln42_109_fu_2421_p2;
        and_ln42_56_reg_3357 <= and_ln42_56_fu_698_p2;
        and_ln42_59_reg_3367 <= and_ln42_59_fu_796_p2;
        and_ln42_60_reg_3373 <= and_ln42_60_fu_802_p2;
        and_ln42_63_reg_3388 <= and_ln42_63_fu_901_p2;
        and_ln42_66_reg_3398 <= and_ln42_66_fu_999_p2;
        and_ln42_67_reg_3404 <= and_ln42_67_fu_1005_p2;
        and_ln42_70_reg_3419 <= and_ln42_70_fu_1170_p2;
        and_ln42_73_reg_3429 <= and_ln42_73_fu_1268_p2;
        and_ln42_74_reg_3435 <= and_ln42_74_fu_1274_p2;
        and_ln42_77_reg_3450 <= and_ln42_77_fu_1373_p2;
        and_ln42_80_reg_3460 <= and_ln42_80_fu_1471_p2;
        and_ln42_81_reg_3466 <= and_ln42_81_fu_1477_p2;
        and_ln42_84_reg_3481 <= and_ln42_84_fu_1642_p2;
        and_ln42_87_reg_3491 <= and_ln42_87_fu_1740_p2;
        and_ln42_88_reg_3497 <= and_ln42_88_fu_1746_p2;
        and_ln42_91_reg_3512 <= and_ln42_91_fu_1845_p2;
        and_ln42_94_reg_3522 <= and_ln42_94_fu_1943_p2;
        and_ln42_95_reg_3528 <= and_ln42_95_fu_1949_p2;
        and_ln42_98_reg_3543 <= and_ln42_98_fu_2114_p2;
        icmp_ln42_33_reg_3362 <= icmp_ln42_33_fu_730_p2;
        icmp_ln42_37_reg_3393 <= icmp_ln42_37_fu_933_p2;
        icmp_ln42_41_reg_3424 <= icmp_ln42_41_fu_1202_p2;
        icmp_ln42_45_reg_3455 <= icmp_ln42_45_fu_1405_p2;
        icmp_ln42_49_reg_3486 <= icmp_ln42_49_fu_1674_p2;
        icmp_ln42_53_reg_3517 <= icmp_ln42_53_fu_1877_p2;
        icmp_ln42_57_reg_3548 <= icmp_ln42_57_fu_2146_p2;
        icmp_ln42_61_reg_3579 <= icmp_ln42_61_fu_2349_p2;
        tmp_2791_reg_3378 <= mul_ln73_8_fu_294_p2[32'd25];
        tmp_2797_reg_3409 <= mul_ln73_9_fu_296_p2[32'd25];
        tmp_2803_reg_3440 <= mul_ln73_10_fu_290_p2[32'd25];
        tmp_2809_reg_3471 <= mul_ln73_11_fu_295_p2[32'd25];
        tmp_2815_reg_3502 <= mul_ln73_12_fu_292_p2[32'd25];
        tmp_2821_reg_3533 <= mul_ln73_13_fu_293_p2[32'd25];
        tmp_2827_reg_3564 <= mul_ln73_14_fu_291_p2[32'd25];
        tmp_2841_reg_3601 <= add_ln58_9_fu_3161_p2[32'd13];
        tmp_2842_reg_3608 <= add_ln58_16_fu_3155_p2[32'd12];
        tmp_2843_reg_3621 <= add_ln58_10_fu_3197_p2[32'd13];
        tmp_2844_reg_3628 <= add_ln58_17_fu_3191_p2[32'd12];
        tmp_reg_3347 <= mul_ln73_fu_297_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= select_ln58_31_fu_3269_p3;
        ap_return_1_int_reg <= select_ln58_34_fu_3327_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        data_0_val_int_reg <= data_0_val;
        data_10_val_int_reg <= data_10_val;
        data_11_val_int_reg <= data_11_val;
        data_12_val_int_reg <= data_12_val;
        data_13_val_int_reg <= data_13_val;
        data_14_val_int_reg <= data_14_val;
        data_15_val_int_reg <= data_15_val;
        data_1_val_int_reg <= data_1_val;
        data_2_val_int_reg <= data_2_val;
        data_3_val_int_reg <= data_3_val;
        data_4_val_int_reg <= data_4_val;
        data_5_val_int_reg <= data_5_val;
        data_6_val_int_reg <= data_6_val;
        data_7_val_int_reg <= data_7_val;
        data_8_val_int_reg <= data_8_val;
        data_9_val_int_reg <= data_9_val;
        idx_int_reg <= idx;
        weights_0_val_int_reg <= weights_0_val;
        weights_1_val_int_reg <= weights_1_val;
        weights_2_val_int_reg <= weights_2_val;
        weights_3_val_int_reg <= weights_3_val;
        weights_4_val_int_reg <= weights_4_val;
        weights_5_val_int_reg <= weights_5_val;
        weights_6_val_int_reg <= weights_6_val;
        weights_7_val_int_reg <= weights_7_val;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = select_ln58_31_fu_3269_p3;
    end else begin
        ap_return_0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = select_ln58_34_fu_3327_p3;
    end else begin
        ap_return_1 = 'bx;
    end
end

assign a_4_fu_1011_p27 = 'bx;

assign a_5_fu_1483_p27 = 'bx;

assign a_6_fu_1955_p27 = 'bx;

assign a_fu_539_p27 = 'bx;

assign add_ln42_10_fu_1353_p2 = (trunc_ln42_s_fu_1293_p4 + zext_ln42_10_fu_1349_p1);

assign add_ln42_11_fu_1622_p2 = (trunc_ln42_1_fu_1562_p4 + zext_ln42_11_fu_1618_p1);

assign add_ln42_12_fu_1825_p2 = (trunc_ln42_2_fu_1765_p4 + zext_ln42_12_fu_1821_p1);

assign add_ln42_13_fu_2094_p2 = (trunc_ln42_3_fu_2034_p4 + zext_ln42_13_fu_2090_p1);

assign add_ln42_14_fu_2297_p2 = (trunc_ln42_4_fu_2237_p4 + zext_ln42_14_fu_2293_p1);

assign add_ln42_8_fu_881_p2 = (trunc_ln42_8_fu_821_p4 + zext_ln42_8_fu_877_p1);

assign add_ln42_9_fu_1150_p2 = (trunc_ln42_9_fu_1090_p4 + zext_ln42_9_fu_1146_p1);

assign add_ln42_fu_678_p2 = (trunc_ln_fu_618_p4 + zext_ln42_fu_674_p1);

assign add_ln58_10_fu_3197_p2 = ($signed(sext_ln58_22_fu_3187_p1) + $signed(sext_ln58_21_fu_3183_p1));

assign add_ln58_12_fu_2747_p2 = ($signed(select_ln42_42_fu_2537_p3) + $signed(select_ln42_34_fu_2459_p3));

assign add_ln58_13_fu_2849_p2 = ($signed(select_ln42_46_fu_2576_p3) + $signed(select_ln42_38_fu_2498_p3));

assign add_ln58_14_fu_2951_p2 = ($signed(select_ln42_50_fu_2615_p3) + $signed(select_ln58_19_fu_2833_p3));

assign add_ln58_15_fu_3053_p2 = ($signed(select_ln42_54_fu_2654_p3) + $signed(select_ln58_22_fu_2935_p3));

assign add_ln58_16_fu_3155_p2 = ($signed(select_ln42_58_fu_2693_p3) + $signed(select_ln58_25_fu_3037_p3));

assign add_ln58_17_fu_3191_p2 = ($signed(select_ln42_62_fu_2732_p3) + $signed(select_ln58_28_fu_3139_p3));

assign add_ln58_6_fu_2855_p2 = ($signed(sext_ln58_14_fu_2845_p1) + $signed(sext_ln58_13_fu_2841_p1));

assign add_ln58_7_fu_2957_p2 = ($signed(sext_ln58_16_fu_2947_p1) + $signed(sext_ln58_15_fu_2943_p1));

assign add_ln58_8_fu_3059_p2 = ($signed(sext_ln58_18_fu_3049_p1) + $signed(sext_ln58_17_fu_3045_p1));

assign add_ln58_9_fu_3161_p2 = ($signed(sext_ln58_20_fu_3151_p1) + $signed(sext_ln58_19_fu_3147_p1));

assign add_ln58_fu_2753_p2 = ($signed(sext_ln58_12_fu_2743_p1) + $signed(sext_ln58_fu_2739_p1));

assign and_ln42_100_fu_2661_p2 = (icmp_ln42_57_reg_3548 & and_ln42_98_reg_3543);

assign and_ln42_101_fu_2212_p2 = (xor_ln42_57_fu_2206_p2 & or_ln42_42_fu_2200_p2);

assign and_ln42_102_fu_2218_p2 = (tmp_2825_fu_2100_p3 & select_ln42_56_fu_2186_p3);

assign and_ln42_103_fu_2676_p2 = (xor_ln42_58_fu_2670_p2 & tmp_2821_reg_3533);

assign and_ln42_104_fu_2287_p2 = (tmp_2829_fu_2255_p3 & or_ln42_44_fu_2281_p2);

assign and_ln42_105_fu_2317_p2 = (xor_ln42_59_fu_2311_p2 & tmp_2830_fu_2273_p3);

assign and_ln42_106_fu_2383_p2 = (xor_ln42_70_fu_2377_p2 & icmp_ln42_60_fu_2333_p2);

assign and_ln42_107_fu_2700_p2 = (icmp_ln42_61_reg_3579 & and_ln42_105_reg_3574);

assign and_ln42_108_fu_2415_p2 = (xor_ln42_61_fu_2409_p2 & or_ln42_45_fu_2403_p2);

assign and_ln42_109_fu_2421_p2 = (tmp_2831_fu_2303_p3 & select_ln42_60_fu_2389_p3);

assign and_ln42_110_fu_2715_p2 = (xor_ln42_62_fu_2709_p2 & tmp_2827_reg_3564);

assign and_ln42_56_fu_698_p2 = (xor_ln42_fu_692_p2 & tmp_2788_fu_654_p3);

assign and_ln42_57_fu_764_p2 = (xor_ln42_63_fu_758_p2 & icmp_ln42_32_fu_714_p2);

assign and_ln42_58_fu_2427_p2 = (icmp_ln42_33_reg_3362 & and_ln42_56_reg_3357);

assign and_ln42_59_fu_796_p2 = (xor_ln42_33_fu_790_p2 & or_ln42_24_fu_784_p2);

assign and_ln42_60_fu_802_p2 = (tmp_2789_fu_684_p3 & select_ln42_32_fu_770_p3);

assign and_ln42_61_fu_2442_p2 = (xor_ln42_34_fu_2436_p2 & tmp_reg_3347);

assign and_ln42_62_fu_871_p2 = (tmp_2793_fu_839_p3 & or_ln42_26_fu_865_p2);

assign and_ln42_63_fu_901_p2 = (xor_ln42_35_fu_895_p2 & tmp_2794_fu_857_p3);

assign and_ln42_64_fu_967_p2 = (xor_ln42_64_fu_961_p2 & icmp_ln42_36_fu_917_p2);

assign and_ln42_65_fu_2466_p2 = (icmp_ln42_37_reg_3393 & and_ln42_63_reg_3388);

assign and_ln42_66_fu_999_p2 = (xor_ln42_37_fu_993_p2 & or_ln42_27_fu_987_p2);

assign and_ln42_67_fu_1005_p2 = (tmp_2795_fu_887_p3 & select_ln42_36_fu_973_p3);

assign and_ln42_68_fu_2481_p2 = (xor_ln42_38_fu_2475_p2 & tmp_2791_reg_3378);

assign and_ln42_69_fu_1140_p2 = (tmp_2799_fu_1108_p3 & or_ln42_29_fu_1134_p2);

assign and_ln42_70_fu_1170_p2 = (xor_ln42_39_fu_1164_p2 & tmp_2800_fu_1126_p3);

assign and_ln42_71_fu_1236_p2 = (xor_ln42_65_fu_1230_p2 & icmp_ln42_40_fu_1186_p2);

assign and_ln42_72_fu_2505_p2 = (icmp_ln42_41_reg_3424 & and_ln42_70_reg_3419);

assign and_ln42_73_fu_1268_p2 = (xor_ln42_41_fu_1262_p2 & or_ln42_30_fu_1256_p2);

assign and_ln42_74_fu_1274_p2 = (tmp_2801_fu_1156_p3 & select_ln42_40_fu_1242_p3);

assign and_ln42_75_fu_2520_p2 = (xor_ln42_42_fu_2514_p2 & tmp_2797_reg_3409);

assign and_ln42_76_fu_1343_p2 = (tmp_2805_fu_1311_p3 & or_ln42_32_fu_1337_p2);

assign and_ln42_77_fu_1373_p2 = (xor_ln42_43_fu_1367_p2 & tmp_2806_fu_1329_p3);

assign and_ln42_78_fu_1439_p2 = (xor_ln42_66_fu_1433_p2 & icmp_ln42_44_fu_1389_p2);

assign and_ln42_79_fu_2544_p2 = (icmp_ln42_45_reg_3455 & and_ln42_77_reg_3450);

assign and_ln42_80_fu_1471_p2 = (xor_ln42_45_fu_1465_p2 & or_ln42_33_fu_1459_p2);

assign and_ln42_81_fu_1477_p2 = (tmp_2807_fu_1359_p3 & select_ln42_44_fu_1445_p3);

assign and_ln42_82_fu_2559_p2 = (xor_ln42_46_fu_2553_p2 & tmp_2803_reg_3440);

assign and_ln42_83_fu_1612_p2 = (tmp_2811_fu_1580_p3 & or_ln42_35_fu_1606_p2);

assign and_ln42_84_fu_1642_p2 = (xor_ln42_47_fu_1636_p2 & tmp_2812_fu_1598_p3);

assign and_ln42_85_fu_1708_p2 = (xor_ln42_67_fu_1702_p2 & icmp_ln42_48_fu_1658_p2);

assign and_ln42_86_fu_2583_p2 = (icmp_ln42_49_reg_3486 & and_ln42_84_reg_3481);

assign and_ln42_87_fu_1740_p2 = (xor_ln42_49_fu_1734_p2 & or_ln42_36_fu_1728_p2);

assign and_ln42_88_fu_1746_p2 = (tmp_2813_fu_1628_p3 & select_ln42_48_fu_1714_p3);

assign and_ln42_89_fu_2598_p2 = (xor_ln42_50_fu_2592_p2 & tmp_2809_reg_3471);

assign and_ln42_90_fu_1815_p2 = (tmp_2817_fu_1783_p3 & or_ln42_38_fu_1809_p2);

assign and_ln42_91_fu_1845_p2 = (xor_ln42_51_fu_1839_p2 & tmp_2818_fu_1801_p3);

assign and_ln42_92_fu_1911_p2 = (xor_ln42_68_fu_1905_p2 & icmp_ln42_52_fu_1861_p2);

assign and_ln42_93_fu_2622_p2 = (icmp_ln42_53_reg_3517 & and_ln42_91_reg_3512);

assign and_ln42_94_fu_1943_p2 = (xor_ln42_53_fu_1937_p2 & or_ln42_39_fu_1931_p2);

assign and_ln42_95_fu_1949_p2 = (tmp_2819_fu_1831_p3 & select_ln42_52_fu_1917_p3);

assign and_ln42_96_fu_2637_p2 = (xor_ln42_54_fu_2631_p2 & tmp_2815_reg_3502);

assign and_ln42_97_fu_2084_p2 = (tmp_2823_fu_2052_p3 & or_ln42_41_fu_2078_p2);

assign and_ln42_98_fu_2114_p2 = (xor_ln42_55_fu_2108_p2 & tmp_2824_fu_2070_p3);

assign and_ln42_99_fu_2180_p2 = (xor_ln42_69_fu_2174_p2 & icmp_ln42_56_fu_2130_p2);

assign and_ln42_fu_668_p2 = (tmp_2787_fu_636_p3 & or_ln42_fu_662_p2);

assign and_ln58_12_fu_2793_p2 = (xor_ln58_24_fu_2787_p2 & tmp_2833_fu_2759_p3);

assign and_ln58_13_fu_2883_p2 = (xor_ln58_27_fu_2877_p2 & tmp_2836_fu_2869_p3);

assign and_ln58_14_fu_2895_p2 = (xor_ln58_28_fu_2889_p2 & tmp_2835_fu_2861_p3);

assign and_ln58_15_fu_2985_p2 = (xor_ln58_31_fu_2979_p2 & tmp_2838_fu_2971_p3);

assign and_ln58_16_fu_2997_p2 = (xor_ln58_32_fu_2991_p2 & tmp_2837_fu_2963_p3);

assign and_ln58_17_fu_3087_p2 = (xor_ln58_35_fu_3081_p2 & tmp_2840_fu_3073_p3);

assign and_ln58_18_fu_3099_p2 = (xor_ln58_36_fu_3093_p2 & tmp_2839_fu_3065_p3);

assign and_ln58_19_fu_3224_p2 = (xor_ln58_39_fu_3219_p2 & tmp_2842_reg_3608);

assign and_ln58_20_fu_3234_p2 = (xor_ln58_40_fu_3229_p2 & tmp_2841_reg_3601);

assign and_ln58_21_fu_3282_p2 = (xor_ln58_43_fu_3277_p2 & tmp_2844_reg_3628);

assign and_ln58_22_fu_3292_p2 = (xor_ln58_44_fu_3287_p2 & tmp_2843_reg_3621);

assign and_ln58_fu_2781_p2 = (xor_ln58_fu_2775_p2 & tmp_2834_fu_2767_p3);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign icmp_ln42_32_fu_714_p2 = ((tmp_8_fu_704_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln42_33_fu_730_p2 = ((tmp_s_fu_720_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln42_34_fu_736_p2 = ((tmp_s_fu_720_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_35_fu_851_p2 = ((trunc_ln42_15_fu_847_p1 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_36_fu_917_p2 = ((tmp_1039_fu_907_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln42_37_fu_933_p2 = ((tmp_1040_fu_923_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln42_38_fu_939_p2 = ((tmp_1040_fu_923_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_39_fu_1120_p2 = ((trunc_ln42_16_fu_1116_p1 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_40_fu_1186_p2 = ((tmp_1041_fu_1176_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln42_41_fu_1202_p2 = ((tmp_1042_fu_1192_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln42_42_fu_1208_p2 = ((tmp_1042_fu_1192_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_43_fu_1323_p2 = ((trunc_ln42_17_fu_1319_p1 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_44_fu_1389_p2 = ((tmp_1043_fu_1379_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln42_45_fu_1405_p2 = ((tmp_1044_fu_1395_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln42_46_fu_1411_p2 = ((tmp_1044_fu_1395_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_47_fu_1592_p2 = ((trunc_ln42_18_fu_1588_p1 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_48_fu_1658_p2 = ((tmp_1045_fu_1648_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln42_49_fu_1674_p2 = ((tmp_1046_fu_1664_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln42_50_fu_1680_p2 = ((tmp_1046_fu_1664_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_51_fu_1795_p2 = ((trunc_ln42_19_fu_1791_p1 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_52_fu_1861_p2 = ((tmp_1047_fu_1851_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln42_53_fu_1877_p2 = ((tmp_1048_fu_1867_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln42_54_fu_1883_p2 = ((tmp_1048_fu_1867_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_55_fu_2064_p2 = ((trunc_ln42_20_fu_2060_p1 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_56_fu_2130_p2 = ((tmp_1049_fu_2120_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln42_57_fu_2146_p2 = ((tmp_1050_fu_2136_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln42_58_fu_2152_p2 = ((tmp_1050_fu_2136_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_59_fu_2267_p2 = ((trunc_ln42_21_fu_2263_p1 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_60_fu_2333_p2 = ((tmp_1051_fu_2323_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln42_61_fu_2349_p2 = ((tmp_1052_fu_2339_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln42_62_fu_2355_p2 = ((tmp_1052_fu_2339_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_648_p2 = ((trunc_ln42_fu_644_p1 != 8'd0) ? 1'b1 : 1'b0);

assign mul_ln73_10_fu_290_p0 = sext_ln73_14_fu_1071_p1;

assign mul_ln73_11_fu_295_p0 = sext_ln73_17_fu_1543_p1;

assign mul_ln73_12_fu_292_p0 = sext_ln73_17_fu_1543_p1;

assign mul_ln73_13_fu_293_p0 = sext_ln73_20_fu_2015_p1;

assign mul_ln73_14_fu_291_p0 = sext_ln73_20_fu_2015_p1;

assign mul_ln73_8_fu_294_p0 = sext_ln73_fu_599_p1;

assign mul_ln73_9_fu_296_p0 = sext_ln73_14_fu_1071_p1;

assign mul_ln73_fu_297_p0 = sext_ln73_fu_599_p1;

assign or_ln42_24_fu_784_p2 = (xor_ln42_32_fu_778_p2 | tmp_2789_fu_684_p3);

assign or_ln42_25_fu_2454_p2 = (and_ln42_61_fu_2442_p2 | and_ln42_59_reg_3367);

assign or_ln42_26_fu_865_p2 = (tmp_2792_fu_831_p3 | icmp_ln42_35_fu_851_p2);

assign or_ln42_27_fu_987_p2 = (xor_ln42_36_fu_981_p2 | tmp_2795_fu_887_p3);

assign or_ln42_28_fu_2493_p2 = (and_ln42_68_fu_2481_p2 | and_ln42_66_reg_3398);

assign or_ln42_29_fu_1134_p2 = (tmp_2798_fu_1100_p3 | icmp_ln42_39_fu_1120_p2);

assign or_ln42_30_fu_1256_p2 = (xor_ln42_40_fu_1250_p2 | tmp_2801_fu_1156_p3);

assign or_ln42_31_fu_2532_p2 = (and_ln42_75_fu_2520_p2 | and_ln42_73_reg_3429);

assign or_ln42_32_fu_1337_p2 = (tmp_2804_fu_1303_p3 | icmp_ln42_43_fu_1323_p2);

assign or_ln42_33_fu_1459_p2 = (xor_ln42_44_fu_1453_p2 | tmp_2807_fu_1359_p3);

assign or_ln42_34_fu_2571_p2 = (and_ln42_82_fu_2559_p2 | and_ln42_80_reg_3460);

assign or_ln42_35_fu_1606_p2 = (tmp_2810_fu_1572_p3 | icmp_ln42_47_fu_1592_p2);

assign or_ln42_36_fu_1728_p2 = (xor_ln42_48_fu_1722_p2 | tmp_2813_fu_1628_p3);

assign or_ln42_37_fu_2610_p2 = (and_ln42_89_fu_2598_p2 | and_ln42_87_reg_3491);

assign or_ln42_38_fu_1809_p2 = (tmp_2816_fu_1775_p3 | icmp_ln42_51_fu_1795_p2);

assign or_ln42_39_fu_1931_p2 = (xor_ln42_52_fu_1925_p2 | tmp_2819_fu_1831_p3);

assign or_ln42_40_fu_2649_p2 = (and_ln42_96_fu_2637_p2 | and_ln42_94_reg_3522);

assign or_ln42_41_fu_2078_p2 = (tmp_2822_fu_2044_p3 | icmp_ln42_55_fu_2064_p2);

assign or_ln42_42_fu_2200_p2 = (xor_ln42_56_fu_2194_p2 | tmp_2825_fu_2100_p3);

assign or_ln42_43_fu_2688_p2 = (and_ln42_103_fu_2676_p2 | and_ln42_101_reg_3553);

assign or_ln42_44_fu_2281_p2 = (tmp_2828_fu_2247_p3 | icmp_ln42_59_fu_2267_p2);

assign or_ln42_45_fu_2403_p2 = (xor_ln42_60_fu_2397_p2 | tmp_2831_fu_2303_p3);

assign or_ln42_46_fu_2727_p2 = (and_ln42_110_fu_2715_p2 | and_ln42_108_reg_3584);

assign or_ln42_47_fu_2431_p2 = (and_ln42_60_reg_3373 | and_ln42_58_fu_2427_p2);

assign or_ln42_48_fu_2470_p2 = (and_ln42_67_reg_3404 | and_ln42_65_fu_2466_p2);

assign or_ln42_49_fu_2509_p2 = (and_ln42_74_reg_3435 | and_ln42_72_fu_2505_p2);

assign or_ln42_50_fu_2548_p2 = (and_ln42_81_reg_3466 | and_ln42_79_fu_2544_p2);

assign or_ln42_51_fu_2587_p2 = (and_ln42_88_reg_3497 | and_ln42_86_fu_2583_p2);

assign or_ln42_52_fu_2626_p2 = (and_ln42_95_reg_3528 | and_ln42_93_fu_2622_p2);

assign or_ln42_53_fu_2665_p2 = (and_ln42_102_reg_3559 | and_ln42_100_fu_2661_p2);

assign or_ln42_54_fu_2704_p2 = (and_ln42_109_reg_3590 | and_ln42_107_fu_2700_p2);

assign or_ln42_fu_662_p2 = (tmp_2786_fu_628_p3 | icmp_ln42_fu_648_p2);

assign or_ln58_10_fu_3307_p2 = (xor_ln58_46_fu_3301_p2 | and_ln58_21_fu_3282_p2);

assign or_ln58_6_fu_2913_p2 = (xor_ln58_30_fu_2907_p2 | and_ln58_13_fu_2883_p2);

assign or_ln58_7_fu_3015_p2 = (xor_ln58_34_fu_3009_p2 | and_ln58_15_fu_2985_p2);

assign or_ln58_8_fu_3117_p2 = (xor_ln58_38_fu_3111_p2 | and_ln58_17_fu_3087_p2);

assign or_ln58_9_fu_3249_p2 = (xor_ln58_42_fu_3243_p2 | and_ln58_19_fu_3224_p2);

assign or_ln58_fu_2811_p2 = (xor_ln58_26_fu_2805_p2 | and_ln58_fu_2781_p2);

assign select_ln42_32_fu_770_p3 = ((and_ln42_56_fu_698_p2[0:0] == 1'b1) ? and_ln42_57_fu_764_p2 : icmp_ln42_33_fu_730_p2);

assign select_ln42_33_fu_2447_p3 = ((and_ln42_59_reg_3367[0:0] == 1'b1) ? 13'd4095 : 13'd4096);

assign select_ln42_34_fu_2459_p3 = ((or_ln42_25_fu_2454_p2[0:0] == 1'b1) ? select_ln42_33_fu_2447_p3 : add_ln42_reg_3352);

assign select_ln42_35_fu_945_p3 = ((and_ln42_63_fu_901_p2[0:0] == 1'b1) ? icmp_ln42_37_fu_933_p2 : icmp_ln42_38_fu_939_p2);

assign select_ln42_36_fu_973_p3 = ((and_ln42_63_fu_901_p2[0:0] == 1'b1) ? and_ln42_64_fu_967_p2 : icmp_ln42_37_fu_933_p2);

assign select_ln42_37_fu_2486_p3 = ((and_ln42_66_reg_3398[0:0] == 1'b1) ? 13'd4095 : 13'd4096);

assign select_ln42_38_fu_2498_p3 = ((or_ln42_28_fu_2493_p2[0:0] == 1'b1) ? select_ln42_37_fu_2486_p3 : add_ln42_8_reg_3383);

assign select_ln42_39_fu_1214_p3 = ((and_ln42_70_fu_1170_p2[0:0] == 1'b1) ? icmp_ln42_41_fu_1202_p2 : icmp_ln42_42_fu_1208_p2);

assign select_ln42_40_fu_1242_p3 = ((and_ln42_70_fu_1170_p2[0:0] == 1'b1) ? and_ln42_71_fu_1236_p2 : icmp_ln42_41_fu_1202_p2);

assign select_ln42_41_fu_2525_p3 = ((and_ln42_73_reg_3429[0:0] == 1'b1) ? 13'd4095 : 13'd4096);

assign select_ln42_42_fu_2537_p3 = ((or_ln42_31_fu_2532_p2[0:0] == 1'b1) ? select_ln42_41_fu_2525_p3 : add_ln42_9_reg_3414);

assign select_ln42_43_fu_1417_p3 = ((and_ln42_77_fu_1373_p2[0:0] == 1'b1) ? icmp_ln42_45_fu_1405_p2 : icmp_ln42_46_fu_1411_p2);

assign select_ln42_44_fu_1445_p3 = ((and_ln42_77_fu_1373_p2[0:0] == 1'b1) ? and_ln42_78_fu_1439_p2 : icmp_ln42_45_fu_1405_p2);

assign select_ln42_45_fu_2564_p3 = ((and_ln42_80_reg_3460[0:0] == 1'b1) ? 13'd4095 : 13'd4096);

assign select_ln42_46_fu_2576_p3 = ((or_ln42_34_fu_2571_p2[0:0] == 1'b1) ? select_ln42_45_fu_2564_p3 : add_ln42_10_reg_3445);

assign select_ln42_47_fu_1686_p3 = ((and_ln42_84_fu_1642_p2[0:0] == 1'b1) ? icmp_ln42_49_fu_1674_p2 : icmp_ln42_50_fu_1680_p2);

assign select_ln42_48_fu_1714_p3 = ((and_ln42_84_fu_1642_p2[0:0] == 1'b1) ? and_ln42_85_fu_1708_p2 : icmp_ln42_49_fu_1674_p2);

assign select_ln42_49_fu_2603_p3 = ((and_ln42_87_reg_3491[0:0] == 1'b1) ? 13'd4095 : 13'd4096);

assign select_ln42_50_fu_2615_p3 = ((or_ln42_37_fu_2610_p2[0:0] == 1'b1) ? select_ln42_49_fu_2603_p3 : add_ln42_11_reg_3476);

assign select_ln42_51_fu_1889_p3 = ((and_ln42_91_fu_1845_p2[0:0] == 1'b1) ? icmp_ln42_53_fu_1877_p2 : icmp_ln42_54_fu_1883_p2);

assign select_ln42_52_fu_1917_p3 = ((and_ln42_91_fu_1845_p2[0:0] == 1'b1) ? and_ln42_92_fu_1911_p2 : icmp_ln42_53_fu_1877_p2);

assign select_ln42_53_fu_2642_p3 = ((and_ln42_94_reg_3522[0:0] == 1'b1) ? 13'd4095 : 13'd4096);

assign select_ln42_54_fu_2654_p3 = ((or_ln42_40_fu_2649_p2[0:0] == 1'b1) ? select_ln42_53_fu_2642_p3 : add_ln42_12_reg_3507);

assign select_ln42_55_fu_2158_p3 = ((and_ln42_98_fu_2114_p2[0:0] == 1'b1) ? icmp_ln42_57_fu_2146_p2 : icmp_ln42_58_fu_2152_p2);

assign select_ln42_56_fu_2186_p3 = ((and_ln42_98_fu_2114_p2[0:0] == 1'b1) ? and_ln42_99_fu_2180_p2 : icmp_ln42_57_fu_2146_p2);

assign select_ln42_57_fu_2681_p3 = ((and_ln42_101_reg_3553[0:0] == 1'b1) ? 13'd4095 : 13'd4096);

assign select_ln42_58_fu_2693_p3 = ((or_ln42_43_fu_2688_p2[0:0] == 1'b1) ? select_ln42_57_fu_2681_p3 : add_ln42_13_reg_3538);

assign select_ln42_59_fu_2361_p3 = ((and_ln42_105_fu_2317_p2[0:0] == 1'b1) ? icmp_ln42_61_fu_2349_p2 : icmp_ln42_62_fu_2355_p2);

assign select_ln42_60_fu_2389_p3 = ((and_ln42_105_fu_2317_p2[0:0] == 1'b1) ? and_ln42_106_fu_2383_p2 : icmp_ln42_61_fu_2349_p2);

assign select_ln42_61_fu_2720_p3 = ((and_ln42_108_reg_3584[0:0] == 1'b1) ? 13'd4095 : 13'd4096);

assign select_ln42_62_fu_2732_p3 = ((or_ln42_46_fu_2727_p2[0:0] == 1'b1) ? select_ln42_61_fu_2720_p3 : add_ln42_14_reg_3569);

assign select_ln42_fu_742_p3 = ((and_ln42_56_fu_698_p2[0:0] == 1'b1) ? icmp_ln42_33_fu_730_p2 : icmp_ln42_34_fu_736_p2);

assign select_ln58_18_fu_2825_p3 = ((and_ln58_12_fu_2793_p2[0:0] == 1'b1) ? 13'd4096 : add_ln58_12_fu_2747_p2);

assign select_ln58_19_fu_2833_p3 = ((or_ln58_fu_2811_p2[0:0] == 1'b1) ? select_ln58_fu_2817_p3 : select_ln58_18_fu_2825_p3);

assign select_ln58_20_fu_2919_p3 = ((xor_ln58_29_fu_2901_p2[0:0] == 1'b1) ? 13'd4095 : add_ln58_13_fu_2849_p2);

assign select_ln58_21_fu_2927_p3 = ((and_ln58_14_fu_2895_p2[0:0] == 1'b1) ? 13'd4096 : add_ln58_13_fu_2849_p2);

assign select_ln58_22_fu_2935_p3 = ((or_ln58_6_fu_2913_p2[0:0] == 1'b1) ? select_ln58_20_fu_2919_p3 : select_ln58_21_fu_2927_p3);

assign select_ln58_23_fu_3021_p3 = ((xor_ln58_33_fu_3003_p2[0:0] == 1'b1) ? 13'd4095 : add_ln58_14_fu_2951_p2);

assign select_ln58_24_fu_3029_p3 = ((and_ln58_16_fu_2997_p2[0:0] == 1'b1) ? 13'd4096 : add_ln58_14_fu_2951_p2);

assign select_ln58_25_fu_3037_p3 = ((or_ln58_7_fu_3015_p2[0:0] == 1'b1) ? select_ln58_23_fu_3021_p3 : select_ln58_24_fu_3029_p3);

assign select_ln58_26_fu_3123_p3 = ((xor_ln58_37_fu_3105_p2[0:0] == 1'b1) ? 13'd4095 : add_ln58_15_fu_3053_p2);

assign select_ln58_27_fu_3131_p3 = ((and_ln58_18_fu_3099_p2[0:0] == 1'b1) ? 13'd4096 : add_ln58_15_fu_3053_p2);

assign select_ln58_28_fu_3139_p3 = ((or_ln58_8_fu_3117_p2[0:0] == 1'b1) ? select_ln58_26_fu_3123_p3 : select_ln58_27_fu_3131_p3);

assign select_ln58_29_fu_3255_p3 = ((xor_ln58_41_fu_3239_p2[0:0] == 1'b1) ? 13'd4095 : add_ln58_16_reg_3595);

assign select_ln58_30_fu_3262_p3 = ((and_ln58_20_fu_3234_p2[0:0] == 1'b1) ? 13'd4096 : add_ln58_16_reg_3595);

assign select_ln58_31_fu_3269_p3 = ((or_ln58_9_fu_3249_p2[0:0] == 1'b1) ? select_ln58_29_fu_3255_p3 : select_ln58_30_fu_3262_p3);

assign select_ln58_32_fu_3313_p3 = ((xor_ln58_45_fu_3297_p2[0:0] == 1'b1) ? 13'd4095 : add_ln58_17_reg_3615);

assign select_ln58_33_fu_3320_p3 = ((and_ln58_22_fu_3292_p2[0:0] == 1'b1) ? 13'd4096 : add_ln58_17_reg_3615);

assign select_ln58_34_fu_3327_p3 = ((or_ln58_10_fu_3307_p2[0:0] == 1'b1) ? select_ln58_32_fu_3313_p3 : select_ln58_33_fu_3320_p3);

assign select_ln58_fu_2817_p3 = ((xor_ln58_25_fu_2799_p2[0:0] == 1'b1) ? 13'd4095 : add_ln58_12_fu_2747_p2);

assign sext_ln58_12_fu_2743_p1 = select_ln42_42_fu_2537_p3;

assign sext_ln58_13_fu_2841_p1 = select_ln42_38_fu_2498_p3;

assign sext_ln58_14_fu_2845_p1 = select_ln42_46_fu_2576_p3;

assign sext_ln58_15_fu_2943_p1 = select_ln58_19_fu_2833_p3;

assign sext_ln58_16_fu_2947_p1 = select_ln42_50_fu_2615_p3;

assign sext_ln58_17_fu_3045_p1 = select_ln58_22_fu_2935_p3;

assign sext_ln58_18_fu_3049_p1 = select_ln42_54_fu_2654_p3;

assign sext_ln58_19_fu_3147_p1 = select_ln58_25_fu_3037_p3;

assign sext_ln58_20_fu_3151_p1 = select_ln42_58_fu_2693_p3;

assign sext_ln58_21_fu_3183_p1 = select_ln58_28_fu_3139_p3;

assign sext_ln58_22_fu_3187_p1 = select_ln42_62_fu_2732_p3;

assign sext_ln58_fu_2739_p1 = select_ln42_34_fu_2459_p3;

assign sext_ln73_14_fu_1071_p1 = $signed(a_4_fu_1011_p29);

assign sext_ln73_17_fu_1543_p1 = $signed(a_5_fu_1483_p29);

assign sext_ln73_20_fu_2015_p1 = $signed(a_6_fu_1955_p29);

assign sext_ln73_fu_599_p1 = $signed(a_fu_539_p29);

assign tmp_1039_fu_907_p4 = {{mul_ln73_8_fu_294_p2[25:23]}};

assign tmp_1040_fu_923_p4 = {{mul_ln73_8_fu_294_p2[25:22]}};

assign tmp_1041_fu_1176_p4 = {{mul_ln73_9_fu_296_p2[25:23]}};

assign tmp_1042_fu_1192_p4 = {{mul_ln73_9_fu_296_p2[25:22]}};

assign tmp_1043_fu_1379_p4 = {{mul_ln73_10_fu_290_p2[25:23]}};

assign tmp_1044_fu_1395_p4 = {{mul_ln73_10_fu_290_p2[25:22]}};

assign tmp_1045_fu_1648_p4 = {{mul_ln73_11_fu_295_p2[25:23]}};

assign tmp_1046_fu_1664_p4 = {{mul_ln73_11_fu_295_p2[25:22]}};

assign tmp_1047_fu_1851_p4 = {{mul_ln73_12_fu_292_p2[25:23]}};

assign tmp_1048_fu_1867_p4 = {{mul_ln73_12_fu_292_p2[25:22]}};

assign tmp_1049_fu_2120_p4 = {{mul_ln73_13_fu_293_p2[25:23]}};

assign tmp_1050_fu_2136_p4 = {{mul_ln73_13_fu_293_p2[25:22]}};

assign tmp_1051_fu_2323_p4 = {{mul_ln73_14_fu_291_p2[25:23]}};

assign tmp_1052_fu_2339_p4 = {{mul_ln73_14_fu_291_p2[25:22]}};

assign tmp_2786_fu_628_p3 = mul_ln73_fu_297_p2[32'd9];

assign tmp_2787_fu_636_p3 = mul_ln73_fu_297_p2[32'd8];

assign tmp_2788_fu_654_p3 = mul_ln73_fu_297_p2[32'd21];

assign tmp_2789_fu_684_p3 = add_ln42_fu_678_p2[32'd12];

assign tmp_2790_fu_750_p3 = mul_ln73_fu_297_p2[32'd22];

assign tmp_2791_fu_813_p3 = mul_ln73_8_fu_294_p2[32'd25];

assign tmp_2792_fu_831_p3 = mul_ln73_8_fu_294_p2[32'd9];

assign tmp_2793_fu_839_p3 = mul_ln73_8_fu_294_p2[32'd8];

assign tmp_2794_fu_857_p3 = mul_ln73_8_fu_294_p2[32'd21];

assign tmp_2795_fu_887_p3 = add_ln42_8_fu_881_p2[32'd12];

assign tmp_2796_fu_953_p3 = mul_ln73_8_fu_294_p2[32'd22];

assign tmp_2797_fu_1082_p3 = mul_ln73_9_fu_296_p2[32'd25];

assign tmp_2798_fu_1100_p3 = mul_ln73_9_fu_296_p2[32'd9];

assign tmp_2799_fu_1108_p3 = mul_ln73_9_fu_296_p2[32'd8];

assign tmp_2800_fu_1126_p3 = mul_ln73_9_fu_296_p2[32'd21];

assign tmp_2801_fu_1156_p3 = add_ln42_9_fu_1150_p2[32'd12];

assign tmp_2802_fu_1222_p3 = mul_ln73_9_fu_296_p2[32'd22];

assign tmp_2803_fu_1285_p3 = mul_ln73_10_fu_290_p2[32'd25];

assign tmp_2804_fu_1303_p3 = mul_ln73_10_fu_290_p2[32'd9];

assign tmp_2805_fu_1311_p3 = mul_ln73_10_fu_290_p2[32'd8];

assign tmp_2806_fu_1329_p3 = mul_ln73_10_fu_290_p2[32'd21];

assign tmp_2807_fu_1359_p3 = add_ln42_10_fu_1353_p2[32'd12];

assign tmp_2808_fu_1425_p3 = mul_ln73_10_fu_290_p2[32'd22];

assign tmp_2809_fu_1554_p3 = mul_ln73_11_fu_295_p2[32'd25];

assign tmp_2810_fu_1572_p3 = mul_ln73_11_fu_295_p2[32'd9];

assign tmp_2811_fu_1580_p3 = mul_ln73_11_fu_295_p2[32'd8];

assign tmp_2812_fu_1598_p3 = mul_ln73_11_fu_295_p2[32'd21];

assign tmp_2813_fu_1628_p3 = add_ln42_11_fu_1622_p2[32'd12];

assign tmp_2814_fu_1694_p3 = mul_ln73_11_fu_295_p2[32'd22];

assign tmp_2815_fu_1757_p3 = mul_ln73_12_fu_292_p2[32'd25];

assign tmp_2816_fu_1775_p3 = mul_ln73_12_fu_292_p2[32'd9];

assign tmp_2817_fu_1783_p3 = mul_ln73_12_fu_292_p2[32'd8];

assign tmp_2818_fu_1801_p3 = mul_ln73_12_fu_292_p2[32'd21];

assign tmp_2819_fu_1831_p3 = add_ln42_12_fu_1825_p2[32'd12];

assign tmp_2820_fu_1897_p3 = mul_ln73_12_fu_292_p2[32'd22];

assign tmp_2821_fu_2026_p3 = mul_ln73_13_fu_293_p2[32'd25];

assign tmp_2822_fu_2044_p3 = mul_ln73_13_fu_293_p2[32'd9];

assign tmp_2823_fu_2052_p3 = mul_ln73_13_fu_293_p2[32'd8];

assign tmp_2824_fu_2070_p3 = mul_ln73_13_fu_293_p2[32'd21];

assign tmp_2825_fu_2100_p3 = add_ln42_13_fu_2094_p2[32'd12];

assign tmp_2826_fu_2166_p3 = mul_ln73_13_fu_293_p2[32'd22];

assign tmp_2827_fu_2229_p3 = mul_ln73_14_fu_291_p2[32'd25];

assign tmp_2828_fu_2247_p3 = mul_ln73_14_fu_291_p2[32'd9];

assign tmp_2829_fu_2255_p3 = mul_ln73_14_fu_291_p2[32'd8];

assign tmp_2830_fu_2273_p3 = mul_ln73_14_fu_291_p2[32'd21];

assign tmp_2831_fu_2303_p3 = add_ln42_14_fu_2297_p2[32'd12];

assign tmp_2832_fu_2369_p3 = mul_ln73_14_fu_291_p2[32'd22];

assign tmp_2833_fu_2759_p3 = add_ln58_fu_2753_p2[32'd13];

assign tmp_2834_fu_2767_p3 = add_ln58_12_fu_2747_p2[32'd12];

assign tmp_2835_fu_2861_p3 = add_ln58_6_fu_2855_p2[32'd13];

assign tmp_2836_fu_2869_p3 = add_ln58_13_fu_2849_p2[32'd12];

assign tmp_2837_fu_2963_p3 = add_ln58_7_fu_2957_p2[32'd13];

assign tmp_2838_fu_2971_p3 = add_ln58_14_fu_2951_p2[32'd12];

assign tmp_2839_fu_3065_p3 = add_ln58_8_fu_3059_p2[32'd13];

assign tmp_2840_fu_3073_p3 = add_ln58_15_fu_3053_p2[32'd12];

assign tmp_8_fu_704_p4 = {{mul_ln73_fu_297_p2[25:23]}};

assign tmp_fu_610_p3 = mul_ln73_fu_297_p2[32'd25];

assign tmp_s_fu_720_p4 = {{mul_ln73_fu_297_p2[25:22]}};

assign trunc_ln42_15_fu_847_p1 = mul_ln73_8_fu_294_p2[7:0];

assign trunc_ln42_16_fu_1116_p1 = mul_ln73_9_fu_296_p2[7:0];

assign trunc_ln42_17_fu_1319_p1 = mul_ln73_10_fu_290_p2[7:0];

assign trunc_ln42_18_fu_1588_p1 = mul_ln73_11_fu_295_p2[7:0];

assign trunc_ln42_19_fu_1791_p1 = mul_ln73_12_fu_292_p2[7:0];

assign trunc_ln42_1_fu_1562_p4 = {{mul_ln73_11_fu_295_p2[21:9]}};

assign trunc_ln42_20_fu_2060_p1 = mul_ln73_13_fu_293_p2[7:0];

assign trunc_ln42_21_fu_2263_p1 = mul_ln73_14_fu_291_p2[7:0];

assign trunc_ln42_2_fu_1765_p4 = {{mul_ln73_12_fu_292_p2[21:9]}};

assign trunc_ln42_3_fu_2034_p4 = {{mul_ln73_13_fu_293_p2[21:9]}};

assign trunc_ln42_4_fu_2237_p4 = {{mul_ln73_14_fu_291_p2[21:9]}};

assign trunc_ln42_8_fu_821_p4 = {{mul_ln73_8_fu_294_p2[21:9]}};

assign trunc_ln42_9_fu_1090_p4 = {{mul_ln73_9_fu_296_p2[21:9]}};

assign trunc_ln42_fu_644_p1 = mul_ln73_fu_297_p2[7:0];

assign trunc_ln42_s_fu_1293_p4 = {{mul_ln73_10_fu_290_p2[21:9]}};

assign trunc_ln_fu_618_p4 = {{mul_ln73_fu_297_p2[21:9]}};

assign xor_ln42_32_fu_778_p2 = (select_ln42_fu_742_p3 ^ 1'd1);

assign xor_ln42_33_fu_790_p2 = (tmp_fu_610_p3 ^ 1'd1);

assign xor_ln42_34_fu_2436_p2 = (or_ln42_47_fu_2431_p2 ^ 1'd1);

assign xor_ln42_35_fu_895_p2 = (tmp_2795_fu_887_p3 ^ 1'd1);

assign xor_ln42_36_fu_981_p2 = (select_ln42_35_fu_945_p3 ^ 1'd1);

assign xor_ln42_37_fu_993_p2 = (tmp_2791_fu_813_p3 ^ 1'd1);

assign xor_ln42_38_fu_2475_p2 = (or_ln42_48_fu_2470_p2 ^ 1'd1);

assign xor_ln42_39_fu_1164_p2 = (tmp_2801_fu_1156_p3 ^ 1'd1);

assign xor_ln42_40_fu_1250_p2 = (select_ln42_39_fu_1214_p3 ^ 1'd1);

assign xor_ln42_41_fu_1262_p2 = (tmp_2797_fu_1082_p3 ^ 1'd1);

assign xor_ln42_42_fu_2514_p2 = (or_ln42_49_fu_2509_p2 ^ 1'd1);

assign xor_ln42_43_fu_1367_p2 = (tmp_2807_fu_1359_p3 ^ 1'd1);

assign xor_ln42_44_fu_1453_p2 = (select_ln42_43_fu_1417_p3 ^ 1'd1);

assign xor_ln42_45_fu_1465_p2 = (tmp_2803_fu_1285_p3 ^ 1'd1);

assign xor_ln42_46_fu_2553_p2 = (or_ln42_50_fu_2548_p2 ^ 1'd1);

assign xor_ln42_47_fu_1636_p2 = (tmp_2813_fu_1628_p3 ^ 1'd1);

assign xor_ln42_48_fu_1722_p2 = (select_ln42_47_fu_1686_p3 ^ 1'd1);

assign xor_ln42_49_fu_1734_p2 = (tmp_2809_fu_1554_p3 ^ 1'd1);

assign xor_ln42_50_fu_2592_p2 = (or_ln42_51_fu_2587_p2 ^ 1'd1);

assign xor_ln42_51_fu_1839_p2 = (tmp_2819_fu_1831_p3 ^ 1'd1);

assign xor_ln42_52_fu_1925_p2 = (select_ln42_51_fu_1889_p3 ^ 1'd1);

assign xor_ln42_53_fu_1937_p2 = (tmp_2815_fu_1757_p3 ^ 1'd1);

assign xor_ln42_54_fu_2631_p2 = (or_ln42_52_fu_2626_p2 ^ 1'd1);

assign xor_ln42_55_fu_2108_p2 = (tmp_2825_fu_2100_p3 ^ 1'd1);

assign xor_ln42_56_fu_2194_p2 = (select_ln42_55_fu_2158_p3 ^ 1'd1);

assign xor_ln42_57_fu_2206_p2 = (tmp_2821_fu_2026_p3 ^ 1'd1);

assign xor_ln42_58_fu_2670_p2 = (or_ln42_53_fu_2665_p2 ^ 1'd1);

assign xor_ln42_59_fu_2311_p2 = (tmp_2831_fu_2303_p3 ^ 1'd1);

assign xor_ln42_60_fu_2397_p2 = (select_ln42_59_fu_2361_p3 ^ 1'd1);

assign xor_ln42_61_fu_2409_p2 = (tmp_2827_fu_2229_p3 ^ 1'd1);

assign xor_ln42_62_fu_2709_p2 = (or_ln42_54_fu_2704_p2 ^ 1'd1);

assign xor_ln42_63_fu_758_p2 = (tmp_2790_fu_750_p3 ^ 1'd1);

assign xor_ln42_64_fu_961_p2 = (tmp_2796_fu_953_p3 ^ 1'd1);

assign xor_ln42_65_fu_1230_p2 = (tmp_2802_fu_1222_p3 ^ 1'd1);

assign xor_ln42_66_fu_1433_p2 = (tmp_2808_fu_1425_p3 ^ 1'd1);

assign xor_ln42_67_fu_1702_p2 = (tmp_2814_fu_1694_p3 ^ 1'd1);

assign xor_ln42_68_fu_1905_p2 = (tmp_2820_fu_1897_p3 ^ 1'd1);

assign xor_ln42_69_fu_2174_p2 = (tmp_2826_fu_2166_p3 ^ 1'd1);

assign xor_ln42_70_fu_2377_p2 = (tmp_2832_fu_2369_p3 ^ 1'd1);

assign xor_ln42_fu_692_p2 = (tmp_2789_fu_684_p3 ^ 1'd1);

assign xor_ln58_24_fu_2787_p2 = (tmp_2834_fu_2767_p3 ^ 1'd1);

assign xor_ln58_25_fu_2799_p2 = (tmp_2834_fu_2767_p3 ^ tmp_2833_fu_2759_p3);

assign xor_ln58_26_fu_2805_p2 = (xor_ln58_25_fu_2799_p2 ^ 1'd1);

assign xor_ln58_27_fu_2877_p2 = (tmp_2835_fu_2861_p3 ^ 1'd1);

assign xor_ln58_28_fu_2889_p2 = (tmp_2836_fu_2869_p3 ^ 1'd1);

assign xor_ln58_29_fu_2901_p2 = (tmp_2836_fu_2869_p3 ^ tmp_2835_fu_2861_p3);

assign xor_ln58_30_fu_2907_p2 = (xor_ln58_29_fu_2901_p2 ^ 1'd1);

assign xor_ln58_31_fu_2979_p2 = (tmp_2837_fu_2963_p3 ^ 1'd1);

assign xor_ln58_32_fu_2991_p2 = (tmp_2838_fu_2971_p3 ^ 1'd1);

assign xor_ln58_33_fu_3003_p2 = (tmp_2838_fu_2971_p3 ^ tmp_2837_fu_2963_p3);

assign xor_ln58_34_fu_3009_p2 = (xor_ln58_33_fu_3003_p2 ^ 1'd1);

assign xor_ln58_35_fu_3081_p2 = (tmp_2839_fu_3065_p3 ^ 1'd1);

assign xor_ln58_36_fu_3093_p2 = (tmp_2840_fu_3073_p3 ^ 1'd1);

assign xor_ln58_37_fu_3105_p2 = (tmp_2840_fu_3073_p3 ^ tmp_2839_fu_3065_p3);

assign xor_ln58_38_fu_3111_p2 = (xor_ln58_37_fu_3105_p2 ^ 1'd1);

assign xor_ln58_39_fu_3219_p2 = (tmp_2841_reg_3601 ^ 1'd1);

assign xor_ln58_40_fu_3229_p2 = (tmp_2842_reg_3608 ^ 1'd1);

assign xor_ln58_41_fu_3239_p2 = (tmp_2842_reg_3608 ^ tmp_2841_reg_3601);

assign xor_ln58_42_fu_3243_p2 = (xor_ln58_41_fu_3239_p2 ^ 1'd1);

assign xor_ln58_43_fu_3277_p2 = (tmp_2843_reg_3621 ^ 1'd1);

assign xor_ln58_44_fu_3287_p2 = (tmp_2844_reg_3628 ^ 1'd1);

assign xor_ln58_45_fu_3297_p2 = (tmp_2844_reg_3628 ^ tmp_2843_reg_3621);

assign xor_ln58_46_fu_3301_p2 = (xor_ln58_45_fu_3297_p2 ^ 1'd1);

assign xor_ln58_fu_2775_p2 = (tmp_2833_fu_2759_p3 ^ 1'd1);

assign zext_ln42_10_fu_1349_p1 = and_ln42_76_fu_1343_p2;

assign zext_ln42_11_fu_1618_p1 = and_ln42_83_fu_1612_p2;

assign zext_ln42_12_fu_1821_p1 = and_ln42_90_fu_1815_p2;

assign zext_ln42_13_fu_2090_p1 = and_ln42_97_fu_2084_p2;

assign zext_ln42_14_fu_2293_p1 = and_ln42_104_fu_2287_p2;

assign zext_ln42_8_fu_877_p1 = and_ln42_62_fu_871_p2;

assign zext_ln42_9_fu_1146_p1 = and_ln42_69_fu_1140_p2;

assign zext_ln42_fu_674_p1 = and_ln42_fu_668_p2;

endmodule //myproject_dense_latency_ap_fixed_13_4_4_0_0_ap_fixed_13_4_4_0_0_config5_dense_s
